<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="Documentation.xml" data-mc-path-to-help-system="../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Command References|Desmond Command Reference|The Desmond Configuration File">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <link href="../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" /><title>Common Front-End Parameters in the Desmond config File</title>
        <link href="../Resources/Stylesheets/docs.css" rel="stylesheet" />
        <script src="../Resources/Scripts/custom.modernizr.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/require.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/require.config.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/foundation.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/plugins.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body><a name="aanchor509"></a>
        <MadCap:concept term="Command Reference" /><a name="aanchor510"></a>
        <MadCap:concept term="Desmond" /><a name="desmond_config_file_1551388656_758756"></a>
        <table class="NavLink" data-mc-conditions="Default.ScreenOnly">
            <tr class="NavLink">
                <td class="NavLeft"><span class="NavText">◀ <a class="NavLink MCXref xref xrefNavLink" href="desmond_config_file_macros.htm" xrefformat="{paratext}">Macros in String Values in the Desmond config File</a></span>
                </td>
                <td class="NavCenter"><span class="NavText"><a class="NavLink MCXref xref xrefNavLink" href="desmond_command_referenceTOC.htm" xrefformat="{paratext}">Desmond Command Reference Manual</a></span>
                </td>
                <td class="NavRight"><span class="NavText"><a class="NavLink MCXref xref xrefNavLink" href="desmond_config_file_mini.htm" xrefformat="{paratext}">Parameters for Minimization in the Desmond config File</a> ▶</span>
                </td>
            </tr>
        </table>
        <h1 class="Title">Common Front-End Parameters in the Desmond config File</h1>
        <p>All currently supported parameters are listed and explained below. Each parameter is in a separate subsection.</p>
        <h3 class="Heading3Nonum">fep</h3>
        <p>Common usage:</p><pre>
fep = {
   lambda   = "default:12"
   i_window = ?
   output   = {
      name     = "$JOBNAME$[_replica$REPLICA$].dE"
      first    = 0.0
      interval = 1.2
   }
}
</pre>
        <h4 class="Heading4Nonum">fep.lambda </h4>
        <p>This parameter sets the lambda schedule for FEP calculations. You can set it to a string like <code>default:12</code>, which means “use the default scheme with 12 windows”. To use 20 windows with the default scheme, set the parameter to <code>default:20</code>. Available lambda schedule schemes are: <code>default</code>, <code>quickcharge</code>, and <code>superquickcharge</code>. You can define your own schedule. For instance, for an alchemical free energy calculation, the following syntax can be used: </p><pre>
fep.lambda = {
    bondedA = [1.0 0.9 ...]
    bondedB = [0.0 0.1 ...]
    chargeA = [1.0 0.75 ...]
    chargeB = [0.0 0.25 ...]
    vdwA = [1.0 1.0 ...]
    vdwB = [0.0 0.0 ...]
}
</pre>
        <p>Here, A refers to the original molecule while B refers to the mutated molecule, and the ellipsis represents additional values that you would explicitly include. The number of values (lambda stages) must be consistent in all 6 lists.</p>
        <p>Similarly for a total free energy calculation the following syntax may be used:</p><pre>
fep.lambda = {
    coulomb = [0.0 0.1 ...]
    vdw = [1.0 1.0 ...]
}
</pre>
        <h4 class="Heading4Nonum">fep.i_window </h4>
        <p>This parameter is automatically set by <code>multisim</code> to the index of the lambda window. You do not normally set or adjust this parameter.</p>
        <h4 class="Heading4Nonum">Default Lambda Schedules</h4>
        <p>The default 12 step lambda schedule for relative free energy calculations is:</p><pre>
lambda = {
  bondedA = [1.0 0.916666666667 0.833333333333 0.75 0.666666666667 0.583333333333 &#160;&#160;0.416666666667 0.333333333333 0.25 0.166666666667 0.0833333333333 0.0]
  bondedB = [0.0 0.0833333333333 0.166666666667 0.25 0.333333333333 0.416666666667 &#160;&#160;0.583333333333 0.666666666667 0.75 0.833333333333 0.916666666667 1.0]
  chargeA = [1.0 0.75 0.5  0.25 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0]
  chargeB = [0.0 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.25 0.5  0.75 1.0]
  vdwA    = [1.0 1.0  1.0  1.0  1.0  0.67 0.46 0.33 0.25 0.19 0.12 0.0]
  vdwB    = [0.0 0.12 0.19 0.25 0.33 0.46 0.67 1.0  1.0  1.0  1.0  1.0]
}  
</pre>
        <p>The default 12 step lambda schedule for absolute free energy calculations is:</p><pre>
lambda = {
   coulomb = [0.0 0.118514957434 0.189778434985 0.24741405481 0.325045439067 &#160;&#160;&#160;0.456296209913 0.674789989504 1.0 1.0 1.0 1.0 1.0 ]
   vdw = [1.0 1.0 1.0 1.0 1.0 0.674789989504 0.456296209913 0.325045439067 &#160;&#160;&#160;0.24741405481 0.189778434985 0.118514957434 0.0 ]
}
</pre>
        <h3 class="Heading3Nonum">cutoff_radius </h3>
        <p>This parameter sets the cutoff radius for the non-bonded interactions. If the particle mesh Ewald (PME) method is used for electrostatic interactions, this sets the cutoff radius for the real space part of the electrostatic interaction calculations.</p>
        <p><code>cutoff_radius = 9.0</code>
        </p>
        <h3 class="Heading3Nonum">taper</h3>
        <p>The taper parameter is used to specify how interactions are truncated at the cutoff. For example,</p><pre>
taper = off
</pre>
        <p>turns off any special treatment of interactions at the cutoff (i.e. they are just truncated). There are several ways to turn on tapering. The simplest way is to set the <code>taper</code> parameter to <code>on</code>, and the default, <code>shift</code>, tapering scheme will be used. In this scheme the tapering consists of shifting the potential to 0 at the <code>cutoff_radius</code>. More elaborate tapering schemes, requiring more detailed information, are supported:</p><pre>
taper = {
    method = potential
    width = 1.0
}
</pre>
        <p>where the <code>method</code> parameter specifies the type of tapering and has one of the following values: <code>potential</code>, <code>c1switch</code>, <code>c2switch</code>, or <code>shift</code>. The <code>width</code> parameter controls the range of distances, between (<code>cutoff_radius</code> - <code>width</code>) and <code>cutoff_radius</code>, over which tapering is applied. For more information on tapering methods, see the <a href="../desmond_users_guide.pdf">Desmond User’s Guide</a>.</p>
        <h3 class="Heading3Nonum">coulomb_method</h3>
        <p>This parameter sets the method for treating Coulombic interactions in the simulation. For example, </p><pre>
coulomb_method = pme
</pre>
        <p>requests that the particle mesh Ewald (PME) method be used.</p>
        <p>Supported values are: <code>pme</code>, <code>cutoff</code>. </p>
        <p>The computational accuracy of the PME method can be controlled by the so-called Ewald tolerance. The smaller the tolerance is, the more accurate but slower the computation is. The default value of the tolerance is 1E-9, which is very accurate for most simulations. If you want to use a different tolerance value, set the <code>coulomb_method</code> parameter explicitly in the following form:</p><pre>
coulomb_method = [pme 1E-9]
</pre>
        <p>where the first element of the list value must be <code>pme</code>, and the second element is the desired tolerance value.</p>
        <h3 class="Heading3Nonum">temperature</h3>
        <p>This parameter sets the temperature of the system. For instance:</p><pre>
temperature = 300.0
</pre>
        <p>requests that a temperature of 300K be used. For multiple thermostats, you must explicitly set the temperature for each of the thermostats using the following syntax:</p><pre>
temperature = [[<i class="UserReplace">temp1</i> <i class="UserReplace">group-index1</i>] [<i class="UserReplace">temp2</i> <i class="UserReplace">group-index2</i>] ...]
</pre>
        <p>where the value of the temperature parameter is a list. Each element of the list is a pair, in which the first value of the pair is the temperature, and the second value is the index of the atom group that should have this temperature.</p>
        <p>For simulated annealing jobs, the value of the temperature parameter specifies the temperature schedule of the annealing process in the following form:</p><pre>
temperature = [[<i class="UserReplace">temp1</i> <i class="UserReplace">time-point1</i>] [<i class="UserReplace">temp2</i> <i class="UserReplace">time-point2</i>] ...]
</pre>
        <p>where the value of the temperature parameter is a list. Each element of the list is a pair, in which the first value of the pair is the reference temperature, the second value is the time point. Between <i class="UserReplace">time-point1</i> and <i class="UserReplace">time-point2</i>, the value of the reference temperature is linearly interpolated from <i class="UserReplace">temp1</i> to <i class="UserReplace">temp2</i>, and so on for the remaining points.</p>
        <h3 class="Heading3Nonum">annealing<b>  <![CDATA[ ]]></b><b></b></h3>
        <p>The annealing parameter indicates whether this is a simulated annealing simulation, and takes values of <code>off</code> (not a simulated annealing simulation) or <code>on</code>. If <code>annealing</code> is set to <code>on</code> then the temperature parameter should be set to an appropriate temperature schedule.</p>
        <h3 class="Heading3Nonum">pressure</h3>
        <p>The target pressure for simulations involving a barostat can be set as follows:</p><pre>
pressure = 1.01325
</pre>
        <p>The default coupling scheme of the barostat to the system is isotropic. Use the following format to use another coupling scheme:</p><pre>
pressure = [1.01325 anisotropic]
</pre>
        <p>where the second element of the list value sets the coupling style. The valid values for coupling style are the following: <code>isotropic</code>, <code>anisotropic</code>.</p>
        <h3 class="Heading3Nonum">surface_tension</h3>
        <p>This parameter sets the surface tension, e.g.</p><pre>
surface_tension = 4E3 
</pre>
        <p>It is ignored unless the <code>ensemble</code> parameter is set to <code>NPgT</code> (or the <code>ensemble.method</code> parameter is set to <code>NPgT</code>).</p>
        <h3 class="Heading3Nonum">ensemble</h3>
        <p>This parameter is used to select the ensemble to use for the simulation. For instance,</p><pre>
ensemble = NPT
</pre>
        <p>requests that the simulation be done in the constant pressure / constant temperature ensemble with a constant number of particles (atoms).</p>
        <p>In the simplest form, you can set the parameter to different ensemble classes, and the default setup for that class is used. Valid values for ensemble class are the following: <code>NPT</code>, <code>NVT</code>, <code>NVE</code>, <code>NPgT</code>, <code>NPAT</code>, <code>NPT_Ber</code>, <code>NVT_Ber</code>, <code>NPT_L</code>, <code>NVT_L</code>. In all of these ensembles the number of particles is constant.  <code>NPgT</code> represents the ensemble where the pressure, temperature, and surface tension (x-y plane) are also held constant. In the NPAT ensemble, in addition to the number of particles, the pressure, temperature, and area of the system (in the xy plane) are held constant. </p>
        <p>The ensembles represented by <code>NPT</code>, <code>NVT</code>, <code>NPgT</code>, and <code>NPAT</code> are controlled by a Nosé-Hoover-based algorithm. Those ending with <code>_Ber</code> or <code>_L</code> use alternative algorithms, namely those based upon the work of Berendsen or Langevin.</p>
        <p>The ensemble can be described in more detail using the following form:</p><pre>
ensemble = {
    class = NPT
    method = MTK
    thermostat.tau = 1.0
    barostat.tau = 2.0
}
</pre>
        <p>where the valid values for <code>class</code> are: <code>NPT</code>, <code>NPgT</code>, <code>NPAT</code>, <code>NVT</code>, and for <code>method</code> are: <code>MTK</code>, <code>NH</code>, <code>Berendsen</code>, <code>Langevin</code>. The <code>thermostat.tau</code> and <code>barostat.tau</code> parameters set the relaxation times for the thermostat and barostat, respectively.</p>
        <p>For the NVE ensemble, the ensemble parameter can be set as:</p><pre>
ensemble = NVE
</pre>
        <p>or as:</p><pre>
ensemble.class = NVE
</pre>
        <h3 class="Heading3Nonum">time</h3>
        <p>The <code>time</code> parameter can be used to set the total simulation time. e.g.,</p><pre>
time = 1200.0
</pre>
        <h3 class="Heading3Nonum">elapsed_time</h3>
        <p>The <code>elapsed_time</code> parameter controls the starting time for the simulation. Normally this is 0. However, if the simulation is a continuation of an earlier one the current time can be set using this parameter, e.g.</p><pre>
elapsed_time = 10.0
</pre>
        <h3 class="Heading3Nonum">timestep</h3>
        <p>The <code>timestep</code> parameter specifies values for the bonded, near, and far time steps, respectively. e.g.,</p><pre>
timestep = [0.002 0.002 0.006]
</pre>
        <h3 class="Heading3Nonum">cpu</h3>
        <p>The <code>cpu</code> parameter specifies the total number of processors and, optionally, the domain-decomposition of the system in the <i>x</i>, <i>y</i>, and <i>z</i> directions. For instance,</p><pre>
cpu = [1 2 4]
</pre>
        <p>species that 1 <span class="Symbol">´</span> 2 <span class="Symbol">´</span> 4 = 8 processors should be used and that the system should be decomposed into to 1, 2 and 4 domains in the <i>x</i>, <i>y</i>, and <i>z</i> directions. Alternatively, you can set this parameter to a single integer value, which specifies the total number of CPUs, and then the decomposition is automatically done based on the shape of the simulation box for the system. For example:</p><pre>
cpu = 8
</pre>
        <p>sets the total number of CPUs to 8. The values specified for the domain decomposition must be powers of 2, 3, or 5, or products of these powers.</p>
        <h3 class="Heading3Nonum">glue</h3>
        <p>Glue tries to ensure that the closest images for closely associated molecules are recorded in the output cms and trajectory files. This parameter specifies the molecule set. Only one value is supported at present: <code>solute</code>. The parameter can be set with:</p><pre>
glue = solute
</pre>
        <h3 class="Heading3Nonum">trajectory</h3>
        <p>The trajectory parameter is used to control how the trajectory is written. </p><pre>
trajectory = {
   name            = "$JOBNAME$[_replica$REPLICA$]_trj"
   first           = 0.0
   interval        = 4.8
   periodicfix     = true
   write_velocity  = true
   frames_per_file = 25
}
</pre>
        <p>The <code>periodicfix</code> parameter, if set to <code>true</code>, instructs Desmond to wrap molecules as a unit within the periodic boundary conditions rather than to wrap individual atoms (potentially splitting molecules across the unit cell in the recorded trajectory). The <code>first</code> parameter is used to indicate at what time to start recording the trajectory, while <code>interval</code> controls how often to write trajectory frames. The <code>frames_per_file</code> parameter is used to control the number of frames written to each file in the trajectory. Large numbers of files can cause very slow copying and reading of the trajectory, and can even cause failure. You should set this parameter so that the total number of files is small enough for the file system to handle efficiently (no more than a few thousand). Fewer files also reduces the IO overhead when reading the files.</p>
        <h3 class="Heading3Nonum">eneseq</h3>
        <p>The <code>eneseq</code> parameter controls when to start recording the <code>.ene</code> file (<code>first</code>), how often to update it (<code>interval</code>), and the precision of the energies (<code>precision</code>). The minimum precision is 8 figures.</p><pre>
eneseq = {
   name     = "$JOBNAME$[_replica$REPLICA$].ene"
   first    = 0.0
   interval = 1.2
   precision = 9
}
</pre>
        <h3 class="Heading3Nonum">checkpt </h3>
        <p>The <code>checkpt</code> parameter specifies the name of the checkpoint <code>.cpt</code> file, when to start recording (<code>first</code>) and how often to overwrite it (<code>interval</code>).</p><pre>
checkpt = {
   name     = "$JOBNAME.cpt"
   first    = 0.0
   interval = 240.0
   write_last_step = yes
}
</pre>
        <p>To let Desmond periodically write out a <code>.cpt</code> file at certain wall time interval, you can set <code>checkpt</code> in this form:</p><pre>
checkpt = {
   name          = "$JOBNAME.cpt"
   wall_interval = 3600.0
   write_last_step = yes
}
</pre>
        <p>where <code>wall_interval</code> sets the wall time interval in seconds. You can turn off wall time interval by either setting it to <code>inf</code> (<code>wall_interval = inf</code>) or not including it at all. If the <code>wall_interval</code> parameter is set to a finite value, then the <code>first</code> and <code>interval</code> parameters have no effect.</p>
        <p>You can turn off recording the <code>.cpt</code> file altogether using:</p><pre>
checkpt = off
</pre>
        <h3 class="Heading3Nonum">maeff_output </h3>
        <p>The <code>maeff_output</code> parameter specifies the name of the output <code>.cms</code> file, when to start recording this file (<code>first</code>), how often to overwrite it (<code>interval</code>), and the number of significant figures given in floating-point numbers (<code>precision</code>). It also specifies the name of the <code>.idx</code> file (used for recording the trajectory name).</p><pre>
maeff_output = {
   name      = "$JOBNAME$[_replica$REPLICA$]-out.cms"
   trjidx    = "$JOBNAME$[_replica$REPLICA$]-out.idx"
   first     = 0.0
   interval  = 120.0
   precision = 8
}
</pre>
        <h3 class="Heading3Nonum">randomize_velocity </h3>
        <p>Sometimes it is useful to randomize the velocities of the atoms at the start of or during a simulation. The <code>randomize_velocity</code> parameter specifies when to start randomizing velocities (<code>first</code>), how often to do it (<code>interval</code>) and the random number seed used for generating the velocities (<code>seed</code>). The <code>temperature</code> parameter sets the target temperature for the randomized velocities.</p><pre>
randomize_velocity = {
   first       = 0.0
   interval    = inf
   seed        = 2007
   temperature = '@*.temperature'
} 
</pre>
        <p>The value <code>'@*.temperature'</code> means the value of the temperature parameter that is in the parent map of the <code>randomize_velocity</code> parameter. The <code>@</code> symbol in the value is referencing operator, <code>*</code> means the parent map of the current map, so <code>*.temperature</code> means the temperature in the parent map. This syntax is a general feature in the sense that every parameter can be set syntactically in this way. For example: </p><pre>
randomize_velocity.first = '@*.trajectory.first'
</pre>
        <p>sets <code>randomize_velocity.first</code> to the value of <code>trajectory.first</code>. Circular references (which are possible syntactically) are caught during the initial job-launch processing.</p>
        <h3 class="Heading3Nonum">simbox_output</h3>
        <p>The simbox parameter controls how Desmond records information about the simulation box. This parameter specifies the name of the file, when to start recording the file (<code>first</code>) and how often to update it (<code>interval</code>).</p><pre>
simbox = {
   name     = "$JOBNAME$[_replica$REPLICA$]_simbox.dat"
   first    = 0.0
   interval = 1.2
}
</pre>
        <h3 class="Heading3Nonum">energy_group </h3>
        <p>Desmond can record a break-down of the energy components during the simulation. The <code>energy_group</code> parameter controls this functionality and specifies the name, time to start recording (first) and frequency to record (interval) this information, e.g.,</p><pre>
energy_group = {
  name     = "$JOBNAME$[_replica$REPLICA$]_enegrp.dat"
  first    = 0.0
  interval = 1.2
  self_energy = false
  corr_energy = true
}
</pre>
        <p>Setting <code>corr_energy</code> to <code>true</code> allows the correction energy to be printed to the output file. Setting <code>self_energy</code> to <code>true</code> includes the self-energy term of the Ewald summation into the correction energy.</p>
        <h3 class="Heading3Nonum">backend </h3>
        <p>The descriptions above handle most (if not all) of the parameters that you would typically use with Desmond. However, if additional parameters available in the back-end config file are needed then the <code>backend</code> parameter can be used to specify them in a front-end config file.</p>
        <p>For example:</p><pre>
backend = {
    force.nonbonded.r_lazy = 12.0
}
</pre>
        <p>adds <code>force.nonbonded.r_lazy = 12.0</code> to the back-end config file.</p>
        <p>Settings within the <code>backend</code> maps have the highest precedence and thus are honored unconditionally. Incorrect settings within this map are not detected by the driver.</p>
        <table class="NavLink" data-mc-conditions="Default.ScreenOnly">
            <tr class="NavLink">
                <td class="NavLeft"><span class="NavText">◀ <a class="NavLink MCXref xref xrefNavLink" href="desmond_config_file_macros.htm" xrefformat="{paratext}">Macros in String Values in the Desmond config File</a></span>
                </td>
                <td class="NavCenter"><span class="NavText"><a class="NavLink MCXref xref xrefNavLink" href="desmond_command_referenceTOC.htm" xrefformat="{paratext}">Desmond Command Reference Manual</a></span>
                </td>
                <td class="NavRight"><span class="NavText"><a class="NavLink MCXref xref xrefNavLink" href="desmond_config_file_mini.htm" xrefformat="{paratext}">Parameters for Minimization in the Desmond config File</a> ▶</span>
                </td>
            </tr>
        </table>
    </body>
</html>