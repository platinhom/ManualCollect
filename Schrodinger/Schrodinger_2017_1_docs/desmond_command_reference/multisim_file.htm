<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="Documentation.xml" data-mc-path-to-help-system="../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Command References|Desmond Command Reference|The multisim Utility">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <link href="../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" /><title>The multisim File Syntax</title>
        <link href="../Resources/Stylesheets/docs.css" rel="stylesheet" />
        <script src="../Resources/Scripts/custom.modernizr.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/require.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/require.config.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/foundation.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/plugins.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body><a name="aanchor4255"></a>
        <MadCap:concept term="Command Reference" /><a name="aanchor4256"></a>
        <MadCap:concept term="Desmond" /><a name="multisim_1257644870_744912"></a>
        <table class="NavLink" data-mc-conditions="Default.ScreenOnly">
            <tr class="NavLink">
                <td class="NavLeft"><span class="NavText">◀ <a class="NavLink MCXref xref xrefNavLink" href="multisim_running_information.htm" xrefformat="{paratext}">Obtaining Information from multisim Checkpoint Files</a></span>
                </td>
                <td class="NavCenter"><span class="NavText"><a class="NavLink MCXref xref xrefNavLink" href="desmond_command_referenceTOC.htm" xrefformat="{paratext}">Desmond Command Reference Manual</a></span>
                </td>
                <td class="NavRight"><span class="NavText"><a class="NavLink MCXref xref xrefNavLink" href="multisim_file_general.htm" xrefformat="{paratext}">General multisim Keywords</a> ▶</span>
                </td>
            </tr>
        </table>
        <h1 class="Title">The multisim File Syntax</h1>
        <p>The <code>multisim</code> input file (<code>.msj</code> file) generally adheres to the Ark format from D. E. Shaw Research. This is the same syntax that is used in Desmond configuration (<code>.cfg</code>) files, which are described in brief in <a href="../desmond_users_guide.pdf">Desmond User’s Guide</a>. Ark format is completely compatible with the syntax used in <code>multisim</code> files in Schrödinger Suite 2008, but supports other features. </p>
        <p>The syntax rules of the Ark format can be summarized as follows. </p>
        <ul>
            <li value="1">
                <p class="ListPara">Values are assigned to a keyword with the <i class="UserReplace">keyword</i><code> = </code><i class="UserReplace">value</i> syntax. </p>
            </li>
            <li value="2">
                <p class="ListPara">Values can be numbers, strings, lists, or blocks. Numbers can be integers or real numbers. Strings do not need to be enclosed in quotes unless they contain embedded blanks or span multiple lines.</p>
            </li>
            <li value="3">
                <p class="ListPara">A block is one or more settings within a pair of braces, <code>{ }</code>. For example: <code>a = { b = 3 c = 4 }</code>. The block in this example contains two keyword-value assignments. </p>
            </li>
            <li value="4">
                <p class="ListPara">A list is a sequence values that is enclosed by a pair of square brackets [ ]. Elements of a list do not have to be of the same type. An example is <code>[ 1 { a = 1 } 5 [ 2 3 ] ]</code>. </p>
            </li>
            <li value="5">
                <p class="ListPara">Hierarchical expressions involving blocks and lists can be created: there is no limit on nesting of lists and blocks. </p>
            </li>
            <li value="6">
                <p class="ListPara">Individual elements of a hierarchy can be set by joining the names of the parents with periods to form a compound key. For example, <code>a.b.c = 3</code> sets element <code>c</code> of block <code>b</code> in block <code>a</code> to 3. </p>
            </li>
            <li value="7">
                <p class="ListPara">If a keyword is assigned a value twice, the second takes precedence. If the value is a block the blocks are merged and keywords present in each block are assigned the values from the latter block. </p>
            </li>
            <li value="8">
                <p class="ListPara">The <code>=</code> sign can be omitted if the value is a block value. This means that <code>a = { b = 1 }</code> and <code>a { b = 1 }</code> are equivalent. This syntax is used to specify the <code>multisim</code> stages.</p>
            </li>
        </ul>
        <p>Multisim processing deviates from the Ark standard in the following ways:</p>
        <ul>
            <li value="1">
                <p class="ListPara">Multisim stages with the same name remain separate, otherwise stages that appear more than once in an <code>.msj</code> file (such as <code>simulate</code> or <code>minimize</code>) would be combined into one stage. </p>
            </li>
        </ul>
        <p>The <code>multisim</code> input file consists of a sequence of stages, each of which specifies a particular calculation to be run. A stage begins with a label identifying the type of stage followed by braces enclosing parameters for that stage. A msj file will in general look something like:</p><pre>
#an outline for a msj file.
first_stage_name {
   parameter1 = 3000.0
   parameter2 =  "this is a string"
   parameter3 = [ "list element 1" 2 "list element 3" ]
}
second_stage_name{
&#160;&#160;&#160;parameter5 = 20
}
</pre>
        <p>The types of stages that are supported for Desmond include the following:</p>
        <ul class="ListCompact">
            <li value="1"><code>task</code>—describes the type of job
    </li>
            <li value="2"><code>minimize</code>—minimize the system
    </li>
            <li value="3"><code>simulate</code>—run an MD simulation on the system
    </li>
            <li value="4"><code>system_builder</code>—run the system builder
    </li>
            <li value="5"><code>replica_exchange</code>—run a replica exchange MD simulation on the system
    </li>
            <li value="6"><code>lambda_hopping</code>—run a lambda hopping simulation on the system
    </li>
            <li value="7"><code>solvate_pocket</code>—add or remove water molecules in buried pockets
    </li>
            <li value="8"><code>analysis</code>—analyze MD simulation trajectories
    </li>
            <li value="9"><code>pl_analysis</code>—analyze protein-ligand interactions in a simulation trajectory
    </li>
            <li value="10"><code>fep_analysis</code>—analyze FEP calculations
    </li>
            <li value="11"><code>extern</code>—custom Python stage
    </li>
            <li value="12"><code>trim</code>—remove unwanted stage data files
    </li>
            <li value="13"><code>stop</code>—stop the workflow at this stage
    </li>
        </ul>
        <p>The keywords supported for each of these stages and their default values are described in the sections that follow.</p>
        <table class="NavLink" data-mc-conditions="Default.ScreenOnly">
            <tr class="NavLink">
                <td class="NavLeft"><span class="NavText">◀ <a class="NavLink MCXref xref xrefNavLink" href="multisim_running_information.htm" xrefformat="{paratext}">Obtaining Information from multisim Checkpoint Files</a></span>
                </td>
                <td class="NavCenter"><span class="NavText"><a class="NavLink MCXref xref xrefNavLink" href="desmond_command_referenceTOC.htm" xrefformat="{paratext}">Desmond Command Reference Manual</a></span>
                </td>
                <td class="NavRight"><span class="NavText"><a class="NavLink MCXref xref xrefNavLink" href="multisim_file_general.htm" xrefformat="{paratext}">General multisim Keywords</a> ▶</span>
                </td>
            </tr>
        </table>
    </body>
</html>