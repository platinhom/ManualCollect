<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="Documentation.xml" data-mc-path-to-help-system="../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Command References|CombiGlide Command Reference|Running CombiGlide Tasks from the Command Line">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <link href="../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" /><title>
            Reagent Preparation from the Command Line
</title>
        <link href="../Resources/Stylesheets/docs.css" rel="stylesheet" />
        <script src="../Resources/Scripts/custom.modernizr.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/require.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/require.config.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/foundation.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/plugins.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body><a name="aanchor1433"></a>
        <MadCap:concept term="Command Reference" /><a name="aanchor1434"></a>
        <MadCap:concept term="CombiGlide" /><a name="combiglide_command_line_1996872019_reagentprep"></a>
        <table class="NavLink" data-mc-conditions="Default.ScreenOnly">
            <tr class="NavLink">
                <td class="NavLeft"><span class="NavText">◀ <a class="NavLink MCXref xref xrefNavLink" href="combiglide_command_line.htm" xrefformat="{paratext}">Running CombiGlide Tasks from the Command Line</a></span>
                </td>
                <td class="NavCenter"><span class="NavText"><a class="NavLink MCXref xref xrefNavLink" href="combiglide_command_referenceTOC.htm" xrefformat="{paratext}">CombiGlide Command Reference Manual</a></span>
                </td>
                <td class="NavRight"><span class="NavText"><a class="NavLink MCXref xref xrefNavLink" href="combiglide_command_combgen.htm" xrefformat="{paratext}">Combinatorial Library Enumeration from the Command Line</a> ▶</span>
                </td>
            </tr>
        </table>
        <h1 class="Title">
            Reagent Preparation from the Command Line
</h1>
        <p>Reagent preparation is implemented as a set of additions to LigPrep, which includes two scripts, <code>vcsprep</code> and <code>reagentprep</code>, and a command-line option to the <code>ligprep</code> command. The script <code>vcsprep</code> is run at the beginning of the LigPrep workflow, to ensure that the titles of the compounds are unique, and again at the end, to generate the statistics file and the SQLite database file that are used by CombiGlide. The script <code>reagentprep</code> is run on the structures produced by LigPrep, to add the labeling of the attachment bond. The concept of reagent preparation is described in detail in <a class="TopicLink MCXref xref xrefTopicLink" href="../combiglide_user_manual/combi_reagent_prep_running.htm#combi_reagent_prep_1193905790_58019" xrefformat="{paratext}">Reagent Preparation</a>. You need not run either of these scripts.</p>
        <p>To prepare a single reagent file for use in the combinatorial screening workflow or in combinatorial library enumeration, you can use the <code>ligprep</code> command as follows:</p><pre>
$SCHRODINGER/ligprep <i class="UserReplace">ligprep-options</i> -vcs <i class="UserReplace">functional-group</i> -omae <i class="UserReplace">jobname</i>.bld
</pre>
        <p>The <i class="UserReplace">ligprep-options</i> are the usual LigPrep structure preparation options. The <code>-vcs</code> option specifies the name of the functional group to use. The names of the standard functional groups supplied with CombiGlide are the long names given in <a class="Table_Number MCXref xref xrefTable_Number" href="../combiglide_user_manual/combi_reagent_prep_running_type.htm#combi_reagent_prep_1193905790_24259" xrefformat="{paranumonly}">Table 1</a>. You can also obtain a list of names with the following command:</p><pre>
$SCHRODINGER/utilities/reagentprep -list
</pre>
        <p>Information on providing custom functional groups is given in <a class="TopicLink MCXref xref xrefTopicLink" href="../combiglide_user_manual/combi_functional_groups.htm#combi_functional_groups_2015553160_14633" xrefformat="{paratext}">Creating Custom Functional Groups and Custom Minimal Capping Groups</a>. The output file must have a <code>.bld</code> extension, which indicates among other things that the file contains the information on the attachment bond (“grow bond”). The input file can be any file accepted by LigPrep. </p>
        <p>You can also distribute the reagent preparation job. However, because there is no checking for duplicates between subjobs, the procedure used to ensure that titles are unique is to append the subjob number to each title, in addition to adding a suffix to duplicate titles. If this behavior is not acceptable, you should run the job serially. </p>
        <p>In addition to the main output file, three structure files are produced by the <code>reagentprep</code> stage that contain structures that were rejected:</p>
        <ul>
            <li value="1">
                <p class="ListPara"><i class="UserReplace">jobname</i><code>_rp-mult.mae</code> contains structures that have multiple instances of the functional group specified that are not equivalent. Structures that have equivalent instances, such as the carboxyl groups in adipic acid for a carboxylic acid functional group, are accepted by default and one instance is labeled. Inequivalent instances, such as the carboxyl groups in glutamic acid, are rejected. If you want to discard such structures you can use the <code>-mult d</code> option to <code>reagentprep</code>, which you can pass through the <code>ligprep</code> command with the option <code>-W&#160;"rc,-mult,d"</code>. You can also include all instances of structures that have inequivalent instances with the <code>-mult a</code> option.</p>
            </li>
            <li value="2">
                <p class="ListPara"><i class="UserReplace">jobname</i><code>_rp-nomatch.mae</code> contains structures that did not match the functional-group specification. If the input file should contain structures that all match, this file should be checked to determine why the structures did not match. If the input file is a master file of reagents for all functional groups, and reagent preparation is used to filter the structures, then this file merely contains the structures that did not match. </p>
            </li>
            <li value="3">
                <p class="ListPara"><i class="UserReplace">jobname</i><code>_rp-ring.mae</code> contains structures for which the bond to be broken occurs in a ring. The Schrodinger build system cannot at this point handle such structures.</p>
            </li>
        </ul>
        <p>You should not use the output from a reagent preparation job as input to another job. If you do, the job will fail. If you want to label the reagents differently, you should start with the input file from the original job. </p>
        <table class="NavLink" data-mc-conditions="Default.ScreenOnly">
            <tr class="NavLink">
                <td class="NavLeft"><span class="NavText">◀ <a class="NavLink MCXref xref xrefNavLink" href="combiglide_command_line.htm" xrefformat="{paratext}">Running CombiGlide Tasks from the Command Line</a></span>
                </td>
                <td class="NavCenter"><span class="NavText"><a class="NavLink MCXref xref xrefNavLink" href="combiglide_command_referenceTOC.htm" xrefformat="{paratext}">CombiGlide Command Reference Manual</a></span>
                </td>
                <td class="NavRight"><span class="NavText"><a class="NavLink MCXref xref xrefNavLink" href="combiglide_command_combgen.htm" xrefformat="{paratext}">Combinatorial Library Enumeration from the Command Line</a> ▶</span>
                </td>
            </tr>
        </table>
    </body>
</html>