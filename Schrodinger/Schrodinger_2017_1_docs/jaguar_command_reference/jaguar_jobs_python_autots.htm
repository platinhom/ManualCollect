<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="Documentation.xml" data-mc-path-to-help-system="../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Command References|Jaguar Command Reference|Running Jaguar Jobs|Running Complex Jaguar Jobs with Python Scripts">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <link href="../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" /><title>AutoTS.py: Automated Transition State Search</title>
        <link href="../Resources/Stylesheets/docs.css" rel="stylesheet" />
        <script src="../Resources/Scripts/custom.modernizr.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/require.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/require.config.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/foundation.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/plugins.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body><a name="aanchor913"></a>
        <MadCap:concept term="Command Reference" /><a name="aanchor914"></a>
        <MadCap:concept term="Jaguar" />
        <table class="NavLink" data-mc-conditions="Default.ScreenOnly">
            <tr class="NavLink">
                <td class="NavLeft"><span class="NavText">◀ <a href="jaguar_jobs_python_habstract.htm" class="NavLink MCXref xref xrefNavLink" xrefformat="{paratext}">h_abstraction.py: Homolytic Breaking of a Bond to Hydrogen</a></span>
                </td>
                <td class="NavCenter"><span class="NavText"><a class="NavLink MCXref xref xrefNavLink" href="jaguar_command_referenceTOC.htm" xrefformat="{paratext}">Jaguar Command Reference Manual</a></span>
                </td>
                <td class="NavRight"><span class="NavText"><a href="jaguar_jobs_python_scan.htm" class="NavLink MCXref xref xrefNavLink" xrefformat="{paratext}">distributed_scan.py: Jaguar Scan Distributed over Processors</a> ▶</span>
                </td>
            </tr>
        </table>
        <h1 class="Title">AutoTS.py: Automated Transition State Search</h1>
        <p>The script <code>AutoTS.py</code> runs a complex workflow that automates, to the extent possible, the discovery of transition-state (TS) geometries.</p>
        <p>The syntax is as follows:</p>
        <p><code>jaguar run AutoTS.py [<i class="UserReplace">job-options</i>] [-jobname <i class="UserReplace">jobname</i>] <i class="UserReplace">name</i>.in</code>
        </p>
        <p>where <i class="UserReplace">job-options</i> are the standard Job Control options, and the input file <i class="UserReplace">name</i><code>.in</code> is a file that contains keyword-value pairs. The keywords are described in the table below. The Maestro structure files for the reactants and products are specified in the input file, and must be provided beforehand. Each structure file must contain just a single molecule.</p>
        <p>The following is an example of the contents of a simple input file:</p><pre>
charge = 0
multiplicity = 1
reactant = [name-r1.mae, name-r2.mae]
product = [name-p1.mae, name-p2.mae]
free_energy = True
&amp;JaguarKeywords
dftname = b3lyp-d3
basis = 6-31g*
&amp;</pre>
        <p>All parameters passed to <code>jaguar </code>are specified in the <span class="Keyword">&amp;JaguarKeywords</span> section whereas other parameters are defined outside of this section.  Keywords whose values are lists (such as reactant and product structure files) are formatted as comma-separated lists enclosed in square brackets (like a Python list).  The above input runs AutoTS  using the B3LYP-D3/6-31g* level of theory.</p>
        <p>The output consists of a text output file, <i class="UserReplace">jobname</i><code>.out</code>, and a structure file, <i class="UserReplace">name</i><code>_full_path.mae</code>, stored in the <i class="UserReplace">jobname</i><code>_AutoTS</code> subdirectory of the current directory. The text output includes a table summarizing the results and any errors or warnings that were issued. The structure file contains all reactants, products, transition states, and intermediates.</p>
        <p class="Table_Caption" data-mc-autonum="Table 1. "><span class="autonumber"><span>Table 1. </span></span>AutoTS input file keywords.</p>
        <table rules="groups" border="1" frame="hsides" cellpadding="5">
            <thead>
                <tr>
                    <th>Keyword
</th>
                    <th>Type
</th>
                    <th>Allowed Values
</th>
                    <th>Default Values
</th>
                    <th>Description
</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><span class="Keyword">analytic_hessian</span>
                    </td>
                    <td>boolean
</td>
                    <td>Any
</td>
                    <td>True
</td>
                    <td>compute an analytic Hessian
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">bond_color</span>
                    </td>
                    <td>integer
</td>
                    <td>Any
</td>
                    <td>1
</td>
                    <td>color of active bonds
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">charge</span>
                    </td>
                    <td>integer
</td>
                    <td>Any
</td>
                    <td>None
</td>
                    <td>charge of complex
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">comparison_type</span>
                    </td>
                    <td>string
</td>
                    <td>heavy_only<br />conformers_only<br />full_rmsd
</td>
                    <td>conformers_only
</td>
                    <td>structure comparison method
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">complex_formation</span>
                    </td>
                    <td>string
</td>
                    <td>random<br />superimposed<br />distance-minimization
</td>
                    <td>distance-minimization
</td>
                    <td>type of complex formation
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">debug</span>
                    </td>
                    <td>boolean
</td>
                    <td>Any
</td>
                    <td>None
</td>
                    <td>Print extra debugging information
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">debug_templates</span>
                    </td>
                    <td>boolean
</td>
                    <td>Any
</td>
                    <td>None
</td>
                    <td>extra printing/files for debugging template code
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">eliminate_multiple_frequencies</span>
                    </td>
                    <td>boolean
</td>
                    <td>Any
</td>
                    <td>True
</td>
                    <td>Employ techniques to remove multiple imaginary frequencies in qst
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">exit_after_path</span>
                    </td>
                    <td>boolean
</td>
                    <td>Any
</td>
                    <td>None
</td>
                    <td>exit job after constructing interpolated path
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">exit_on_unexpected_rxn</span>
                    </td>
                    <td>boolean
</td>
                    <td>Any
</td>
                    <td>True
</td>
                    <td>Exit the calculation if an unexpected chemical reaction occurs
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">follow_eigenvector</span>
                    </td>
                    <td>string
</td>
                    <td>default<br />active<br />lowest<br />non-torsion<br />stretch
</td>
                    <td>default
</td>
                    <td>Method to choose an eigenvector to follow during TS optimization
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">free_energy</span>
                    </td>
                    <td>boolean
</td>
                    <td>Any
</td>
                    <td>None
</td>
                    <td>compute free energy
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">initial_hessian_type</span>
                    </td>
                    <td>string
</td>
                    <td>guess<br />refine<br />analytic
</td>
                    <td>guess
</td>
                    <td>Type of guess hessian used in TS optimizations
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">interpolation</span>
                    </td>
                    <td>string
</td>
                    <td>distance<br />internal<br />cartesian
</td>
                    <td>distance
</td>
                    <td>coord type to do interpolation
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">irc_rms_thresh</span>
                    </td>
                    <td>real number
</td>
                    <td>Any
</td>
                    <td>0.02
</td>
                    <td>RMS threshold for sanity check on IRC
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">irc_type</span>
                    </td>
                    <td>string
</td>
                    <td>full_irc<br />three_point_irc<br />skip_irc
</td>
                    <td>full_irc
</td>
                    <td>simplified IRC methods
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">jobtype</span>
                    </td>
                    <td>string
</td>
                    <td>full<br />complex_formation_only<br />path_only<br />test_renumbering
</td>
                    <td>full
</td>
                    <td>partial workflows
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">max_connections</span>
                    </td>
                    <td>integer
</td>
                    <td>Any
</td>
                    <td>10
</td>
                    <td>max number of connections to search for
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">multiplicity</span>
                    </td>
                    <td>integer
</td>
                    <td>Any
</td>
                    <td>1
</td>
                    <td>spin multiplicity of complex
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">neglect_qst_displacement</span>
                    </td>
                    <td>boolean
</td>
                    <td>Any
</td>
                    <td>None
</td>
                    <td>neglect displacment convergence criterion when running qst
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">no_rxn_complex</span>
                    </td>
                    <td>boolean
</td>
                    <td>Any
</td>
                    <td>None
</td>
                    <td>preform complex before finding each path
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">optimize</span>
                    </td>
                    <td>boolean
</td>
                    <td>Any
</td>
                    <td>True
</td>
                    <td>optimize complexes first
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">path_dx</span>
                    </td>
                    <td>real number
</td>
                    <td>Any
</td>
                    <td>0.2
</td>
                    <td>RMS difference between two structures along interpolated path
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">path_npts</span>
                    </td>
                    <td>integer
</td>
                    <td>Any
</td>
                    <td>31
</td>
                    <td>number of points to initially sample path (before interpolation)
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">product</span>
                    </td>
                    <td>list of strings
</td>
                    <td>Any
</td>
                    <td>None
</td>
                    <td>Full paths to product .mae files
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">product_bond</span>
                    </td>
                    <td>list of strings
</td>
                    <td>Any
</td>
                    <td>None
</td>
                    <td>Bond-breaking instructions
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">product_complex</span>
                    </td>
                    <td>string
</td>
                    <td>Any
</td>
                    <td>None
</td>
                    <td>Full path to product complex .mae file
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">qst_endpoints_are_min</span>
                    </td>
                    <td>boolean
</td>
                    <td>Any
</td>
                    <td>None
</td>
                    <td>use minima as QST endpoints; we usually use posed complexes
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">reactant</span>
                    </td>
                    <td>list of strings
</td>
                    <td>Any
</td>
                    <td>None
</td>
                    <td>Full paths to reactant .mae files
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">reactant_bond</span>
                    </td>
                    <td>list of strings
</td>
                    <td>Any
</td>
                    <td>None
</td>
                    <td>Bond-breaking instructions
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">reactant_complex</span>
                    </td>
                    <td>string
</td>
                    <td>Any
</td>
                    <td>None
</td>
                    <td>Full path to reactant complex .mae file
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">reference_product_complex</span>
                    </td>
                    <td>string
</td>
                    <td>Any
</td>
                    <td>None
</td>
                    <td>Full path to a reference product complex .mae file (for testing)
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">reference_reactant_complex</span>
                    </td>
                    <td>string
</td>
                    <td>Any
</td>
                    <td>None
</td>
                    <td>Full path to a reference reactant complex .mae file (for testing)
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">relax_path</span>
                    </td>
                    <td>boolean
</td>
                    <td>Any
</td>
                    <td>None
</td>
                    <td>use RMS to improve path
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">rms_thresh</span>
                    </td>
                    <td>real number
</td>
                    <td>Any
</td>
                    <td>0.25
</td>
                    <td>RMS difference between structures considered different
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">skip_inf_sep</span>
                    </td>
                    <td>boolean
</td>
                    <td>Any
</td>
                    <td>None
</td>
                    <td>do not perform inf separated energy corrections
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">skip_internal_mapping</span>
                    </td>
                    <td>boolean
</td>
                    <td>Any
</td>
                    <td>None
</td>
                    <td>skips alteration of internal coordinates
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">sn2</span>
                    </td>
                    <td>boolean
</td>
                    <td>Any
</td>
                    <td>True
</td>
                    <td>sn2 chirality corrections
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">template_database_file</span>
                    </td>
                    <td>string
</td>
                    <td>Any
</td>
                    <td>None
</td>
                    <td>specify a template database file
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">template_order</span>
                    </td>
                    <td>integer
</td>
                    <td>Any
</td>
                    <td>1
</td>
                    <td>order of subset of atoms used to make constraints on template based guess
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">ts_acceptance_strictness</span>
                    </td>
                    <td>string
</td>
                    <td>strict<br />loose<br />sloppy
</td>
                    <td>strict
</td>
                    <td>Strictness for verification of TS
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">ts_search_type</span>
                    </td>
                    <td>string
</td>
                    <td>qst<br />eigenfollow
</td>
                    <td>qst
</td>
                    <td>Algorithm used to perform TS optimizations
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">ts_vet_max_freq</span>
                    </td>
                    <td>real number
</td>
                    <td>Any
</td>
                    <td>None
</td>
                    <td>Max frequency (in cm-1) to consider when searching for transition vector
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">ts_vetting_type</span>
                    </td>
                    <td>string
</td>
                    <td>none<br />both
</td>
                    <td>both
</td>
                    <td>Vetting of TS
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">units</span>
                    </td>
                    <td>string
</td>
                    <td>kcal/mol<br />ev
</td>
                    <td>kcal/mol
</td>
                    <td>specify units for printing results
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">use_alternate</span>
                    </td>
                    <td>boolean
</td>
                    <td>Any
</td>
                    <td>None
</td>
                    <td>try TS search in other coord systems
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">use_template</span>
                    </td>
                    <td>boolean
</td>
                    <td>Any
</td>
                    <td>True
</td>
                    <td>try to use a template
</td>
                </tr>
                <tr>
                    <td><span class="Keyword">vdw_scale</span>
                    </td>
                    <td>real number
</td>
                    <td>Any
</td>
                    <td>1.0
</td>
                    <td>scales vdw radii when making complexes
</td>
                </tr>
            </tbody>
        </table>
        <table class="NavLink" data-mc-conditions="Default.ScreenOnly">
            <tr class="NavLink">
                <td class="NavLeft"><span class="NavText">◀ <a href="jaguar_jobs_python_habstract.htm" class="NavLink MCXref xref xrefNavLink" xrefformat="{paratext}">h_abstraction.py: Homolytic Breaking of a Bond to Hydrogen</a></span>
                </td>
                <td class="NavCenter"><span class="NavText"><a class="NavLink MCXref xref xrefNavLink" href="jaguar_command_referenceTOC.htm" xrefformat="{paratext}">Jaguar Command Reference Manual</a></span>
                </td>
                <td class="NavRight"><span class="NavText"><a href="jaguar_jobs_python_scan.htm" class="NavLink MCXref xref xrefNavLink" xrefformat="{paratext}">distributed_scan.py: Jaguar Scan Distributed over Processors</a> ▶</span>
                </td>
            </tr>
        </table>
    </body>
</html>