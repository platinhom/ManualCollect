define({"1836":{i:0.000429165057395918,u:"../jaguar_command_reference/jaguar_input_gen_guess.htm",a:"Table 1  lists the keywords related to the initial guess and the meaning of the values each keyword can take on. Most of the keyword values in  Table 1  correspond to options described in  SCF Settings . If you want to perform an “open-shell singlet” calculation using UDFT or UHF, set ioss=1. The ...",t:"Initial Guess Keywords In The Jaguar Input File"},"1837":{i:0.000225694769603316,u:"../jaguar_command_reference/jaguar_input_gen_localization.htm",a:"For any Jaguar job, the final wave function can be localized after it is computed. Localization can also be used to provide localized orbitals for the LMP2 method; see  LMP2 Keywords In The Jaguar Input File  for details. The keywords in  Table 1  describe the available options for final wave ...",t:"Localization Keywords In The Jaguar Input File"},"1838":{i:0.000165397688863169,u:"../jaguar_command_reference/jaguar_input_gen_fileformat.htm",a:"You can call the program Babel  [26]  from Jaguar to generate files in any of a variety of formats, although the files produced by Babel contain only geometries, not calculation settings. The output can be generated at the end of each iteration in a geometry optimization or at the end of any job. To ...",t:"File Format Conversion Keywords In The Jaguar Input File"},"1839":{i:0.000148632381413903,u:"../jaguar_command_reference/jaguar_input_gen_standardout.htm",a:"The keywords listed in  Table 1  are the standard print options. They are all set to 1 by default, which suppresses output of the information that the keywords select. The exception is ip6, which is set to 2 by default. Many of the print options can be turned on from the GUI, as described in  ...",t:"Standard Output Keywords In The Jaguar Input File"},"1840":{i:0.000168844483147662,u:"../jaguar_command_reference/jaguar_input_gen_fileout.htm",a:"The file output keywords are used to write files other than the usual log and output files. All but one of these keywords are set to 1 by default, meaning that the file is not created.  The file output keyword  ip151 controls whether or not a Jaguar restart file is written. It is the only file ...",t:"File Output Keywords In The Jaguar Input File"},"1841":{i:0.000151213339099865,u:"../jaguar_command_reference/jaguar_input_gen_iterout.htm",a:"The information in  Table 1  concerns output which can be printed out every SCF iteration if the keyword is set to 2. The information is not printed if the keyword is set to 1. The option  ip152 is the only one whose default value of 1 indicates that it is on. When ip152 is set to 1, the file ...",t:"Output Keywords for Each Iteration in the Jaguar Input File"},"1842":{i:0.000252700243607313,u:"../jaguar_command_reference/jaguar_input_gen_orbout.htm",a:"Orbital information can be printed out as well. The orbital keywords determine what orbitals are printed in the output, at what stage they are printed, and the format. The keyword  ipvirt determines how many of the virtual orbitals are printed in the output file and in the restart (new input) file. ...",t:"Orbital Output Keywords In The Jaguar Input File"},"1843":{i:0.000415106991913885,u:"../jaguar_command_reference/jaguar_input_gen_griddaf.htm",a:"The grid and dealiasing function keywords allow the user to select from among the various sets of grids and dealiasing functions available in the grid and dealiasing (.grid and .daf) input files, which are described in  The Dealiasing Function File  and  The Grid File for Jaguar Calculations , and ...",t:"Grid and Dealiasing Function Keywords In The Jaguar Input File"},"1844":{i:0.000188699634553567,u:"../jaguar_command_reference/jaguar_input_gen_memory.htm",a:"Some of the memory use for Jaguar can be controlled through keywords. These keywords may be particularly useful if you are experiencing problems running jobs due to memory-related failures. Memory-use keywords are listed in  Table 1 , along with their default values and a description of their uses. ...",t:"Memory Use Keywords In The Jaguar Input File"},"1845":{i:0.000238845264900671,u:"../jaguar_command_reference/jaguar_input_gen_plot.htm",a:"You can generate a plot file, using keywords in the gen section, that contains the values of the density, the spin density, the electrostatic potential, or orbital amplitudes. The data values are tabulated on a rectangular grid (the “box”), which is generated automatically and encompasses the van ...",t:"Plotting Keywords in the Jaguar Input File"},"1846":{i:0.000156350085085404,u:"../jaguar_command_reference/jaguar_input_gen_macros.htm",a:"As well as including keywords in the gen section, you can include named macros that consist of a collection of keyword settings. This feature makes it easy to reuse a collection of settings for a particular kind of calculation. The macros are stored in a configuration file, which is described in  ...",t:"Macros in the Jaguar Input File"},"1847":{i:0.000170246665382657,u:"../jaguar_command_reference/jaguar_input_lmp2.htm",a:"The lmp2 section has two uses. The first use is for specifying electron pairs that are to be correlated, while all other electron pairs are treated at the Hartree-Fock level. This is known as a “local” LMP2 calculation. The second use, in the case where all valence electron pairs are being ...",t:"The lmp2 Section Of The Jaguar Input File"},"1848":{i:0.00021423935779925,u:"../jaguar_command_reference/jaguar_input_relativity.htm",a:"In this section you can make settings for the use of relativistic Hamiltonians, such as the ZORA Hamiltonian. These settings control details of the Hamiltonian and approximations to it. Currently the scalar ZORA and the spin-orbit ZORA Hamiltonians are available. For ZORA, you can choose to use the ...",t:"The relativity Section Of The Jaguar Input File"},"1849":{i:0.000299358643013912,u:"../jaguar_command_reference/jaguar_input_atomic.htm",a:"The atomic section allows you to specify data for different atoms in a molecule. The data can include basis sets for each atom, or atomic masses for isotope calculations. You can also use the atomic section to define groups of atoms called “fragments”, where each fragment can then be converted to ...",t:"The atomic Section Of The Jaguar Input File"},"1850":{i:0.000148354867453312,u:"../jaguar_command_reference/jaguar_input_atomic_format.htm",a:"After the \u0026atomic line, the atomic section should list sets of atomic input values. Each of these sets is a free-format table. The first row of the table lists the keywords whose values are to be set for each atom. This row is the column heading row. Subsequent rows list the values for the keywords ...",t:"General Format of the atomic Section Of The Jaguar Input File"},"1851":{i:0.000258377321701574,u:"../jaguar_command_reference/jaguar_input_atomic_properties.htm",a:"The keywords that specify physical properties of atoms are listed and defined in  Table 1 . Values for these keywords can appear in restart files. The formal keyword is useful for solvation jobs (because the van der Waals radii are adjusted according to the chemical structure found by Jaguar) and ...",t:"Keywords In The Jaguar Input File That Specify Physical Properties"},"1852":{i:0.00013014277465842,u:"../jaguar_command_reference/jaguar_input_atomic_basis.htm",a:"The basis keyword allows you to specify the basis sets used to treat particular atoms. The string provided to describe the basis set should be chosen from the first column of the tables in  Basis Sets . Lowercase or uppercase letters can be used. Polarization and diffuse functions can be added by ...",t:"Basis, Grid, Dealiasing Function, and Charge Usage for Individual Atoms"},"1853":{i:0.000109549895454567,u:"../jaguar_command_reference/jaguar_input_atomic_fragments.htm",a:"You can use the  frag keyword in the atomic section to specify that all atoms with the same frag entry be treated in the same fragment. You can then request that all the atoms in one fragment be treated as dummy atoms or counterpoise atoms, or used as the only atoms for which numerical frequencies ...",t:"Defining Fragments in the atomic Section in the Jaguar Input File"},"1854":{i:0.000115999688743157,u:"../jaguar_command_reference/jaguar_input_hess.htm",a:"If an input file has a non-empty hess section, the keyword  inhess in the gen section is set to 2 automatically, and a Hessian is read in from the hess section. Since for a Hessian H, Hij = Hji, only the elements with j £ i are read in, and the program symmetrizes the matrix itself later. Since the ...",t:"The hess Section Of The Jaguar Input File"},"1855":{i:0.000146567499797294,u:"../jaguar_command_reference/jaguar_input_guess.htm",a:"If an input file has a non-empty guess section, the keyword  iguess in the gen section is set to 1, and an initial guess for the wave function is read from the guess section. If the keyword  basgss, is included, the coefficients given in the guess section are interpreted as coefficients of functions ...",t:"The guess and guess_basis Sections Of The Jaguar Input File"},"1856":{i:0.000110167943108374,u:"../jaguar_command_reference/jaguar_input_pointch.htm",a:"The pointch section describes the locations and magnitudes of a set of point charges. Up to 200,000 point charges may be used. Each line of the pointch section should contain four real numbers, the first specifying the point charge in atomic units, and the next three specifying its (x, y, z) ...",t:"The pointch Section Of The Jaguar Input File"},"1857":{i:0.000109562869326848,u:"../jaguar_command_reference/jaguar_input_efields.htm",a:"If you would like to calculate wave functions or molecular properties in the presence of an electric field, you may use the efields section to describe this field. The x, y, and z components of the electric field should be specified, in atomic units, on the same line. The requested properties will ...",t:"The efields Section Of The Jaguar Input File"},"1858":{i:0.000115158359137934,u:"../jaguar_command_reference/jaguar_input_egridpt.htm",a:"If you want to calculate the electrostatic potential and the electric field from the molecular wave function at a set of grid points, you can specify the grid points in this section. The points are given as the Cartesian coordinates x, y, and z in angstroms, space separated, one point per line. To ...",t:"The egridpt Section Of The Jaguar Input File"},"1859":{i:0.000134045460075722,u:"../jaguar_command_reference/jaguar_input_ham.htm",a:"By using the ham section and setting the gen section calculation keyword  ihamtyp to 3, you can specify the exact coefficients used to calculate the electronic energy for open shell calculations. The electronic energy is given by the equation where the sums are over orbitals  [22] . The number of ...",t:"The ham Section Of The Jaguar Input File"},"1860":{i:0.000141488724705988,u:"../jaguar_command_reference/jaguar_input_orbman.htm",a:"The orbman section allows you to reorder orbitals in the guess section of a restart file, or to form linear combinations of orbitals. The format of the orbman section is as follows: \n\u0026orbman\nhfiglcmo    i, j, a    k, l, b   end\n\u0026\n where i, j, k, and l are integers indicating the ith, jth, kth, and ...",t:"The orbman Section Of The Jaguar Input File"},"1861":{i:0.000164164992210052,u:"../jaguar_command_reference/jaguar_input_cdft.htm",a:"The cdft section specifies the constraints used to constrain charge density or spin density to certain atoms in a DFT calculation. The syntax of a constraint involves specifying the net charge or spin density on a group of atoms, and a list of atom ranges with weights, in the format density-value ...",t:"The cdft Section Of The Jaguar Input File"},"1862":{i:0.000150100979638212,u:"../jaguar_command_reference/jaguar_input_loc_ib.htm",a:"When running a B3LYP-LOC calculation on an ionized system, the loc_ib section is used to specify the bond from which an electron was removed from the neutral system, if it is removed from an orbital to which at least two atoms contribute. The section contains the atom number of the two bonded atoms ...",t:"The loc_ib Section Of The Jaguar Input File"},"1863":{i:0.000149144552625668,u:"../jaguar_command_reference/jaguar_input_echo.htm",a:"The echo Section Of The Jaguar Input File The echo section contains only its own label, and requests a copy of the input file to be printed in the output file.  \n\u0026echo \u0026\n",t:"The echo Section Of The Jaguar Input File"},"1864":{i:0.000213109807785259,u:"../jaguar_command_reference/jaguar_input_path.htm",a:"The path section allows you to specify the execution path, which determines the order of the Jaguar (or other) programs to be run. If no path section exists, Jaguar will use the default path resulting from the settings in other sections of the input file. The items listed in a path can be either ...",t:"The path Section Of The Jaguar Input File"},"1865":{i:0.000108061809130406,u:"../jaguar_command_reference/jaguar_input_nbo.htm",a:"To request a Natural Bond Orbital (NBO) analysis at the end of the Jaguar job, set nbo = 1 in the gen section of the input file. This setting runs the NBO program with NRT and PRINT=3 set. PRINT=3 is the same as setting the NBO keywords NLMO, DIPOLE, and BNDIDX. If you need finer control over the ...",t:"NBO Sections Of The Jaguar Input File"},"1866":{i:0.000205026406841302,u:"../jaguar_command_reference/jaguar_input_setup.htm",a:"The topics listed below describe how to set up the input file for various tasks in a Jaguar calculation. It includes details on Cartesian and Z‑matrix geometries, constraints, counterpoise calculations, scans, and other types of Jaguar calculations. For details on the input file, see  The Jaguar ...",t:"Setting Up a Jaguar Input File"},"1867":{i:0.000161653535553051,u:"../jaguar_command_reference/jaguar_input_setup_cartesian.htm",a:"The Cartesian geometry input format can consist of a simple list of atom labels and the atomic coordinates in angstroms in Cartesian (x, y, z) form. For example, the input \nO   0.000000    0.000000   -0.113502\nH1  0.000000    0.753108    0.454006\nH2  0.000000   -0.753108    0.454006\n describes a ...",t:"Cartesian Format for Jaguar Geometry Input"},"1868":{i:0.000149053950364401,u:"../jaguar_command_reference/jaguar_input_setup_cartesian_variables.htm",a:"Coordinates can also be specified as variables, whose values are set below the list of atomic coordinates. This makes it easier to enter equal values and also makes it possible to keep several atoms within the same plane during a geometry optimization. To use variables, type the variable name ...",t:"Variables in Jaguar Cartesian Input"},"1869":{i:0.000147960405411482,u:"../jaguar_command_reference/jaguar_input_setup_cartesian_constraining.htm",a:"As described in the previous topic, you can force Cartesian coordinates to remain the same as each other during an optimization by using variables. You can also specify Cartesian coordinates that should be frozen during a geometry optimization by adding a “#” sign after the coordinate values. For ...",t:"Constraining Cartesian Coordinates in Jaguar Input"},"1870":{i:0.000156700959711079,u:"../jaguar_command_reference/jaguar_input_setup_zmat.htm",a:"Like Cartesian geometries, Z‑matrix-format geometries also specify atoms by atom labels that begin with the one- or two-letter element symbol. The atom label is case-insensitive. The element symbol may be followed by additional characters, as long as the atom label has eight or fewer characters and ...",t:"Z‑Matrix Format for Jaguar Geometry Input"},"1871":{i:0.000160173322065609,u:"../jaguar_command_reference/jaguar_input_setup_zmat_variables.htm",a:"Bond lengths or angles can also be specified as variables below the Z‑matrix itself. This feature makes it easier to input equal values (such as C–H bond lengths or H–C–H bond angles for methane), and also makes it possible to keep several distances or angles the same as each other during an ...",t:"Variables and Dummy Atoms in Jaguar Z‑Matrix Input"},"1872":{i:0.000150616091864259,u:"../jaguar_command_reference/jaguar_input_setup_zmat_constraining.htm",a:"To freeze bond lengths or angles during a geometry optimization, add a # sign after the coordinate values. For example, to fix the HOH bond angle of water to be 106.0°, you could enter the following Z‑matrix: \nO\nH1  O   0.9428\nH1  O   0.9428   H1   106.0#\n In a geometry optimization on this input ...",t:"Constraining Z‑Matrix Bond Lengths or Angles in Jaguar Input"},"1873":{i:0.000168646713931388,u:"../jaguar_command_reference/jaguar_input_setup_harmonic.htm",a:"Sometimes you don’t want to entirely freeze the value of a coordinate, but allow it to vary within defined limits. You can then optimize the geometry while allowing for small variations of coordinates that you know should remain essentially the same. You can achieve this end by applying harmonic ...",t:"Applying Harmonic Constraints in Jaguar Calculations"},"1874":{i:0.00017753656759746,u:"../jaguar_command_reference/jaguar_input_setup_counterpoise.htm",a:"Following the procedure of Boys and Bernardi  [29] , a counterpoise calculation is often used to correct for the problem of basis set superposition error (BSSE), which arises when an incomplete basis set is used in the calculation of the binding energy of a complex consisting of two or more ...",t:"Counterpoise Calculations"},"1875":{i:0.000126593535653043,u:"../jaguar_command_reference/jaguar_input_setup_hessrefine.htm",a:"If you are optimizing a molecular structure to obtain a transition state, you might want to refine the Hessian used for the job.  Transition-State Optimizations  explains the methods used for transition-state optimizations, including Hessian refinement. This topic explains how to edit your input ...",t:"Specifying Coordinates for Hessian Refinement"},"1876":{i:0.000122197031393688,u:"../jaguar_command_reference/jaguar_input_setup_scans.htm",a:"To create an input file for a coordinate scan, you set up an input file with the coordinates defined as variables and the variable values defined as described below. For a relaxed scan, the job must be a geometry optimization; for a rigid scan, it must be an energy calculation. You can define a ...",t:"Setting up Jaguar Input Files for Scans"},"1877":{i:0.000121134108129981,u:"../jaguar_command_reference/jaguar_input_setup_pka.htm",a:"You can prepare a Jaguar input file for a pKa calculation using a text editor. The input file must contain a molecular geometry and a labeled pKa atom. The pKa atom is either an acidic hydrogen in acids or conjugate acids, or a non-hydrogen atom to be protonated in bases or conjugate bases.  The pKa ...",t:"Jaguar Input Files for pKa Calculations"},"1878":{i:8.29963668441812E-05,u:"../jaguar_command_reference/jaguar_jobs.htm",a:"Running, monitoring and controlling jobs is done by the Schrödinger job control facility. This facility has both a graphical user interface in the Maestro Monitor panel and a command-line interface in the jobcontrol command. The job control facility handles scratch directory creation and cleanup, ...",t:"Running Jaguar Jobs"},"1879":{i:0.000122185982946848,u:"../jaguar_command_reference/jaguar_jobs_command.htm",a:"You can use the jaguar command to perform the following tasks, among others: Run a job on any machine at your site\n     Summarize results of a Jaguar job\n     Run special jobs such as Babel file conversion or NBO calculations\n     If Jaguar is installed on more than one machine at your site, you can ...",t:"The jaguar Command"},"1880":{i:0.000157637986331726,u:"../jaguar_command_reference/jaguar_jobs_command_running.htm",a:"The jaguar run command lets you run a Jaguar job using the Jaguar input file you specify and any of the jaguar run command options shown in  Table 1  and described below. You can also use the standard Job Control options—see  Running Jobs From the Command Line  for more information. Note that ...",t:"Running Jaguar Jobs from the Command Line"},"1881":{i:0.000101852463618831,u:"../jaguar_command_reference/jaguar_jobs_command_recover.htm",a:"The jaguar run command lets you rerun a Jaguar job using the Jaguar recovery file (jobname.recover) that you specify. The recovery file contains all the information needed to rerun the job exactly as it was originally run, so no other command options are needed. This information includes the ...",t:"Rerunning or Recovering Jaguar Jobs from the Command Line"},"1882":{i:0.000100628292834643,u:"../jaguar_command_reference/jaguar_jobs_command_pka.htm",a:"To submit a pKa job for a single molecule using the command line, use the following command: \njaguar pka [options] [-csrch] {jobname.in|acid-and-base-files}\n The options are the same as for the jaguar run command (see  Running Jaguar Jobs from the Command Line ). If the acid and base conformations ...",t:"Running Jaguar pKa Calculations from the Command Line"},"1883":{i:0.000103867981170993,u:"../jaguar_command_reference/jaguar_jobs_command_pka_csearch.htm",a:"If the acid and base conformations are different, you can specify input files for both the acid and the base. If you do, you must give two filenames, in one of the following forms: acidfile -deprot basefile  basefile -prot acidfile -prot acidfile -deprot basefile The order of the options can be ...",t:"Conformational Differences in Jaguar pKa Calculations"},"1884":{i:0.000124454053383801,u:"../jaguar_command_reference/jaguar_jobs_command_pka_multiple.htm",a:"Running Jaguar pKa Jobs with Multiple Processors Jaguar pKa jobs consist of multiple subjobs, which can be distributed over multiple processors in the same way as any other Jaguar job—see  Running Jaguar Jobs from the Command Line .  The pKa calculations can be monitored from the Maestro Monitor ...",t:"Running Multiple Jaguar pKa Jobs"},"1885":{i:0.000143005676647859,u:"../jaguar_command_reference/jaguar_jobs_command_pka_recalculate.htm",a:"The utility script  jaguar_pka can be used to recalculate pKa values using parameters for a specified functional group. The calculation takes the raw energies from a pKa calculation and applies the correction factors for the specified functional group. The syntax of the command is ...",t:"Recalculating Jaguar pKa Values with New Parameters"},"1886":{i:0.000167135291462475,u:"../jaguar_command_reference/jaguar_jobs_command_pka_parameters.htm",a:"If you want to develop your own pKa parameters, you can do so by adding information to the file that contains the parameters that Jaguar uses to correct its calculated pKa values, $SCHRODINGER/mmshare-vversion/data/jaguar/pka_match.xml. This file also contains the SMARTS patterns that enable Jaguar ...",t:"Developing Your Own Jaguar pKa Correction Parameters"},"1887":{i:0.000180734996207721,u:"../jaguar_command_reference/jaguar_jobs_command_fileformat.htm",a:"Jaguar uses the OpenBabel program  [26]  to convert between many of the file formats used in computational chemistry. Babel can read over 40 kinds of input and output file types, and writes both cartesian and Z-matrix geometry specifications. Babel is used in the GUI to read and write files that are ...",t:"Converting Structure File Formats"},"1888":{i:0.000130546919444945,u:"../jaguar_command_reference/jaguar_jobs_batch.htm",a:"If you need to run series of Jaguar jobs frequently, you can create batch scripts that define the jobs and run them using the jaguar run command. For instance, you might want to study the dissociation of a bond by evaluating the molecule’s energy at various appropriate bond lengths; scan a potential ...",t:"Running Multiple Jaguar Jobs with Batch Scripts"},"1889":{i:0.00015173107484097,u:"../jaguar_command_reference/jaguar_jobs_batch_file.htm",a:"Batch input files can include directives, job specifications, UNIX commands, and comments. Lines that contain comments must begin with a # symbol, and lines that contain Unix commands must begin with a % symbol. Blank lines can also be used in the batch script, and are ignored.  The available ...",t:"Jaguar Batch Input File Format"},"1890":{i:0.000149435253417875,u:"../jaguar_command_reference/jaguar_jobs_batch_running.htm",a:"You can start Jaguar batch jobs from Maestro or from the command line. Maestro automatically creates a simple batch job when you specify multiple structures as input to any Jaguar task. See  Running Jaguar Batch Jobs from Maestro  for more information on using Maestro to run batch jobs. The syntax ...",t:"Running Jaguar Batch Jobs"},"1891":{i:0.000122444747846588,u:"../jaguar_command_reference/jaguar_jobs_batch_examples.htm",a:"Batch scripts can be used in multiple ways. In this section, two examples are provided for the following scenarios: Pipelined scripts, in which the output from one job provides the input to a subsequent job. The pKa batch script is an example. Here we provide an example that performs an optimization ...",t:"Jaguar Batch Input File Examples"},"1892":{i:0.000140986960011389,u:"../jaguar_command_reference/jaguar_jobs_batch_examples_pipelined.htm",a:"Suppose you have ten different molecules and you want to optimize the geometry of each one at the B3LYP/6-31G* level of theory, and then do two single-point energy calculations on the optimized geometry, one using B3LYP/6-311+G* and the other using LMP2/6-311+G*. The batch file for this process, ...",t:"Pipelined Jaguar Batch Jobs"},"1893":{i:0.000158699606705375,u:"../jaguar_command_reference/jaguar_jobs_batch_examples_directory.htm",a:"The script below runs jobs for a set of input files in a specified directory using two different sets of options, and places the output in subdirectories of the launch directory.  \n# Define protocol #1\n \nOPTIONS= basis=midi dftname=x3lyp icfit=1\n \n# Create the job directory and cd into it.  All job ...",t:"Running Jaguar Batch Jobs from Input in a Specified Directory"},"1894":{i:0.000202669029159952,u:"../jaguar_command_reference/jaguar_jobs_python.htm",a:"The Python package provided with Schrödinger software provides Python language extensions to analyze and manipulate structures, including reading and writing a variety of file formats; interfaces to Maestro, including support for creating customized user interfaces; and functions to interface with ...",t:"Running Complex Jaguar Jobs with Python Scripts"},"1895":{i:0.000188235751284856,u:"../jaguar_command_reference/jaguar_jobs_python_counterpoise.htm",a:"The script counterpoise.py (Counterpoise in Maestro) can be used to calculate a counterpoise-corrected binding energy of a complex consisting of two non-covalently bound molecules. You can run this script from the command line using the following syntax:  \njaguar run counterpoise.py filename where ...",t:"counterpoise.py: Counterpoise-Corrected Binding of Two Molecules"},"1896":{i:0.000192861787338409,u:"../jaguar_command_reference/jaguar_jobs_python_hbond.htm",a:"The script hydrogen_bond.py can be used to calculate the total binding energy of a hydrogen-bonded complex of two molecules. See  Binding Energies of Hydrogen-Bonded Complexes  for details on the computational protocol. You can use this script from Maestro, as described in  Binding Energies of ...",t:"hydrogen_bond.py: Binding Energy of a Hydrogen-Bonded Complex"},"1897":{i:0.000138664180361117,u:"../jaguar_command_reference/jaguar_jobs_python_habstract.htm",a:"The script h_abstraction.py estimates the energy of homolytic breaking of a bond to a hydrogen atom in the following two processes: The second is only relevant for sp and sp2 carbon atoms, such as those in a benzene ring. The script does not calculate the energy of abstraction by a probe, for which ...",t:"h_abstraction.py: Homolytic Breaking of a Bond to Hydrogen"},"1898":{i:0.000128300396751,u:"../jaguar_command_reference/jaguar_jobs_python_autots.htm",a:"The script AutoTS.py runs a complex workflow that automates, to the extent possible, the discovery of transition-state (TS) geometries. The syntax is as follows: jaguar run AutoTS.py [job-options] [-jobname jobname] name.in where job-options are the standard Job Control options, and the input file ...",t:"AutoTS.py: Automated Transition State Search"},"1899":{i:0.000130275610615625,u:"../jaguar_command_reference/jaguar_jobs_python_scan.htm",a:"This script splits up a 1D or 2D scan job into multiple jobs that can be distributed over multiple processors, and is used automatically by Maestro for such a job. The script accepts a single input file that defines the scan job. The processors are specified using the -HOST job control option (see  ...",t:"distributed_scan.py: Jaguar Scan Distributed over Processors"},"1900":{i:0.000123976937645159,u:"../jaguar_command_reference/jaguar_jobs_python_fukui.htm",a:"This script can be used to calculate Fukui functions. You can use this script from Maestro, as described in  Fukui Functions , or from the command line. The command syntax is: \njaguar run fukui.py [options] filename where filename is the Maestro structure file that contains the molecules for which ...",t:"fukui.py: Calculate Fukui Functions"},"1901":{i:0.000135128927492355,u:"../jaguar_command_reference/jaguar_jobs_python_vcd.htm",a:"The vcd.py script automates the calculations needed to produce high quality VCD spectra. This includes conformational searching of the input structure (which requires a MacroModel license), quantum mechanical refinement of the conformers (using Jaguar), elimination of redundant conformers (again ...",t:"vcd.py: Vibrational Circular Dichroism Spectra"},"1902":{i:0.000145428463222835,u:"../jaguar_command_reference/jaguar_jobs_python_canonical.htm",a:"The script canonical.py guarantees that calculations on two or more isomers I_1, I_2, ... will use the same number of canonical orbitals, which makes the energies of these isomers comparable. First, the script precomputes the number of canonical orbitals NCO_I_k for each provided isomer I_k, ...",t:"canonical.py: Enforce Use of the Same Number of Canonical Orbitals"},"1903":{i:0.000173413390663999,u:"../jaguar_command_reference/jaguar_jobs_python_reactions.htm",a:"The script jreactions.py calculates the energy of a reaction, and optionally the enthalpy and free energy. The reactants and products are specified on the command line.  The command syntax is: where reactantN and productN are Jaguar input file names. For a description of the options, run the command ...",t:"jreactions.py: Reaction Energy, Enthalpy, Free Energy"},"1904":{i:0.000228096716426123,u:"../jaguar_command_reference/jaguar_jobs_multiproc.htm",a:"There are two ways to use multiple processors to make Jaguar jobs run faster: distribution of multiple subjobs over processors and threading with OpenMP. Each has advantages and disadvantages, which are discussed below. Jaguar provides automatic selection of a fairly efficient way of parallelizing ...",t:"Running Jaguar Jobs over Multiple Processors"},"1905":{i:0.000171288270909129,u:"../jaguar_command_reference/jaguar_jobs_multiproc_auto.htm",a:"While it is possible to set options for the different forms of parallel execution, it is usually best to allow the Jaguar startup script to determine the mix of job distribution and threads from the command line by using the -PARALLEL nprocoption. This is the recommended way of running jobs over ...",t:"Automatic Selection of Distribution and Threading Options for Jaguar Jobs"},"1906":{i:0.000159986881755007,u:"../jaguar_command_reference/jaguar_jobs_multiproc_distributed.htm",a:"This method distributes separate Jaguar jobs (“subjobs), each defined by an input file, over multiple processors. It is the most efficient method, and applies to all calculation types. The disadvantage is that it requires multiple licenses, one per subjob.  This method should be used whenever the ...",t:"Distribution of Jaguar Jobs over Processors"},"1907":{i:0.000176909843694027,u:"../jaguar_command_reference/jaguar_jobs_multiproc_threads.htm",a:"In this method, parts of the code are executed in parallel, using threads. See  http://www.openmp.org  for details. Use of threads takes only one license no matter how many threads are used, but it requires extra memory, and all threads spawned from a single process must run on the same host. OpenMP ...",t:"Running a Multithreaded Jaguar Job with OpenMP"},"1908":{i:0.000111452607046499,u:"../jaguar_command_reference/jaguar_jobs_multiproc_considerations.htm",a:"Most Jaguar calculations can use OpenMP, but the following tasks are not parallelized with OpenMP: LMP2 calculations of any kind\n     PBF and SM6/SM8 solvation\n     HF/DFT ESP charge fitting\n     Properties that are quick to calculate and may not benefit from parallel execution include Mulliken ...",t:"Considerations for Running Parallel Jaguar Jobs"},"1909":{i:0.000292355018576843,u:"../jaguar_command_reference/jaguar_output.htm",a:"The output from a Jaguar run always includes a Jaguar output file, which contains the primary output; a log file, which contains a job summary that is updated as the job is being run; and a Maestro-formatted file, which contains the geometry and properties in a form that can be read by Maestro and ...",t:"Jaguar Output"},"1910":{i:0.000374527714131356,u:"../jaguar_command_reference/jaguar_output_results.htm",a:"You can obtain summaries of Jaguar results in simple table form with the following command \njaguar results [option-list] [output-file-list]\n Jaguar searches the output files you specify for the information you request through the command options. The order of the options determines the order in ...",t:"Summarizing Jaguar Results"},"1911":{i:0.000168556312271562,u:"../jaguar_command_reference/jaguar_output_results_multijob.htm",a:"By default, each row of the Jaguar results table (except the title row) corresponds to the final results from a Jaguar output file that was listed in the jaguar results command. For instance, if you entered the command \njaguar results -energy RuCp2.out piperidine.out\n from a directory containing the ...",t:"Reporting Final Results From One or More Jaguar Jobs"},"1912":{i:0.000130055218896384,u:"../jaguar_command_reference/jaguar_output_results_intermediate.htm",a:"By default, only the final results are reported for each job; therefore, for instance, a table of results from three jobs would have three rows of information. However, you can also request that information from each geometry, SCF, or gradient calculation be reported in a different row of the ...",t:"Reporting Jaguar Intermediate Results"},"1913":{i:9.8673755318504E-05,u:"../jaguar_command_reference/jaguar_output_results_atom.htm",a:"By default, each line of output from a jaguar results command lists information that pertains to the entire input structure, but you can also request some kinds of information for each individual atom in the structure. The options that let you print tables of coordinates, forces, or charges for ...",t:"Reporting Jaguar Results for Each Atom"},"1914":{i:0.000125653989773629,u:"../jaguar_command_reference/jaguar_output_hf.htm",a:"The contents of a Jaguar output file vary according to the calculation and output selections made. This section describes the output file for a standard, default, single point, closed shell Hartree-Fock calculation.  Output File Content for Various Jaguar Calculation Types  describes the variations ...",t:"Output From a Standard HF Calculation"},"1915":{i:0.000101280333873494,u:"../jaguar_command_reference/jaguar_output_calctype.htm",a:"Any time you make a non-default setting for a calculation, the output from the program pre notes the non-default options chosen. This output appears above the molecular geometry output from the pre program. The topics listed below describe the changes in output for various calculation settings ...",t:"Output File Content for Various Jaguar Calculation Types"},"1916":{i:0.000106741948463352,u:"../jaguar_command_reference/jaguar_output_calctype_dft.htm",a:"If you use density functional theory for the SCF calculation, the output above the SCF table lists the functional or combination of functionals used. The energy information for DFT calculations includes the breakdown of the two-electron energy into Coulomb and exchange-correlation terms. For DFT ...",t:"DFT Output"},"1917":{i:0.000112435544115962,u:"../jaguar_command_reference/jaguar_output_calctype_zora.htm",a:"If you perform a calculation with the ZORA relativistic Hamiltonian, the total energy reported is the energy calculated with this Hamiltonian. After the total energy, the scaled ZORA correction and the scaled ZORA total energy are reported, as follows:  \n   (N)  Total energy.................  ...",t:"ZORA Relativistic Calculation Output"},"1918":{i:9.81857064191357E-05,u:"../jaguar_command_reference/jaguar_output_calctype_lmp2.htm",a:"If you perform a local MP2 calculation, the output from the programs pre and hfig is somewhat different from that of a Hartree-Fock calculation, since the use of symmetry is turned off automatically for LMP2 calculations. The output from the program scf includes the Coulomb and exchange ...",t:"LMP2 Output"},"1919":{i:0.000106780428068597,u:"../jaguar_command_reference/jaguar_output_calctype_geopt.htm",a:"The output format description for optimizations in this subsection applies to calculations of either minimum-energy structures or transition states. Although the Hessians used during these calculations are different, the Jaguar programs run are the same, and the output format is very similar. ...",t:"Geometry or Transition-State Optimization Output"},"1920":{i:8.67837171836126E-05,u:"../jaguar_command_reference/jaguar_output_calctype_solvation.htm",a:"Jaguar Solvation Output The topics listed below describe output from the types of solvation calculation. ",t:"Jaguar Solvation Output"},"1921":{i:0.000117562552890047,u:"../jaguar_command_reference/jaguar_output_calctype_solvation_pbf.htm",a:"Performing a solvation calculation involves several iterations in which the wave functions for the molecule in the gas phase are calculated. The program ch performs electrostatic potential fitting, which represents the wave function as a set of point charges on the atomic centers. The interactions ...",t:"Output from a Jaguar PBF Calculation"},"1922":{i:0.000111691941253475,u:"../jaguar_command_reference/jaguar_output_calctype_solvation_sm8.htm",a:"When an SM8 solvation calculation is performed in Jaguar, the gas-phase wave function is first calculated, followed by the solution-phase wave function. Once the solution-phase calculation has completed, the various components of the solvation free energy are printed out. Atomic Löwdin populations, ...",t:"Output from an SM8 Solvation Calculation"},"1923":{i:0.000133670156902445,u:"../jaguar_command_reference/jaguar_output_calctype_geoptsolv.htm",a:"Geometry optimizations in solution contain output in the formats described in the previous two subsections, but the optimization output and the solvation calculation output alternates as the calculation proceeds. First, by default, Jaguar computes a gas phase optimized geometry, for which the output ...",t:"Output from Jaguar Geometry Optimization in Solution"},"1924":{i:0.000143630711278813,u:"../jaguar_command_reference/jaguar_output_calctype_pka.htm",a:"The final output file gives information on the type of ionizable group, the application of corrections, and the pKa value. For example, for methylamine the output looks like the following:  \nThis molecule was recognized as a primary amine.\nCorrection factors have been applied, and have an RMSD of ...",t:"Jaguar pKa Calculation Output"},"1925":{i:0.000156805529246754,u:"../jaguar_command_reference/jaguar_output_calctype_properties.htm",a:"Output for Jaguar Properties If you make any non-default selections from the Properties tab, the program ch runs and writes the results to the output file after the SCF iterations, if any.",t:"Output for Jaguar Properties"},"1926":{i:0.00013109983731139,u:"../jaguar_command_reference/jaguar_output_calctype_properties_moments.htm",a:"When multipole moments are calculated, the x, y, and z components of the dipole moment and the total magnitude of the dipole moment m are reported in debye, followed by information on any requested higher-order moments and the corresponding traceless higher-order moment tensors. An example of the ...",t:"Multipole Moment and Charge Fitting Output"},"1927":{i:0.000119260998713492,u:"../jaguar_command_reference/jaguar_output_calctype_properties_polarizability.htm",a:"If you calculate polarizabilities and hyperpolarizabilities with the coupled perturbed HF method, the tensor elements in au appear in the output from the program cpolar, which runs after the SCF calculation. Alternatively, if you use the finite field method to calculate the polarizability and/or ...",t:"Polarizability and Hyperpolarizability Output"},"1928":{i:0.000106144555975918,u:"../jaguar_command_reference/jaguar_output_calctype_properties_density.htm",a:"If you choose to calculate the electron density, the output from the program elden appears below the SCF output. The output lists the number of grid points used for the electron density calculation and the total number of electrons found over the grid. The main output file does not include the ...",t:"Electron Density Output"},"1929":{i:0.000114554083483472,u:"../jaguar_command_reference/jaguar_output_calctype_properties_mulliken.htm",a:"If you calculate Mulliken populations by atom, the atomic charges and their sum is given under the heading “Atomic charges from Mulliken population analysis.” If you calculate them by basis function, the atomic charge output is preceded by a section labeled “Mulliken population for basis functions,” ...",t:"Mulliken Population Output"},"1930":{i:0.00013618825086688,u:"../jaguar_command_reference/jaguar_output_calctype_properties_fukui.htm",a:"Jaguar calculates atomic Fukui indices according to the method specified in Refs  [245]  and  [246] . These indices are based on Fukui functions, which are partial derivatives of the electron or spin density with respect to a change in either the electron count or the unpaired spin count. A change ...",t:"Output of Atomic Fukui Indices"},"1931":{i:0.000112254828411536,u:"../jaguar_command_reference/jaguar_output_calctype_properties_nbo.htm",a:"NBO Calculation Output Output for NBO calculations appears under the heading “Jaguar NBO 6.0.”",t:"NBO Calculation Output"},"1932":{i:0.000163381756644672,u:"../jaguar_command_reference/jaguar_output_calctype_properties_esp.htm",a:"ESP analysis lists various statistical quantities related to the ESP surface  [249] , including the maximum and minimum values of the ESP on the isodensity surface, the variances of the ESP within the positive-valued and negative-valued regions, and the total variance, a “balance” parameter, which ...",t:"ESP Analysis Output"},"1933":{i:0.000131712373832217,u:"../jaguar_command_reference/jaguar_output_calctype_frequencies.htm",a:"If you calculate vibrational frequencies, any SCF calculations during the run use the RMS density change convergence criterion described in  SCF Settings  instead of the usual energy convergence criterion. Therefore, these SCF calculations often proceed for several more iterations than single point ...",t:"Frequency, IR Intensity, and Thermochemistry Output"},"1934":{i:0.000115996123538821,u:"../jaguar_command_reference/jaguar_output_calctype_cis.htm",a:"Output from CIS calculations of excited states lists the selected excited states with the excitation energy from the ground state in eV and the transition wavelength, the orbital excitations involved in the CI wave function, and the transition dipole moment and oscillator strength. The following ...",t:"CIS Calculation Output"},"1935":{i:0.000127090540743152,u:"../jaguar_command_reference/jaguar_output_calctype_basis.htm",a:"If you selected Gaussian function list (basis set) in the Output tab or set ip1=2 in the gen section, a list of atoms and the basis set used for each atom is given, followed by two tables that provide information about the basis set.  The functions in a basis set are made up of polynomials of the ...",t:"Basis Set Output"},"1936":{i:0.000116105902965785,u:"../jaguar_command_reference/jaguar_output_calctype_reaction.htm",a:"The output from the Jaguar - Reactions panel (or the jreactions.py script) that gives the reaction results is contained in the file jobname_rxn.out. A typical example is given below. \nDate and time:          14 January 2014, 15:21:50\n \nReactant input files:\nCH3CN.in\nH2O.in\n \nProduct input ...",t:"Jaguar Reactions Output"},"1937":{i:0.000110406426012182,u:"../jaguar_command_reference/jaguar_output_calctype_methods.htm",a:"If the DIIS convergence method is not used, the “maximum DIIS error” column is not printed for the table giving data from the SCF iterations. Also, if the OCBSE convergence scheme is selected, the Coulomb and exchange contributions to the total two-electron terms are listed in the SCF summary below ...",t:"Output from Various Jaguar Methods"},"1938":{i:0.000114227264337564,u:"../jaguar_command_reference/jaguar_output_log.htm",a:"The log file, an output file which appears in the local job directory, provides information on the progress of a run. The current contents of a job’s log file is displayed in the Monitor panel. The log file notes when each program within Jaguar is complete, as well as noting data from each SCF ...",t:"The Jaguar Log File"},"1939":{i:0.000150035116281887,u:"../jaguar_command_reference/jaguar_files.htm",a:"Jaguar needs certain types of files in order to run a job. An input file must be created, of course, but additional files specifying the basis functions, data for the initial guesses, dealiasing functions, grids, and cutoffs used during a run are generally necessary as well. Unless other files are ...",t:"Other Jaguar Files"},"1940":{i:0.000171663669461487,u:"../jaguar_command_reference/jaguar_files_config.htm",a:"Jaguar provides a way of defining   sets of gen section keywords that can be used to \"configure\" a calculation. These configurations, or macros, are stored in the file jaguar.config, which you place in your  Schrödinger user resources directory . The file consists of a set of macros, in the ...",t:"The Jaguar Configuration File"},"1941":{i:0.000122109999653499,u:"../jaguar_command_reference/jaguar_files_basis.htm",a:"The basis sets available for use in Jaguar appear in the file default.basis, in the standard data directories. Portions of this file are shown in this section; you might want to refer to them as you read the description of the file. Basis sets at the top of the file do not contain effective core ...",t:"The Basis Set File"},"1942":{i:0.000142957889298336,u:"../jaguar_command_reference/jaguar_files_basis_format.htm",a:"Each basis set description begins with a blank line. The next line (or lines) must begin with the word BASIS, followed by one space. That label is followed by one or more names of the basis set to be described: the name of the basis set as given in  Basis Sets , and any other names which describe ...",t:"Basis Set Format"},"1943":{i:0.000103372260427154,u:"../jaguar_command_reference/jaguar_files_basis_ecp.htm",a:"Basis sets containing effective core potentials (ECPs) are described in a slightly more complicated fashion. First, the string ECP must appear between the 5D or 6D label and the BACKUP label. This string indicates that the basis set description contains information about the effective core potential ...",t:"Effective Core Potential Format"},"1944":{i:0.000125237138215588,u:"../jaguar_command_reference/jaguar_files_basis_custom.htm",a:"If you want to set up your own .basis file, you can do so, if you use the format described above. Generally, you must also create an altered version of the .atomig file, which is described in  The Initial Guess Data File , although if you are just adding polarization functions to the basis set, and ...",t:"Customizing Basis Sets"},"1945":{i:0.000159660084493175,u:"../jaguar_command_reference/jaguar_files_guess.htm",a:"The file default.atomig contains the results of Hartree-Fock calculations on atoms for various basis sets. By default, the initial guess is constructed from orbitals in this file. When the basis set to be used for the calculation is one of those listed below (or any variant of these sets involving ...",t:"The Initial Guess Data File"},"1946":{i:0.000188491348880329,u:"../jaguar_command_reference/jaguar_files_daf.htm",a:"When Jaguar fits a function’s grid point values to a basis set to find the applicable basis set coefficients for the function, it uses dealiasing functions to reduce errors. The dealiasing functions span the function space determined by the grid more completely than the basis functions, so a ...",t:"The Dealiasing Function File"},"1947":{i:0.000149036849498786,u:"../jaguar_command_reference/jaguar_files_daf_format.htm",a:"The first line of a dealiasing function file contains a character string which includes the version number of Jaguar. This string should be “dafv” followed immediately by four digits giving the version number times 100. Lead zeros are added if necessary. The second line has two integers. The first ...",t:"Dealiasing Function File Format and Description"},"1948":{i:0.000168182051971603,u:"../jaguar_command_reference/jaguar_files_daf_sample.htm",a:"The following sample .daf file lists the dealiasing set for H and He for a 6‑31G** basis set. Blank lines may be added for readability, and data may be spread over multiple lines. \ndafv0300  \n5  6             \u003c-- number of sets/atom, number of rows/set \n3.0 5.0 7.0 9.0  \u003c-- neighbors cutoffs ...",t:"Sample Dealiasing Function File"},"1949":{i:0.000292653176915171,u:"../jaguar_command_reference/jaguar_files_grid.htm",a:"The grid input file (.grid file) determines the grids used during the calculation. Each grid type, for example, “coarse” or “ultrafine,” is constructed from grids assigned to each atom in the molecule. For any basis set for which the pseudospectral method is used, the grid file must contain grids ...",t:"The Grid File for Jaguar Calculations"},"1950":{i:0.000190184953479205,u:"../jaguar_command_reference/jaguar_files_cutoff.htm",a:"The cutoff file specifies parameters to be used for the various iterations of an SCF calculation. The file to be used is determined by the CUTOFFFILE entry in the input file, as described in  General Description of the Jaguar Input File . If the input file has no such entry, Jaguar uses the file ...",t:"The Cutoff File for Jaguar Calculations"},"1951":{i:0.000151632903635498,u:"../jaguar_command_reference/jaguar_files_pbfradii.htm",a:"The PBF radii file, pbf_radii.ark, determines how van der Waals radii for calculations using the Jaguar PBF solvation module are set according to chemical functional groups. Functional groups are defined in terms of SMARTS patterns ( http://www.daylight.com/dayhtml/doc/theory/theory.smarts.html ). ...",t:"The PBF Radii File for Jaguar Calculations"},"1952":{i:0.000116308301311966,u:"../jaguar_command_reference/jaguar_files_pbfradii_ark.htm",a:"The PBF radii file is formatted according to the Ark syntax, which is described in brief in  Ark Format Syntax Summary . The format is based on a keyword=value notation. Keywords can be composed of alphanumeric characters and underscores, and must not begin with a numerical character. Values can be ...",t:"Summary of Ark Syntax"},"1953":{i:8.60420423494521E-05,u:"../jaguar_command_reference/jaguar_files_pbfradii_syntax.htm",a:"The PBF radii file has the following syntax: calculation_type = [ \u0027smarts_pattern_1\u0027 {element1 = rad1element2 = rad2 ... element1_dgsa = dgsa_value1 ...}[\u0027smarts_pattern_2a\u0027 \u0027smarts_pattern_2b\u0027] {element1 = rad1element2 = rad2 ... element1_dgsa = dgsa_value1 ...}...] The keyword calculation_type can ...",t:"The Jaguar PBF Radii File Structure"},"1954":{i:6.13254596701412E-05,u:"../jaguar_command_reference/jaguar_command_referenceIOM.htm",a:"Jaguar Keyword Index",t:"Jaguar Keyword Index"},"1955":{i:0.000102612036846911,u:"../knime_command_reference/knime_command.htm",a:"KNIME workflows can be run directly from the command line, rather than from the graphical interface. This feature can be particularly useful for time-consuming workflows or workflows that have to be run repeatedly for different input data sets. Furthermore, being able to run KNIME workflows from the ...",t:"Running KNIME Workflows from the Command Line"},"1956":{i:0.000145710628770198,u:"../knime_command_reference/knime_command_syntax.htm",a:"The command to use on Linux and Mac for batch execution of KNIME workflows has the following syntax: \n$SCHRODINGER/knime -batch [-reset] {-workflowFile=file|-workflowdir=dir} [-destfile=file] [-option=option-setting] [-nosave] [options] \n For a description of the batch options, run the command with ...",t:"The knime Command for Batch Execution"},"1957":{i:0.000143898614023682,u:"../knime_command_reference/knime_command_batch_example.htm",a:"As an example of a batch workflow, consider the workflow shown below.  This sample workflow calculates molecular properties using QikProp from ligands provided as SMILES strings and writes those properties to a data file in CSV format. The SMILES strings are converted to 3D structures using LigPrep. ...",t:"Example of a KNIME Batch Workflow"},"1958":{i:0.000145710628770198,u:"../knime_command_reference/knime_command_node_settings.htm",a:"The example workflow discussed above used hard-coded generic input and output file names. This approach allows you to run different input data sets by simply renaming or copying the actual input and output files to the respective names. While this is a simple approach, it lacks flexibility. Instead ...",t:"Modifying Node Settings in a KNIME Batch Workflow"},"1959":{i:0.000102612036846911,u:"../knime_command_reference/knime_command_batch_running.htm",a:"This section contains information about running workflows in various circumstances. When a KNIME workflow is executed, a lock is placed on the workflow, and it cannot be executed by any other process until the lock is released. The lock is actually a file in the workflow directory, so it only ...",t:"Running KNIME Batch Workflows"},"1960":{i:0.00013692037014383,u:"../ligprep_command_reference/ligprep_command.htm",a:"The main objective of LigPrep is to take 2D or 3D structures and produce corresponding low-energy 3D structures for use in further computational studies. The input and output files can be in SD or Maestro format. LigPrep can also produce multiple output structures for each input structure, a process ...",t:"Running LigPrep from the Command Line"},"1961":{i:0.000223493451276602,u:"../ligprep_command_reference/ligprep_command_syntax.htm",a:"To run LigPrep from the command line, use the  ligprep command. The syntax of the ligprep command is as follows. \nligprep [options] [ meta-options] {-imae|-isd|-ismi|-icsv} input-file {‑omae|‑osd} output-file You must specify an input structure file using either ‑imae for input files in Maestro ...",t:"The ligprep Command"},"1962":{i:0.000178768290319331,u:"../ligprep_command_reference/ligprep_command_distributed.htm",a:"You can significantly reduce the amount of time taken by LigPrep to process a large number of ligands by distributing the job across multiple processors. The ligprep command has job options that facilitate this task. The number of subjobs may be greater than or equal to the number of processors ...",t:"Distributing LigPrep Jobs"},"1963":{i:0.000141333807224286,u:"../ligprep_command_reference/ligprep_command_output.htm",a:"The main LigPrep output files are an output structure file in the chosen format, and a log file ( jobname.log), which records information about the processing of the structures. If a structure cannot be processed by a particular stage, several other output files are generated: The original structure ...",t:"LigPrep Output Files"},"1964":{i:0.000138133550550702,u:"../ligprep_command_reference/ligprep_command_using.htm",a:"The LigPrep panel in Maestro provides access to the main ligprep command options. For finer control of the options, you must run LigPrep from the command line. If you want to prepare a large number of ligands, you might prefer to run LigPrep from the command line. This topic links to a number of ...",t:"Using LigPrep from the Command Line"},"1965":{i:0.000129740613609287,u:"../ligprep_command_reference/ligprep_command_using_default.htm",a:"LigPrep can be run using the default settings by specifying only the input and output files. Examples follow showing syntax using different input file types; both examples include output files in Maestro format: \nligprep -isdmy_2D_cts.sd -omae my_3D_cts.mae\n In this example, the input file is in SD ...",t:"Default LigPrep Run"},"1966":{i:0.000137853673640107,u:"../ligprep_command_reference/ligprep_command_using_singleoutput.htm",a:"LigPrep is primarily designed to produce high quality 3D structures and, if possible, to produce multiple output structures for each input structure by introducing variations in the chemical nature of the structures, such as adjusting the stereochemistry or the ionization (protonation) state. ...",t:"Producing One Output Structure for Each LigPrep Input Structure"},"1967":{i:0.000140346271889413,u:"../ligprep_command_reference/ligprep_command_using_singleoutput_geom.htm",a:"One extended-conformation, energy-minimized 3D structure can be produced for each 3D input structure from the SD file, my_3D.sd, using the command: \nligprep -i 0 -nt -s 1 -g -isd my_3D.sd  ‑omae my_improved_3D.mae \n For the Maestro-formatted input file my_3D.mae, use the command \nligprep -i 0 -nt -s ...",t:"Adjusting Only the Geometry with LigPrep"},"1968":{i:0.000141030122129871,u:"../ligprep_command_reference/ligprep_command_using_singleoutput_chem.htm",a:"with LigPrep LigPrep can adjust the chemistry of the input structure by removing counter ions (desalting), neutralizing or ionizing ionizable groups, changing between tautomers and generating stereoisomers. Currently it is not possible to guarantee that each input structure will produce only one ...",t:"Adjusting the Chemistry"},"1969":{i:0.000140950957624766,u:"../ligprep_command_reference/ligprep_command_using_variations.htm",a:"Often it is desirable to generate a number of variations on each input structure. The main benefit is that there is a better chance that the resulting collection of structures includes the “best” form for your particular study. However, as more variations are generated, proportionately more CPU time ...",t:"Generating Structural Variations in a LigPrep Run"},"1970":{i:0.000139987750771635,u:"../ligprep_command_reference/ligprep_command_using_variations_small.htm",a:"To generate a few low-risk variations on the input structures: \nligprep -r 1 -s 8 -t 4 -i 2 -W i,-pht,1.0 ‑imae input.mae -omae output.mae\n For each structure in the input structure file, LigPrep generates an extended conformation containing only the lowest energy ring conformation for any rings ...",t:"Generating a Small Set of Low-risk Variations with LigPrep"},"1971":{i:0.00013666765085013,u:"../ligprep_command_reference/ligprep_command_using_variations_many.htm",a:"To generate many variations:  \nligprep -r 4 -s 64 -t 8 -i 2 -W i,-pht,2.0 -imae input.mae -omae output.mae\n This command generates many variations for ring conformations, stereoisomers, tautomers, and ionization states. Not all variations are necessarily kept in the output: some may be eliminated ...",t:"Generating Many Variations with LigPrep"},"1972":{i:0.000125913644885604,u:"../ligprep_command_reference/ligprep_command_using_variations_meta.htm",a:"For some scenarios, a set of nondefault options is needed. Rather than having to understand and specify each option separately, you can use the ligprep command’s more intuitive meta-options, which include: itc can be replaced by one or more of: The adjust, vary and expand meta-options control the ...",t:"Using LigPrep Meta-Options for Convenient Selection of Run Characteristics"},"1973":{i:0.000121707215411639,u:"../ligprep_command_reference/ligprep_command_using_filter.htm",a:"During LigPrep processing, structures matching certain conditions can be removed. A file containing a list of these conditions must be created before running LigPrep. For example, to remove molecules with a molecular weight greater than 650 and molecules that have too many hydrogen bond acceptors, ...",t:"Filtering Structures in a LigPrep Run"},"1974":{i:8.71893540834869E-05,u:"../ligprep_command_reference/ligprep_command_using_remote.htm",a:"One advantage of the job control facility is that jobs can be submitted to remote hosts that have been prepared to run Schrödinger software. For instance, to run LigPrep on a host called fast_cpu, you can add the -HOST option to a command: \nligprep -HOST fast_cpu -s 1 -imae my_2D.mae ‑omae ...",t:"Running LigPrep on a Remote Host"},"1975":{i:0.000115580222931524,u:"../ligprep_command_reference/ligprep_tools.htm",a:"This chapter describes the tools used by LigPrep. These tools exist as libraries, which LigPrep uses directly, and as utilities, which can be run independently. A description of the purpose and the utility syntax is provided for tools that are unique to LigPrep, and a reference to the full ...",t:"Tools Used by LigPrep"},"1976":{i:0.000118384518609816,u:"../ligprep_command_reference/ligprep_tools_sdconvert.htm",a:"\n            This utility converts between MDL SD, Maestro, and MacroModel format files. See  \n            Conversion To and From SD Format: sdconvert  for details of this utility. In LigPrep, the tool is used with the option to save structures that could not be converted (the  -bad option of ...",t:"LigPrep Use of sdconvert"},"1977":{i:0.000114690959396725,u:"../ligprep_command_reference/ligprep_tools_smiles_to_mae.htm",a:"\n            The smiles_to_mae Utility\n This utility converts a SMILES file or a CSV file with SMILES strings to a Maestro-formatted file. Syntax: \nsmiles_to_mae [options] {inputfile.smi|inputfile.csv} outputfile.mae\n The first argument is taken as the input file and the second as the output file. ...",t:"\n            The smiles_to_mae Utility\n"},"1978":{i:0.000129480835808258,u:"../ligprep_command_reference/ligprep_tools_applyhtreat.htm",a:"LigPrep Use of applyhtreat The applyhtreat utility is used by LigPrep to add or remove hydrogen atoms to complete the valence. See  \n            Structure Preparation: applyhtreat \n  for details of this utility. ",t:"LigPrep Use of applyhtreat"},"1979":{i:0.000125846748913914,u:"../ligprep_command_reference/ligprep_tools_desalter.htm",a:"\n            The desalter Utility\n            \n Individual structures present in many databases contain multiple molecules. In many cases these are co-crystallized components such as counter ions. These components often need to be removed before further calculations are performed. The desalter ...",t:"\n            The desalter Utility\n            \n"},"1980":{i:0.000128159537101644,u:"../ligprep_command_reference/ligprep_tools_neutralizer.htm",a:"\n            The neutralizer Utility\n            \n Ionizable groups present in structures could be in any of a number of charge states. Some programs, such as the ionizer, do not successfully process input structures containing charged groups or molecules. The neutralizer neutralizes functional ...",t:"\n            The neutralizer Utility\n            \n"},"1981":{i:0.000179308663837322,u:"../ligprep_command_reference/ligprep_tools_ionizer.htm",a:"The ionizer, or ionization state expander, produces multiple structures for each input structure with different combinations of ionized states based on the ionizable groups present. By default, the ionizer produces both protonated and deprotonated forms of groups that have a pKa between 5 and 9. ...",t:"LigPrep Use of the ionizer Utility"},"1982":{i:0.000161774978146749,u:"../ligprep_command_reference/ligprep_tools_tautomerizer.htm",a:"Some isomeric forms of molecules coexist and are interchangeable under physiological conditions. Tautomers constitute an important class of such isomers. For some types of calculations, such as docking with Glide, considering the appropriate tautomeric forms of ligands is nearly as important as ...",t:"LigPrep Use of the tautomerizer Utility"},"1983":{i:0.000200714057632846,u:"../ligprep_command_reference/ligprep_tools_ligfilter.htm",a:"ligfilter is a versatile utility for filtering molecules based on property values and descriptor counts. LigPrep uses ligfilter to filter molecules, usually to eliminate those matching certain conditions (e.g., molecular weight \u003e 650 amu), although other types of filtering are possible. This section ...",t:"LigPrep Use of ligfilter"},"1984":{i:0.000195265618429198,u:"../ligprep_command_reference/ligprep_tools_stereoizer.htm",a:"\n            The stereoizer Utility The stereoizer has two modes: label mode and stereoisomer mode. In label mode, various stereochemical features in the input structures are labeled, such as atom chiralities (R/S) or double-bonded atom conformations (E/Z for groups of atoms connected by an odd ...",t:"\n            The stereoizer Utility"},"1985":{i:0.000154376121522566,u:"../ligprep_command_reference/ligprep_tools_stereoizer_properties.htm",a:"Stereochemical properties created and recognized by the stereoizer include those related to atom chiralities and to the conformations of doubly bonded series of C and N atoms. Another type of stereochemical information, atom numbering chiralities, is used to help track higher-order stereochemical ...",t:"The stereoizer Stereochemical Properties"},"1986":{i:0.000133132351797481,u:"../ligprep_command_reference/ligprep_tools_stereoizer_limitations.htm",a:"The stereoizer is a fairly strict implementation of the standard CIP rules for chiralities and double-bond geometries as described in Prelog, V.; Helmchen, G. Basic Principles of the CIP-System and Proposals for a Revision. Angew. Chem., Int. Ed. Engl. 1982, 21, 567-583, except that prioritization ...",t:"Known Limitations of the stereoizer"},"1987":{i:9.90480531207371E-05,u:"../ligprep_command_reference/ligprep_tools_other.htm",a:"A number of utilities that are provided with LigPrep, but are not part of LigPrep itself, might be useful in conjunction with LigPrep. These utilities are available in $SCHRODINGER/utilities, and include: proplister—extracts requested properties from Maestro-formatted files ligfilter—selects ...",t:"Other Utilities that May Be Useful with LigPrep"},"1988":{i:0.000166899216778443,u:"../ligprep_command_reference/ionizer.htm",a:"\n            The ionizer Utility\n Under physiological conditions, a molecule with acidic or basic groups can exist in a variety of protonation (ionization) states. Ligand structures are usually provided in only one of these states. To ensure that the important ionization states are sampled, LigPrep ...",t:"\n            The ionizer Utility\n"},"1989":{i:0.000182779900845412,u:"../ligprep_command_reference/ionizer_running.htm",a:"Running the ionizer To run the ionizer from the command line, use the following syntax: \n$SCHRODINGER/utilities/ionizer [options] \n For a description of the options, run the command with the -h option.",t:"Running the ionizer"},"1990":{i:0.000154155736117044,u:"../ligprep_command_reference/ligprep_ionizer_input.htm",a:"For the ionizer to process all input structures successfully, each structure must satisfy the following requirements: Hydrogens must be added. \n     Atom types must be correct. \n     There must be no formal charge on atoms matched as centers of ionizable groups.\n     It is not necessary for input ...",t:"Input Structure Requirements for the ionizer"},"1991":{i:0.0001448392179646,u:"../ligprep_command_reference/ligprep_ionizer_restricting.htm",a:"The Ionizer has two methods for restricting the generation of ion states to ensure that each state has a significant population under the chosen conditions. The default method is to screen values according to a pH range. This is done by specifying a target pH value with the -ph option and a ...",t:"Restricting Ionization State Generation"},"1992":{i:0.000140583842735196,u:"../ligprep_command_reference/ionizer_output.htm",a:"\n            If an input structure contains a large number of ionizable groups, the number of output structures will be very large (2N combinations) and the ionizer will take a long time to run. The ionizer has a limit on the number of ionizable groups in any structure that can be set, above which ...",t:"Structural Output from the ionizer"},"1993":{i:0.000134882563948144,u:"../ligprep_command_reference/ionizer_log.htm",a:"As the Ionizer expands input structures into ionized output structures, it records various status messages in the log file, which by default is named jobname.log. You can specify the log file name with the -l option. If you want to direct the log file to your screen, set the log file name to a ...",t:"Log File Output"},"1994":{i:0.000158689164206402,u:"../ligprep_command_reference/ionizer_properties.htm",a:"When the ionization state changes, most if not all of the properties of the structure are no longer valid. By default, the Ionizer does not copy the properties of the input structures to the output. In some cases, the properties of the parent structure are useful for later screening or ...",t:"Maestro Properties from the ionizer"},"1995":{i:0.00011962798847421,u:"../ligprep_command_reference/ionizer_custom.htm",a:"The file that contains the substructure patterns used to identify ionizable groups can be customized. This file contains substructure patterns for protonating N atoms, and deprotonating NH, OH, and SH groups. The standard patterns file can be found at \n$SCHRODINGER/mmshare-vversion/data/ionizer.ini\n ...",t:"Creating a Customized Patterns File for the ionizer"},"1996":{i:8.67475297966286E-05,u:"../ligprep_command_reference/ionizer_limitations.htm",a:"The limitations described in this section apply only to the Ionizer operation, if used in the LigPrep process, or if used on a stand-alone basis. Limitations of the LigPrep process as a whole are described in  \n            LigPrep Limitations . Local Focus in Adjustment of Protonation States The ...",t:"Ionizer Limitations"},"1997":{i:0.000171614895505994,u:"../ligprep_command_reference/tautomerizer.htm",a:"\n            The tautomerizer Utility\n Tautomers are an important class of isomers that can interconvert under physiological conditions. Tautomeric forms have different chemical properties and interact differently. For instance, one tautomeric form may interact with the active site of a protein more ...",t:"\n            The tautomerizer Utility\n"},"1998":{i:0.000160647392886547,u:"../ligprep_command_reference/tautomerizer_running.htm",a:"To run the tautomerizer from the command line, use the syntax below. The tautomerizer is part of the LigPrep collection of programs and requires a LigPrep license. \n$SCHRODINGER/utilities/tautomerizer [options] input_file.mae output_file.mae\n For a description of the options, run the command with ...",t:"Running the tautomerizer"},"1999":{i:0.00017891499642602,u:"../ligprep_command_reference/tautomerizer_database.htm",a:"The default tautomer database is not accessible to users. However, you can provide your own file to either completely override the default file, or add patterns to it. At the top level of the tautomer database file the following four items can be present: name, clear_standard, group_def, and ...",t:"The Tautomer Database"},"2000":{i:0.000146997515703343,u:"../ligprep_command_reference/tautomerizer_processing.htm",a:"Tautomer Processing Each structure in the input structure file is processed separately. The processing of each structure by the tautomerizer can be divided into two stages: tautomer pattern matching and structure generation.",t:"Tautomer Processing"},"2001":{i:0.000123441919573804,u:"../ligprep_command_reference/tautomerizer_processing_pattern.htm",a:"The current structure is examined for all matches of all tautomeric patterns in the tautomerizer database. All matches are cross-examined to see if the atoms are completely contained within another match. If so, the match containing the smaller number of atoms is eliminated. If they are the same ...",t:"Tautomer Pattern Matching"},"2002":{i:9.63022767587226E-05,u:"../ligprep_command_reference/tautomerizer_processing_generation.htm",a:"For each match, all tautomers in the tautomer set should be considered. Structures in which more than one match has been found have multiple locations in the structure that can be tautomerized, and all combinations of tautomers that are compatible should be considered. Double bonds that can shift to ...",t:"Structure Generation"},"2003":{i:8.77353148226145E-05,u:"../macromodel_command_reference/macromodel_capabilities.htm",a:"MacroModel is the batch-mode molecular modeling computational facility for use with Maestro. It is designed to minimize the energy of one structure or a series of structures, to eliminate duplicate conformations, to do conformational searches, and to conduct molecular dynamics simulations, including ...",t:"MacroModel Capabilities"},"2004":{i:9.32076803008913E-05,u:"../macromodel_command_reference/macromodel_capabilities_energetic.htm",a:"MacroModel Energetic Calculation Features",t:"MacroModel Energetic Calculation Features"},"2005":{i:9.91435258970878E-05,u:"../macromodel_command_reference/macromodel_capabilities_energetic_ffld.htm",a:"MM2*, MM3*, AMBER*, and OPLS* force fields (enhanced and/or modified versions of the corresponding native force-fields; see  Force-Field File Format  for implementation differences). Native OPLS_2005 (also referred to collectively under the name OPLS-AA). Native OPLS3 (also referred to collectively ...",t:"Force Fields and Energy Equations in MacroModel"},"2006":{i:8.05255391227941E-05,u:"../macromodel_command_reference/macromodel_capabilities_energetic_minimization.htm",a:"Large and small molecules. Single or multiple structures. Full structure or substructure.  Substructures can be specified using ASL expressions. Positional, distance, and angular constraints. Choice of steepest descent (SD), Powell-Reeves conjugate gradient (PRCG), truncated-Newton ...",t:"MacroModel Energy Minimization Methods"},"2007":{i:0.000100278392558988,u:"../macromodel_command_reference/macromodel_capabilities_energetic_csearch.htm",a:"Monte Carlo ( MCMM) or systematic methods ( SPMC). Low-mode search method ( LMCS).  Large-scale low-mode search method ( LMC2). This facility extends the  LMCS methodology to systems large enough to encompass entire proteins. ConfGen ( CGEN). This is a separately-licensed module for rapidly and ...",t:"MacroModel Conformational Searching and Comparison Features"},"2008":{i:9.7212811336428E-05,u:"../macromodel_command_reference/macromodel_capabilities_energetic_mdmc.htm",a:"Molecular Dynamics or Stochastic Dynamics. Multiple timestep acceleration. Constant temperature or energy. SHAKE bond length constraints. Translational and angular momentum constraints. Simulated annealing. Internal coordinate and surface area monitoring. Hydrogen-bond monitoring. Local ...",t:"MacroModel Molecular Dynamics and Monte Carlo Simulation Features"},"2009":{i:0.000111572916486512,u:"../macromodel_command_reference/macromodel_capabilities_energetic_coords.htm",a:"MacroModel Coordinate Manipulation Features Different molecules may be aligned by center, principal axis, or both, using  COPY and  ALGN. ",t:"MacroModel Coordinate Manipulation Features"},"2010":{i:0.000106832056610389,u:"../macromodel_command_reference/macromodel_capabilities_energetic_embrace.htm",a:"Embrace ( MBAE) Multi-ligand Bimolecular Association with Energetics: A method for automatically minimizing or performing conformational searches on prepositioned ligands in the active site of a protein and obtaining energetic information related to the association of the ligands with the protein.",t:"MacroModel Molecular Association Feature"},"2011":{i:0.000102567082158506,u:"../macromodel_command_reference/macromodel_capabilities_energetic_partition.htm",a:"Partition Coefficients with MacroModel LOGP: A automated calculation method for estimating the logarithm of the partition coefficient for a series of solutes between two immiscible liquids. ",t:"Partition Coefficients with MacroModel"},"2012":{i:0.000109047798912991,u:"../macromodel_command_reference/macromodel_capabilities_energetic_fep.htm",a:"See the  FEGA,  FEIA,  FEAV,  FESA, and  FESU commands; also the didactic write-up in  Free Energy Simulations with MacroModel . Free-energy perturbation may be carried out using mixed-mode Monte Carlo / Stochastic Dynamics, as well as SD or MD. When used in network-distributed mode, each process ...",t:"Free-Energy Perturbation in MacroModel"},"2013":{i:9.14995586095528E-05,u:"../macromodel_command_reference/macromodel_capabilities_energetic_mc.htm",a:"Internal coordinate Metropolis Monte Carlo.\n     Structure sampling.\n     Evaluation of average enthalpy.\n     Mixed mode MD/MC simulations.\n     Importance sampling for MC and MD/MC.\n     A broad range of “smart” Monte Carlo and mixed MC/MD methods:\n     Individual Methods: SD: Stochastic Dynamics\n ...",t:"Monte Carlo Simulation in MacroModel"},"2014":{i:0.00012318956967218,u:"../macromodel_command_reference/macromodel_capabilities_computational.htm",a:"Schrödinger products provide support for submitting jobs to batch queues. Any jobs that can be run on a remote machine can be submitted to a batch queue. See  Preparing for Remote Job Submission  for information on setting up batch queue support. MacroModel jobs can be run with a simplified input ...",t:"MacroModel Computational Features"},"2015":{i:0.000211384700788514,u:"../macromodel_command_reference/macromodel_capabilities_capacity.htm",a:"MacroModel uses dynamic memory allocation. For most computations, the size of the system that can be studied is limited only by the resources of the computer on which the simulation is performed. Some compiled-in limits remain, and a few are described below: MAXFV—The maximum number of atoms that ...",t:"MacroModel Program Capacity"},"2016":{i:9.72636163773527E-05,u:"../macromodel_command_reference/macromodel_capabilities_misc.htm",a:"The  SPAT command allows the user to instruct MacroModel how to proceed when it encounters certain atom types. The  GEOM command allows the user to obtain geometric information about the molecule from the MacroModel command file.  Many properties are now recorded in Maestro-formatted output ...",t:"Miscellaneous MacroModel Features"},"2017":{i:7.53770031551926E-05,u:"../macromodel_command_reference/commandline_mm.htm",a:"Running MacroModel from the command line gives you the ability to customize batch processing. In addition, some types of MacroModel calculations are not supported by the Maestro GUI. This chapter gives instructions on how to launch MacroModel jobs from the command line. On Windows, you can open a ...",t:"Running MacroModel from the Command Line"},"2018":{i:9.91835159219104E-05,u:"../macromodel_command_reference/commandline_mm_preparing.htm",a:"Before you can submit MacroModel jobs from the command line, you must have a valid input structure file and a command (jobname.com) file or simplified input file. On Linux and Mac, you must also set the SCHRODINGER environment variable; on Windows the SCHRODINGER environment variable is already set ...",t:"Preparing for MacroModel Calculations"},"2019":{i:9.70576243512933E-05,u:"../macromodel_command_reference/commandline_mm_preparing_comfile.htm",a:"Every time job files are written or a job is started from Maestro, a MacroModel command file and a structure file are created. The command file contains all necessary information for MacroModel to perform the job as specified. Most MacroModel tasks can be executed from Maestro. However, there are a ...",t:"The MacroModel Command File"},"2020":{i:0.000102022096405035,u:"../macromodel_command_reference/commandline_mm_preparing_comfile_format.htm",a:"To run MacroModel calculations, a molecular structure file and a command file are required. The molecular structure file contains the structures to be used as input in the calculation. The command file contains the name of the input structure file, the name of the output structure file, and an ...",t:"The MacroModel Command File Format"},"2021":{i:0.000113858757600844,u:"../macromodel_command_reference/commandline_mm_preparing_sif.htm",a:"MacroModel also has a simplified input file, in which the parameters are set with keyword-value pairs in free format. This file can be used for some but not all MacroModel calculations, which you start with the $SCHRODINGER/macromodel command. For details, see  Running MacroModel with the Simplified ...",t:"The MacroModel Simplified Input File"},"2022":{i:0.000145179851974926,u:"../macromodel_command_reference/commandline_mm_submitting.htm",a:"The bmin script located in the $SCHRODINGER directory should be used to launch MacroModel jobs from any directory, once the SCHRODINGER environment variable has been set. To launch a job, enter the following command in a terminal window: $SCHRODINGER/bmin [options] jobname replacing jobname with the ...",t:"Submitting MacroModel Jobs From the Command Line"},"2023":{i:0.00017616830202633,u:"../macromodel_command_reference/commandline_mm_remote_distrib.htm",a:"Remote MacroModel jobs run on a different host from the one on which the command is entered to start the job. Distributed MacroModel allows certain types of calculations to be run by distributing tasks across a number of different hosts or processors. Remote and distributed MacroModel jobs can be ...",t:"Running Remote and Distributed MacroModel Calculations"},"2024":{i:8.27186543344835E-05,u:"../macromodel_command_reference/commandline_mm_interacting.htm",a:"\n            Interacting With a Running MacroModel Job The Schrödinger Job Control facility allows you to interact with running MacroModel jobs. Because all jobs submitted, either from Maestro or the command line, are controlled by the Job Control facility, all jobs can be monitored using the ...",t:"\n            Interacting With a Running MacroModel Job"},"2025":{i:0.000111500010313645,u:"../macromodel_command_reference/mmod_input.htm",a:"MacroModel command input comes from a file that is structured in a fixed format, with integer and real numbers as the fields in each line of the file. This format is described in detail in  MacroModel Operation Codes . To provide a more flexible and readable interface, a new, simplified input file ...",t:"Running MacroModel with the Simplified Input File"},"2026":{i:0.000233403470692903,u:"../macromodel_command_reference/opcodes.htm",a:"This chapter provides reference information for using the operation codes in the MacroModel command file. Unless otherwise specified, a zero in any opcode argument specifies the default value, if there is a default. Also, unless otherwise specified, the default is a reasonable value to choose if you ...",t:"MacroModel Operation Codes"},"2027":{i:0.00103891050365852,u:"../macromodel_command_reference/opcodes_file.htm",a:"The opcodes in this section are linked below: READ — READ a structure Read a structure from the input file. Repeated READ commands read multiple structures from the input file. WRIT — WRITe a structure Writes the current structure to the output file. WRIT is not necessary for Monte Carlo searches ...",t:"File Reading and Writing Opcodes"},"2028":{i:0.00099494148343905,u:"../macromodel_command_reference/opcodes_ffld.htm",a:"The opcodes in this section are linked below: FFLD — Force FieLD Selection Specifies a force field; there is no default for this command. A force field must always be specified. The force-field files we supply have names fieldname.fld, where fieldname is one of: mm2, mm3, amber, amber94, oplsa, f10 ...",t:"Opcodes for Selection of Force Field, Nonbonded Cutoffs, and Solvation Treatment"},"2029":{i:0.000807578691375458,u:"../macromodel_command_reference/opcodes_flowcontrol.htm",a:"The opcodes in this section are linked below: BGIN — loop BeGIN Begin a command loop for minimizing a series of structures.  END — loop END End a command loop. Commands between the  BGIN and END will be executed repetitively.  BGIN/END loops cannot be nested. REST  — RESTart This command, if placed ...",t:"Program Flow Control Opcodes"},"2030":{i:0.000210956765491787,u:"../macromodel_command_reference/opcodes_hydrogens.htm",a:"The opcodes in this section are linked below: HADD — Hydrogen ADD Add hydrogens and lone pairs to a structure. This command must come immediately after the  READ command if it is used. HDEL — Hydrogen DELete Hydrogen delete, opposite of  HADD. This command must come immediately after the  READ ...",t:"Hydrogen Addition and Deletion Opcodes"},"2031":{i:0.000485905857205882,u:"../macromodel_command_reference/opcodes_energy.htm",a:"The opcodes in this section are linked below: ELST — Energy LiSTing Calculate energy of current structure and dump Energy LiSTing to one or more output files. Can be used within a  BGIN/ END loop to compute energies of all structures in a file. ELST cannot be used with the MC conformational ...",t:"Energy Calculation Opcodes"},"2032":{i:0.000901205562375315,u:"../macromodel_command_reference/opcodes_minimization.htm",a:"In this section we describe the  SDLP command, which explicitly searches for saddle-points, as well as commands associated with energy minimization. The opcodes in this section are linked below: MINI — MINImize the energy of a structure Used after the  READ command, and if used within a  BGIN/ END ...",t:"Energy Minimization Opcodes"},"2033":{i:0.000930854519550589,u:"../macromodel_command_reference/opcodes_constrained_mini.htm",a:"The opcodes in this section are linked below: DRIV — carry out a geometry DRIVe  When included in a  BGIN/ END loop the DRIV command drives the specified geometric parameter through a set of fixed values. The parameter can be a dihedral angle, a bond angle, or a bond distance. The DRIV command ...",t:"Constrained Energy Minimization Opcodes"},"2034":{i:0.000793112331097632,u:"../macromodel_command_reference/opcodes_conf_comparison.htm",a:"The commands in this section are used to describe criteria for considering conformations to be distinct. These commands are used in the contexts of conformational search and minimization of multiple conformations. The opcodes in this section are linked below: MSYM — use the MmSYM library mmsym is a ...",t:"Conformational Comparison Opcodes"},"2035":{i:0.000393542394731437,u:"../macromodel_command_reference/opcodes_coordinate.htm",a:"The combination of the  COPY and  ALGN opcodes permits very rapid approximate alignment of ligands with a reference ligand using center of mass and moments of inertia. These commands may be used to crudely preposition ligands prior to an Embrace conformational search calculation based upon the ...",t:"Coordinate Manipulation Opcodes"},"2036":{i:0.00116079127643547,u:"../macromodel_command_reference/opcodes_csearch.htm",a:"The entire contents of the input file are used as the “seed” for the search for most search methods. At the start of a run, the full contents of this file is read, and the search proceeds as if all the structures in the input file had been found in the current search. This allows a new search to use ...",t:"Conformational Searching Opcodes"},"2037":{i:0.000296685788138441,u:"../macromodel_command_reference/opcodes_mdmc.htm",a:"The opcodes in this section are linked below: MDYN  — Molecular DYNamics Carry out molecular dynamics. Structures must be fully minimized before molecular dynamics is initiated and initial conditions (temperature, time step, and total time) must be selected. Temperature maintenance with a constant ...",t:"Molecular Dynamics and Monte Carlo Simulation Opcodes"},"2038":{i:0.000213695002440941,u:"../macromodel_command_reference/opcodes_fep.htm",a:"See  Free Energy Simulations with MacroModel  for an extended discussion, including a descriptive example. The opcodes in this section are linked below: FEGA — Free Energy mutating Group Atom  This command allows explicit addition to the list of atoms whose parameters change during a free-energy ...",t:"Free-Energy Perturbation Opcodes"},"2039":{i:0.000255511783194733,u:"../macromodel_command_reference/opcodes_mc.htm",a:"The opcodes in this section are linked below: MCLO — Monte CarLO simulation Carry out classical internal coordinate Metropolis Monte Carlo simulation for sampling of phase space. Use  MDYN,  MCSD or MCLO commands to identify internal degrees of freedom to be varied.  RCA4 commands are allowed, but a ...",t:"Monte Carlo Simulation Opcodes"},"2040":{i:0.000507749133132202,u:"../macromodel_command_reference/opcodes_embrace.htm",a:"The opcodes in this section are linked below: MBAE — Multi-ligand Bimolecular Association with Energetics: Embrace MBAE invokes an algorithm in which MacroModel performs calculations on a number of pre-positioned ligands with a single receptor. The input structure file must must be a multiple ...",t:"Docking (Molecular Association) Opcodes"},"2041":{i:0.000945289677112565,u:"../macromodel_command_reference/opcodes_misc_debug.htm",a:"The opcodes in this section are linked below: DEBG — DEBuGging  Turn on program debug switch (numbered 1-1100). Use as many of these commands as necessary to turn on as many of the switches as you want.  DUMP — DUMP connection table List the connection table to the log file (used primarily for ...",t:"Miscellaneous and Debugging Opcodes"},"2042":{i:0.000247542161654546,u:"../macromodel_command_reference/opcodes_confgen.htm",a:"ConfGen is a very flexible and fast conformational searching technology for ligands, supported by the opcodes listed in this topic. A ConfGen license is required to use the ConfGen opcodes. The opcodes are linked below: CGEN — ConfGen Related DEBG flag: 200. CGOP — ConfGen OPtions  CGOP is one of a ...",t:"ConfGen Opcodes"},"2043":{i:0.000124052317759907,u:"../macromodel_command_reference/opcodes_ligprep.htm",a:"The LigPrep opcodes require a LigPrep license to use. The opcodes in this section are linked below: CHIP — CHIrality Protocol CHIP instructs MacroModel to adjust its behavior appropriately for enforcing chiralities and avoiding common pitfalls encountered for structures that were originally 2D. CHIP ...",t:"LigPrep Opcodes"},"2044":{i:8.42758453314875E-05,u:"../macromodel_command_reference/mmod_command_using.htm",a:"Using MacroModel from the Command Line The MacroModel operation codes provide a great amount of flexibility in designing calculations. In the topics listed below, some guidance and examples are given to help you get the most out of MacroModel command-line calculations.",t:"Using MacroModel from the Command Line"},"2045":{i:0.000107997537622894,u:"../macromodel_command_reference/mmod_command_using_substructure.htm",a:"You can define substructures by placing the appropriate lines in the MacroModel command file (jobname.com), or by creating a substructure file (jobname.sbc), or both.  The easiest way of creating a substructure file is to use the Substructure tab in the MacroModel energy panels to define the desired ...",t:"The MacroModel Substructure Facility"},"2046":{i:0.000102146349371246,u:"../macromodel_command_reference/mmod_command_using_auto.htm",a:"You can use automatic setup for minimizations of a collection of conformers with redundant conformer elimination. Automatic setup is enabled by adding the  AUTO opcode to the command file for a calculation. You should place the  AUTO opcode, with appropriate arguments, just before the  MINI opcode ...",t:"Automatic Setup (AUTO) of Comparison Atoms for Redundant Conformer Elimination"},"2047":{i:0.000105116370478202,u:"../macromodel_command_reference/mmod_command_using_mini_stages.htm",a:"The MWRT feature of MacroModel enables different minimizer methods to be automatically applied during the minimization stage of a MacroModel computation. Each phase of an MWRT minimization can use a different minimizer method. For instance, an initial steepest descent minimization could be followed ...",t:"Using Several Different Minimization Stages During a MacroModel Minimization"},"2048":{i:9.26029068345143E-05,u:"../macromodel_command_reference/mmod_command_using_geom.htm",a:"\n            MacroModel Geometric Parameter Calculations Geometric properties such as atom positions, distances, angles, and dihedrals can be measured using the  GEOM opcode. Below is an example of the command file for a geometry calculation and explanations of the opcodes contained in the file. ...",t:"\n            MacroModel Geometric Parameter Calculations"},"2049":{i:9.463357825619E-05,u:"../macromodel_command_reference/mmod_command_using_aset.htm",a:"ASET can be used to examine the interaction energies between sets of atoms within a structure. In the sample below, the interaction energy between LYS 33 and the ligand in the CDK2 structure 1e1v is computed.  ...",t:"Calculating Interaction Energies Using ASET"},"2050":{i:9.50027354009509E-05,u:"../macromodel_command_reference/mmod_command_using_rwnd.htm",a:"The  RWND opcode, when included in a MacroModel command file, uses the input or output file again for a second computation. Currently this is supported only for a conformation search followed by a multiple minimization of the resulting conformers. This enables a conformation search to be performed ...",t:"Rewinding the Output File for Additional Minimization in MacroModel"},"2051":{i:9.53861248922926E-05,u:"../macromodel_command_reference/mmod_comand_using_vibrations.htm",a:"\n            Vibrational modes from MacroModel calculations can be visualized in Maestro using the ePlayer. Two opcodes,  VIBR and  VBR2, generate structures for a set of selected vibrational modes. VIBR is used for small molecules, whereas VBR2 is used for larger molecules of the order of seven ...",t:"Visualizing Vibrational Modes Generated by MacroModel"},"2052":{i:8.15957922763365E-05,u:"../macromodel_command_reference/mmod_command_using_align.htm",a:"\n            Alignment of Structures using MacroModel Combining the  COPY and  ALGN opcodes permits very rapid approximate alignment of ligands with a reference ligand using center of mass and moments of inertia. These commands can be used to preposition ligands crudely prior to an Embrace ...",t:"\n            Alignment of Structures using MacroModel"},"2053":{i:7.83897742672092E-05,u:"../macromodel_command_reference/mmod_command_examples.htm",a:"MacroModel Command File Examples To help you generate your own command files, examples of command files are given in the topics listed below. The command files and the log files for the examples can be found in $SCHRODINGER/macromodel-vversion/samples/Examples.",t:"MacroModel Command File Examples"},"2054":{i:0.000120449156140732,u:"../macromodel_command_reference/mmod_command_examples_energy.htm",a:"Below is an example of a command file for an energy calculation with solvation. A description of the opcodes and their arguments follows. \necalc.mae\necalc-out.mae\n MMOD       0      1      0      0     0.0000     0.0000     0.0000    0.0000\n FFLD      10      1      0      1     1.0000     0.0000    ...",t:"Command File Examples for MacroModel Energy Calculations"},"2055":{i:9.10792727659682E-05,u:"../macromodel_command_reference/mmod_command_examples_mini.htm",a:"Command File Examples for MacroModel Minimizations The topics listed below give examples of command files for several kinds of minimizations that can be done with MacroModel.",t:"Command File Examples for MacroModel Minimizations"},"2056":{i:0.000104497590262461,u:"../macromodel_command_reference/mmod_command_examples_mini_constrained.htm",a:"Below is an example command file for a minimization calculation. Explanations of the opcodes that appear in the file follow. \nmini-constr.mae\nmini-constr-out.mae\n MMOD       0      1      0      0     0.0000     0.0000    0.0000    0.0000\n FFLD      10      1      0      1     1.0000     0.0000    ...",t:"MacroModel Example: Constrained Minimization"},"2057":{i:0.00010214492830728,u:"../macromodel_command_reference/mmod_command_examples_mini_multimethod.htm",a:"MWRT minimizations enable multiple minimizer methods to be applied to a structure during the minimization stage. This can enhance the performance of the minimization process.  The first example below demonstrates the efficient minimization of a small protein domain.  ...",t:"MacroModel Example: Multiple-Method (MWRT) Minimizations"},"2058":{i:9.65558119474554E-05,u:"../macromodel_command_reference/mmod_command_examples_mini_nonconformers.htm",a:"Below is an example of the command file for an energy minimization of multiple non-conformers and explanations of the opcodes used in the file. \nmult-min.mae\nmult-min-out.mae\n MMOD    0    1    0    0     0.0000     0.0000     0.0000     0.0000\n FFLD   10    1    0    1     1.0000     0.0000     ...",t:"MacroModel Example: Energy Minimization of Multiple Non-Conformers"},"2059":{i:0.000105083868969513,u:"../macromodel_command_reference/mmod_command_examples_mini_auto.htm",a:"Below are two examples of command files for energy minimization of multiple conformers with redundant conformer elimination. The first uses the AUTO opcode; the second uses the  COMP opcode with arg1=0. Explanations of the opcodes used in the file that are essential to this example are given. ...",t:"MacroModel Example: Multiple Conformer Minimization With Automatic Redundant Conformer Elimination"},"2060":{i:0.000106561633708093,u:"../macromodel_command_reference/mmod_command_examples_mini_aslsubs.htm",a:"The following example illustrates the use of ASL in a multiple minimization calculation that constrains heavy atoms of the molecules. The file asl_test.mae file consists of two molecules, cyclopentane and cyclohexane. \nasl_test.mae\nasl_test-out.mae\n FFLD      14      1      0      0     1.0000     ...",t:"MacroModel Example: Multiple Minimization with Substructures Defined by ASL"},"2061":{i:0.000160996145094502,u:"../macromodel_command_reference/mmod_command_examples_mini_partitioncoef.htm",a:"\n            MacroModel Example: Partition Coefficient Estimation Below is an example of a command file for conducting log Poctanol,water calculations on a series of molecules. It is very similar to that used for multiple minimization of non-conformers.  \n \nlogP.mae\nlogP-out.mae\n FFLD      11      1 ...",t:"\n            MacroModel Example: Partition Coefficient Estimation"},"2062":{i:0.000112616339234862,u:"../macromodel_command_reference/mmod_command_examples_coordinate_scans.htm",a:"Below is an example command file for a dihedral scan calculation and explanations of the opcodes used in the files. \ndscan.mae\ndscan-out.mae\n MMOD    0    1    0    0     0.0000     0.0000     0.0000     0.0000\n FFLD   10    1    0    1     1.0000     0.0000     0.0000     0.0000\n READ    0    0    ...",t:"Command File Examples for MacroModel Coordinate Scans"},"2063":{i:8.44191841087397E-05,u:"../macromodel_command_reference/mmod_command_examples_conf_search.htm",a:"Command File Examples for MacroModel Conformational Searches Examples of several kinds of conformational searches are given in the topics listed below.",t:"Command File Examples for MacroModel Conformational Searches"},});