<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="Documentation.xml" data-mc-path-to-help-system="../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Command References|Prime Command Reference|Prime Command Syntax">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <link href="../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" /><title>ska—Protein Structure Alignment</title>
        <link href="../Resources/TableStyles/StandardRules.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../Resources/Stylesheets/docs.css" rel="stylesheet" />
        <script src="../Resources/Scripts/custom.modernizr.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/require.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/require.config.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/foundation.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/plugins.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body><a name="aanchor2586"></a>
        <MadCap:concept term="Command Reference" /><a name="aanchor2587"></a>
        <MadCap:concept term="Prime" /><a name="prime_commands_1525853049_748145"></a>
        <table class="NavLink" data-mc-conditions="Default.ScreenOnly">
            <tr class="NavLink">
                <td class="NavLeft"><span class="NavText">◀ <a class="NavLink MCXref xref xrefNavLink" href="prime_commands_mmgbsa_asl.htm">ASL Expressions for Prime MM-GBSA</a></span>
                </td>
                <td class="NavCenter"><span class="NavText"><a class="NavLink MCXref xref xrefNavLink" href="prime_command_referenceTOC.htm">Prime Command Reference Manual</a></span>
                </td>
                <td class="NavRight"><span class="NavText"><a class="NavLink MCXref xref xrefNavLink" href="prime_commands_ssp.htm">ssp—Secondary Structure Prediction</a> ▶</span>
                </td>
            </tr>
        </table>
        <h1 class="Title">ska—Protein Structure Alignment</h1>
        <p>The SKA program carries out structural alignment of proteins by aligning protein backbones at different levels of detail. </p>
        <p>The <code>ska</code> script provides an interface to the SKA structural alignment program. As with other computational programs in Prime its operation is controlled through simple input files. The allowed keywords and their values are discussed in more detail below. The <code>ska</code> script allows you to run the SKA program in three different modes under Job Control:</p>
        <ul>
            <li value="1">
                <p class="ListPara"><b>align mode</b>—SKA aligns two or more protein structures to one another.</p>
            </li>
            <li value="2">
                <p class="ListPara"><b>dbcreate mode</b>—SKA creates databases for use with scan mode. You should split PDB files with multiple chains into single-chain files before adding them to the database, as SKA has difficulty aligning to multiple chains. </p>
            </li>
            <li value="3">
                <p class="ListPara"><b>scan mode</b>—SKA searches a database of protein structures and identifies potential structural analogues. By default a non-redundant database of protein chains from the PDB is searched. </p>
                <p class="Heading3Nonum">Syntax </p>
            </li>
        </ul><pre>
$SCHRODINGER/ska [<i class="UserReplace">options</i>] <i class="UserReplace">jobname</i></pre>
        <p>By default the input is read from the file <i class="UserReplace">jobname</i><code>.inp</code> and the output is written to <i class="UserReplace">jobname</i><code>.out</code>. </p>
        <p><code>ska</code> does not generate output other than the explicitly defined database and a log file in <code>dbcreate</code> mode—see below for details.</p>
        <p class="Heading3Nonum">Options</p>
        <p>The only options apart from Job Control options accepted by <code>ska</code> are<code>-DEBUG</code>, which turns on debugging mode for both Job Control and the SKA program, and <code>-NOJOBID</code>, which runs the program outside Job Control.</p>
        <p class="Heading3Nonum">Command Input File</p>
        <p>The input file consists of lines containing keyword-value pairs, one per line. The keywords are described in <a class="Table_Number MCXref xref xrefTable_Number selected" href="#prime_commands_1525853049_744369">Table 1</a>. The set of allowed and required keywords depends on the mode, which is determined by the <code>MODE</code> keyword.</p>
        <table class="TableStyle-StandardRules" style="caption-side: top;mc-table-style: url('../Resources/TableStyles/StandardRules.css');" cellspacing="0">
            <caption valign="top" style="padding-bottom: 7pt;">
                <p class="Table_Caption" data-mc-autonum="Table 1. "><span class="autonumber"><span>Table 1. </span></span><a name="prime_commands_1525853049_744369"></a>Keywords syntax for ska input file</p>
            </caption>
            <thead>
                <tr class="TableStyle-StandardRules-Head-Header1">
                    <td class="TableStyle-StandardRules-HeadE-Column1-Header1">
                        <p class="Cell_Heading">Keyword syntax</p>
                    </td>
                    <td class="TableStyle-StandardRules-HeadE-Column1-Header1">
                        <p class="Cell_Heading">Mode</p>
                    </td>
                    <td class="TableStyle-StandardRules-HeadD-Column1-Header1">
                        <p class="Cell_Heading">Description</p>
                    </td>
                </tr>
            </thead>
            <tbody>
                <tr class="TableStyle-StandardRules-Body-Body1">
                    <td class="TableStyle-StandardRules-BodyH-Column1-Body1">
                        <p class="Cell_Body"><code>MODE </code><i class="UserReplace">mode</i>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyH-Column1-Body1">
                        <p class="Cell_Body">all</p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyG-Column1-Body1">
                        <p class="Cell_Body">The SKA operating mode; allowed values are:</p>
                        <p class="Cell_Body_Hang"><code>*align*</code>: structurally align two or more protein structures to on another. This is the default mode</p>
                        <p class="Cell_Body_Hang"><code>*scan*</code>: given a query structure scan a database of protein structures and identify potential structural homologues</p>
                        <p class="Cell_Body_Hang"><code>*dbcreate*</code>: create a database that can be search in scan mode from a list of PDB files</p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body1">
                    <td class="TableStyle-StandardRules-BodyE-Column1-Body1">
                        <p class="Cell_Body"><code>QUERY_FILE </code><i class="UserReplace">filename</i><code>  <![CDATA[ ]]></code>[<i class="UserReplace">name</i>]</p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyE-Column1-Body1">
                        <p class="Cell_Body"><code>*align*</code>
                        </p>
                        <p class="Cell_Body"><code>*scan*</code>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyD-Column1-Body1">
                        <p class="Cell_Body">Required. The input query structure. In <code>*align*</code> mode, the structure against which other proteins are aligned. In <code>*scan*</code> mode, the structure used for scanning the database. The optional <i class="UserReplace">name</i> (<code>*align*</code> mode only) sets the name of this structure to a value other than the filename (the default). The name is displayed in the output file (see <a class="Paragraph_Text MCXref xref xrefParagraph_Text selected" href="#prime_commands_1525853049_743845">Examples</a>, below). <i class="UserReplace">name</i> cannot contain the file separator character (‘/’ on UNIX). </p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body2">
                    <td class="TableStyle-StandardRules-BodyH-Column1-Body2">
                        <p class="Cell_Body"><code>TEMPLATE </code><i class="UserReplace">filename</i><code>  <![CDATA[ ]]></code>[<i class="UserReplace">name</i>] </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyH-Column1-Body2">
                        <p class="Cell_Body"><code>*align*</code>
                        </p>
                        <p class="Cell_Body">&#160;</p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyG-Column1-Body2">
                        <p class="Cell_Body">Required. PDB structures that are to be aligned to the query structure, set by <code>QUERY_FILE</code>. The <code>TEMPLATE</code> keyword can appear multiple times in order to be able to carry out multiple structure alignments (aligning more than one template structure to the query structure). The optional <i class="UserReplace">name</i> sets the name of this entry to a value other than the filename (the default). The name is displayed in the output file (see <a class="Paragraph_Text MCXref xref xrefParagraph_Text selected" href="#prime_commands_1525853049_743845">Examples</a>, below). <i class="UserReplace">name</i> cannot contain the file separator character (‘/’ on UNIX). </p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body2">
                    <td class="TableStyle-StandardRules-BodyE-Column1-Body2">
                        <p class="Cell_Body"><code>DATABASE </code><i class="UserReplace">filename</i>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyE-Column1-Body2">
                        <p class="Cell_Body"><code>*scan*</code>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyD-Column1-Body2">
                        <p class="Cell_Body">The absolute path to the database to scan with the query structure. The database can be generated in dbcreate mode. Default: database supplied with Prime.</p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body1">
                    <td class="TableStyle-StandardRules-BodyH-Column1-Body1">
                        <p class="Cell_Body"><code>DBNAME </code><i class="UserReplace">filename</i>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyH-Column1-Body1">
                        <p class="Cell_Body"><code>*dbcreate*</code>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyG-Column1-Body1">
                        <p class="Cell_Body">The name of the file in which to store the database create by <code>ska</code>. <i class="UserReplace">filename</i> must be the file name without any path specification.</p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body1">
                    <td class="TableStyle-StandardRules-BodyE-Column1-Body1">
                        <p class="Cell_Body"><code>FILELIST </code><i class="UserReplace">filename</i>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyE-Column1-Body1">
                        <p class="Cell_Body"><code>*dbcreate*</code>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyD-Column1-Body1">
                        <p class="Cell_Body">A file containing a list of absolute filenames for structures (in PDB format) that are to be included in a database of templates that can be search with <code>ska</code> in scan mode. Absolute filenames are required to avoid having to copy large numbers of PDB files to the temporary directory in which the job is run. </p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body2">
                    <td class="TableStyle-StandardRules-BodyH-Column1-Body2">
                        <p class="Cell_Body"><code>GAP_OPEN </code><i class="UserReplace">value</i>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyH-Column1-Body2">
                        <p class="Cell_Body"><code>*align*</code>
                        </p>
                        <p class="Cell_Body"><code>*scan*</code>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyG-Column1-Body2">
                        <p class="Cell_Body">Gap initiation penalty. </p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body2">
                    <td class="TableStyle-StandardRules-BodyE-Column1-Body2">
                        <p class="Cell_Body"><code>GAP_DEL </code><i class="UserReplace">value</i>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyE-Column1-Body2">
                        <p class="Cell_Body"><code>*align*</code>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyD-Column1-Body2">
                        <p class="Cell_Body">Deletion penalty. </p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body1">
                    <td class="TableStyle-StandardRules-BodyH-Column1-Body1">
                        <p class="Cell_Body"><code>OUTPUT_FILE </code><i class="UserReplace">filename</i>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyH-Column1-Body1">
                        <p class="Cell_Body"><code>*align*</code>
                        </p>
                        <p class="Cell_Body"><code>*scan*</code>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyG-Column1-Body1">
                        <p class="Cell_Body">File in which to store the structural alignment. Default is <i class="UserReplace">jobname</i><code>.out</code>. </p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body1">
                    <td class="TableStyle-StandardRules-BodyE-Column1-Body1">
                        <p class="Cell_Body"><code>ALISTRUCS_OUTFILE </code><i class="UserReplace">filename</i>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyE-Column1-Body1">
                        <p class="Cell_Body"><code>*align*</code>
                        </p>
                        <p class="Cell_Body">&#160;</p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyD-Column1-Body1">
                        <p class="Cell_Body">File in which to store the 3D coordinates of the aligned structures.</p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body2">
                    <td class="TableStyle-StandardRules-BodyH-Column1-Body2">
                        <p class="Cell_Body"><code>PSD_THRESHOLD </code><i class="UserReplace">value</i>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyH-Column1-Body2">
                        <p class="Cell_Body"><code>*align*</code>
                        </p>
                        <p class="Cell_Body"><code>*scan*</code>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyG-Column1-Body2">
                        <p class="Cell_Body">PSD threshold for inclusion in the MSA. Overridden by <code>RECKLESS</code>.</p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body2">
                    <td class="TableStyle-StandardRules-BodyE-Column1-Body2">
                        <p class="Cell_Body"><code>SSE_MINSIM </code><i class="UserReplace">value</i>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyE-Column1-Body2">
                        <p class="Cell_Body"><code>*align*</code>
                        </p>
                        <p class="Cell_Body"><code>*scan*</code>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyD-Column1-Body2">
                        <p class="Cell_Body">Minimum Secondary Structural Element (SSE) similarity for the alignment.</p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body1">
                    <td class="TableStyle-StandardRules-BodyH-Column1-Body1">
                        <p class="Cell_Body"><code>SSE_MINLEN </code><i class="UserReplace">value</i>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyH-Column1-Body1">
                        <p class="Cell_Body"><code>*align*</code>
                        </p>
                        <p class="Cell_Body"><code>*scan*</code>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyG-Column1-Body1">
                        <p class="Cell_Body">Minimum SSE length for the alignment.</p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body1">
                    <td class="TableStyle-StandardRules-BodyE-Column1-Body1">
                        <p class="Cell_Body"><code>SSE_WINLEN </code><i class="UserReplace">value</i>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyE-Column1-Body1">
                        <p class="Cell_Body"><code>*align*</code>
                        </p>
                        <p class="Cell_Body"><code>*scan*</code>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyD-Column1-Body1">
                        <p class="Cell_Body">Align only SSE windows of length <i class="UserReplace">value</i>.</p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body2">
                    <td class="TableStyle-StandardRules-BodyH-Column1-Body2">
                        <p class="Cell_Body"><code>SWITCH </code>[<code>true</code> | <code>false</code>]</p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyH-Column1-Body2">
                        <p class="Cell_Body"><code>*align*</code>
                        </p>
                        <p class="Cell_Body"><code>*scan*</code>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyG-Column1-Body2">
                        <p class="Cell_Body">Carry out global alignment first and then align subwindows if no similarity was found. </p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body2">
                    <td class="TableStyle-StandardRules-BodyE-Column1-Body2">
                        <p class="Cell_Body"><code>ORDER </code>[<code>seed</code> | <code>psd</code>]</p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyE-Column1-Body2">
                        <p class="Cell_Body"><code>*align*</code>
                        </p>
                        <p class="Cell_Body">&#160;</p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyD-Column1-Body2">
                        <p class="Cell_Body"><code>psd</code>: order the alignment by PSD to the seed structure. </p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body1">
                    <td class="TableStyle-StandardRules-BodyH-Column1-Body1">
                        <p class="Cell_Body"><code>CLEAN</code>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyH-Column1-Body1">
                        <p class="Cell_Body"><code>*align*</code>
                        </p>
                        <p class="Cell_Body">&#160;</p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyG-Column1-Body1">
                        <p class="Cell_Body">Exclude structures with a <code>PSD</code> &lt; <code>PSD_THRESHOLD</code> from the alignment. </p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body1">
                    <td class="TableStyle-StandardRules-BodyE-Column1-Body1">
                        <p class="Cell_Body"><code>RECKLESS </code>[<code>true</code> | <code>false</code>]</p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyE-Column1-Body1">
                        <p class="Cell_Body"><code>*align*</code>
                        </p>
                        <p class="Cell_Body"><code>*scan*</code>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyD-Column1-Body1">
                        <p class="Cell_Body">Force the alignment of structures even if no similarity is found.</p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body2">
                    <td class="TableStyle-StandardRules-BodyB-Column1-Body2">
                        <p class="Cell_Body"><code>USE_AUTOMATIC_SETTINGS</code>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyB-Column1-Body2">
                        <p class="Cell_Body"><code>*align*</code>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyA-Column1-Body2">
                        <p class="Cell_Body">Automatically run scanning alignment with lengths 8, 9, and 13, and choose the best alignment.</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <p class="Heading3Nonum">Return Value and Errors</p>
        <p>The script returns 0 for success and 1 for failure.</p>
        <p>In case of failure, check the log file for details on what might be have caused the program to fail. To turn on debugging output use the <code>-DEBUG</code> command line option as follows:</p><pre>
$SCHRODINGER/ska -DEBUG <i class="UserReplace">jobname</i></pre>
        <p class="Heading3Nonum">Environment Variables</p>
        <p>The <code>ska</code> program handles all required environment variables internally and requires only that the environment variable <code>SCHRODINGER</code> be set. Should the environment variable <code>TROLLTOP</code> exist in the current environment it will be overwritten.</p>
        <p class="Heading3Nonum"><a name="prime_commands_1525853049_743845"></a>Examples</p>
        <p>The following minimal input file (assumed to be called <code>align.inp</code>) structurally aligns two protein structures to one another:</p><pre>
QUERY_FILE query.pdb
TEMPLATE template.pdb
</pre>
        <p>where <code>query.pdb</code> is the name of the PDB file containing the query structure (the structure to which we want to align) and <code>template.pdb</code> contains the template structure (the structure we want to align to the query). </p>
        <p>When run using <code>$SCHRODINGER/ska align</code> it should produce the following output:</p>
        <ul class="ListCompact">
            <li value="1"><code>align.out</code>—a file containing the structural alignment
    </li>
            <li value="2"><code>align.log</code>—a log file that contains log information and diagnostics on the run
    </li>
        </ul>
        <p>Note that the actual 3D coordinates of the superposed structures are not written out by default You must use <code>ALISTRUCS_OUTFILE</code> to write out the structures.</p>
        <p>The following input file (<code>align.inp</code>):</p><pre>
QUERY_FILE query.pdb
TEMPLATE template.pdb
ALISTRUCS_OUTFILE superposition.pdb
</pre>
        <p>saves the 3D coordinates of the aligned structures in the file <code>superposition.pdb</code>.</p>
        <p>The following is a sample input file for database creation in dbcreate mode:</p><pre>
MODE dbcreate
FILELIST filelist.dat
DBNAME mydatabase.dat 
</pre>
        <p>The file <code>filelist.dat</code> contains the file names for the templates, including the path, as follows:</p><pre>
/scr/templates/template-1.pdb
/scr/templates/template-2.pdb
/scr/templates/template-3.pdb
/scr/templates/template-4.pdb
</pre>
        <p>A minimal input file for a scan is as follows:</p><pre>
MODE scan
QUERY_FILE query.pdb 
</pre>
        <p>Running ska with this input file would scan the database supplied with Prime for structural analogs. The output from the structural search contains pairwise alignments between the query structure and every structure in the database (assuming the two structures are sufficiently similar). The results can be analyzed in a more convenient way with the graphical SKA Results Viewer utility, <code>$SCHRODINGER/utilities/SkaResultsViewer</code>. </p>
        <p>The use of the optional <i class="UserReplace">name</i> argument is illustrated next. For the following input file:</p><pre>
QUERY_FILE query.pdb 1ctf
TEMPLATE 1dd3_A.pdb
</pre>
        <p>the output file is as follows:</p><pre>
            .........+.........+.........+.........+.........+.........+.....
 1ctf    1                                                           ceeeeeecc
1dd3_A    1  cchhhhhhhhhhhchhhhhhhhhhhhhhhcccchhhhhhhhhhhhhhhhhhhhhhccceeeeeecc
 1ctf    1  ---------------------------------------------------------EFDVILKAA
1dd3_A    1  MTIDEIIEAIEKLTVSELAELVKKLEDKFGVTAAAPVAVAAAPVAGAAAGAAQEEKTEFDVVLKSF
            ..........+.........+.........+.........+.........+.........+.
 1ctf   62  ccchhhhhhhhhhhhccchhhhhhhhhhc c  eeeeeccchhhhhhhhhhhhhhcceeeee
1dd3_A   67  ccchhhhhhhhhhhhcchhhhhhhhhhhcccccccceeccchhhhhhhhhhhhhhcceeeee
 1ctf   62  GANKVAVIKAVRGATGLGLKEAKDLVESA-P--AALKEGVSKDDAEALKKALEEAGAEVEVK
1dd3_A   67  GQNKIQVIKVVREITGLGLKEAKDLVEKAGSPDAVIKSGVSKEEAEEIKKKLEEAGAEVELK
RMSD: 0.763733
PSD: 0.024524
</pre>
        <p>Without the <i class="UserReplace">name</i> argument for the <code>QUERY_FILE</code> keyword, the output would be </p><pre>
.........+.........+.........+.........+.........+.........+.....
query    1                                                           ceeeeeecc
1dd3_A    1  cchhhhhhhhhhhchhhhhhhhhhhhhhhcccchhhhhhhhhhhhhhhhhhhhhhccceeeeeecc
query    1  ---------------------------------------------------------EFDVILKAA
1dd3_A    1  MTIDEIIEAIEKLTVSELAELVKKLEDKFGVTAAAPVAVAAAPVAGAAAGAAQEEKTEFDVVLKSF
            ..........+.........+.........+.........+.........+.........+.
query   62  ccchhhhhhhhhhhhccchhhhhhhhhhc c  eeeeeccchhhhhhhhhhhhhhcceeeee
1dd3_A   67  ccchhhhhhhhhhhhcchhhhhhhhhhhcccccccceeccchhhhhhhhhhhhhhcceeeee
query   62  GANKVAVIKAVRGATGLGLKEAKDLVESA-P--AALKEGVSKDDAEALKKALEEAGAEVEVK
1dd3_A   67  GQNKIQVIKVVREITGLGLKEAKDLVEKAGSPDAVIKSGVSKEEAEEIKKKLEEAGAEVELK
RMSD: 0.763733
PSD: 0.024524
</pre>
        <table class="NavLink" data-mc-conditions="Default.ScreenOnly">
            <tr class="NavLink">
                <td class="NavLeft"><span class="NavText">◀ <a class="NavLink MCXref xref xrefNavLink" href="prime_commands_mmgbsa_asl.htm">ASL Expressions for Prime MM-GBSA</a></span>
                </td>
                <td class="NavCenter"><span class="NavText"><a class="NavLink MCXref xref xrefNavLink" href="prime_command_referenceTOC.htm">Prime Command Reference Manual</a></span>
                </td>
                <td class="NavRight"><span class="NavText"><a class="NavLink MCXref xref xrefNavLink" href="prime_commands_ssp.htm">ssp—Secondary Structure Prediction</a> ▶</span>
                </td>
            </tr>
        </table>
    </body>
</html>