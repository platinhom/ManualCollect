<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="Documentation.xml" data-mc-path-to-help-system="../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Command References|Phase Command Reference|Managing 3D Databases from the Command Line">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <link href="../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" /><title>
            Managing Databases with phase_database
</title>
        <link href="../Resources/TableStyles/StandardRules.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../Resources/Stylesheets/docs.css" rel="stylesheet" />
        <script src="../Resources/Scripts/custom.modernizr.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/require.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/require.config.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/foundation.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/plugins.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body><a name="aanchor3169"></a>
        <MadCap:concept term="Command Reference" /><a name="aanchor3170"></a>
        <MadCap:concept term="Phase" /><a name="phase_command_db_4156632788_phase_database"></a>
        <table class="NavLink" data-mc-conditions="Default.ScreenOnly">
            <tr class="NavLink">
                <td class="NavLeft"><span class="NavText">◀ <a class="NavLink MCXref xref xrefNavLink" href="phase_command_db.htm">Managing 3D Databases from the Command Line</a></span>
                </td>
                <td class="NavCenter"><span class="NavText"><a class="NavLink MCXref xref xrefNavLink" href="phase_command_referenceTOC.htm">Phase Command Reference Manual</a></span>
                </td>
                <td class="NavRight"><span class="NavText"><a class="NavLink MCXref xref xrefNavLink" href="phase_command_db_distributing.htm">Distributing Jobs that use a Phase Database</a> ▶</span>
                </td>
            </tr>
        </table>
        <h1 class="Title">
            Managing Databases with phase_database
</h1>
        <p>Databases can be created and managed with the program <code>phase_database</code>. This program performs all the necessary database management tasks. The syntax is as follows:</p><pre>
SCHRODINGER/phase_database <i class="UserReplace">database</i> <i class="UserReplace">task</i> [<i class="UserReplace">jobName</i>] [<i class="UserReplace">options</i>]
</pre>
        <p>where <i class="UserReplace">database</i> is the full path to the database, which must have the extension <code>.phdb</code>. The database is a directory, <i class="UserReplace">dbName</i><code>.phdb</code>, which contains the database files (much like a Maestro project or a Canvas project). Information on the database structure is given in <a class="TopicLink MCXref xref xrefTopicLink" href="phase_command_db_structure.htm#phase_command_db_4156632788_759485">Phase Database Structure</a>. The default for the optional job name is <code>database_</code><i class="UserReplace">task</i>. Error messages are written to <i class="UserReplace">jobName</i><code>_errors.out</code>.</p>
        <p>The allowed tasks are summarized in <a class="Table_Number MCXref xref xrefTable_Number selected" href="#phase_command_db_4156632788_767380">Table 1</a>. Write permissions to the database are required for <code>import</code>, <code>revise</code>, <code>extract</code>, <code>delete</code>, and <code>convert</code>. For information about these tasks, you can use <code>-help_</code><i class="UserReplace">task</i> to get options for a particular task, rather than <code>-help</code>, which gives the full help message.</p>
        <table class="TableStyle-StandardRules" style="caption-side: top;mc-table-style: url('../Resources/TableStyles/StandardRules.css');" cellspacing="0">
            <caption valign="top" style="padding-bottom: 7pt;">
                <p class="Table_Caption" data-mc-autonum="Table 1. "><span class="autonumber"><span>Table 1. </span></span><a name="phase_command_db_4156632788_767380"></a>Available tasks for phase_database</p>
            </caption>
            <thead>
                <tr class="TableStyle-StandardRules-Head-Header1">
                    <td class="TableStyle-StandardRules-HeadE-Column1-Header1">
                        <p class="Cell_Heading">Task </p>
                    </td>
                    <td class="TableStyle-StandardRules-HeadD-Column1-Header1">
                        <p class="Cell_Heading">Action</p>
                    </td>
                </tr>
            </thead>
            <tbody>
                <tr class="TableStyle-StandardRules-Body-Body1">
                    <td class="TableStyle-StandardRules-BodyH-Column1-Body1">
                        <p class="Cell_Body"><code>import</code>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyG-Column1-Body1">
                        <p class="Cell_Body">Import structures into a new or existing database.</p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body1">
                    <td class="TableStyle-StandardRules-BodyE-Column1-Body1"><code>splice</code>
                    </td>
                    <td class="TableStyle-StandardRules-BodyD-Column1-Body1">Efficiently import large structure set into a new or existing database using multiple procesors.</td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body2">
                    <td class="TableStyle-StandardRules-BodyH-Column1-Body2">
                        <p class="Cell_Body"><code>revise</code>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyG-Column1-Body2">
                        <p class="Cell_Body">Add sites, conformers or Canvas properties.</p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body2">
                    <td class="TableStyle-StandardRules-BodyE-Column1-Body2">
                        <p class="Cell_Body"><code>extract</code>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyD-Column1-Body2">
                        <p class="Cell_Body">Extract all properties into a single SQLite table.</p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body1">
                    <td class="TableStyle-StandardRules-BodyH-Column1-Body1">
                        <p class="Cell_Body"><code>query</code>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyG-Column1-Body1">
                        <p class="Cell_Body">Perform a property or substructure query.</p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body1">
                    <td class="TableStyle-StandardRules-BodyE-Column1-Body1">
                        <p class="Cell_Body"><code>delete</code>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyD-Column1-Body1">
                        <p class="Cell_Body">Delete records.</p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body2">
                    <td class="TableStyle-StandardRules-BodyH-Column1-Body2">
                        <p class="Cell_Body"><code>convert</code>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyG-Column1-Body2">
                        <p class="Cell_Body">Convert or merge one database into another.</p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body2">
                    <td class="TableStyle-StandardRules-BodyE-Column1-Body2">
                        <p class="Cell_Body"><code>export</code>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyD-Column1-Body2">
                        <p class="Cell_Body">Export database records to structure files.</p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body1">
                    <td class="TableStyle-StandardRules-BodyB-Column1-Body1">
                        <p class="Cell_Body"><code>subset</code>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyA-Column1-Body1">
                        <p class="Cell_Body">Create or operate on database subsets.</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <p>The options for each task are described in the usage message, which you can display by running the <code>phase_database</code> command with the <code>-h</code> option. Notes on the tasks are given below. The standard Job Control options and the <code>-LOCAL</code> and <code>-NOJOBID</code> options, as described in <a class="TopicLink MCXref xref xrefTopicLink" href="../job_control/running_jobs_command_line.htm#running_jobs_2725597_39764">Running Jobs From the Command Line</a>, are accepted.</p>
        <p>Restarting of failed <code>import</code>, <code>revise</code>, and <code>convert</code> tasks is supported with the <code>-RESTART</code> option. Complete instructions on restarting a job are stored in the database, at <i class="UserReplace">database</i><code>/database_restart/README</code>. The <code>revise</code> and <code>convert</code> task subjobs are automatically restarted if they fail, up to 3 times, after which a failure is recorded. You can set the number of retries with the <code>SCHRODINGER_PHASE_MAX_RESTART</code> environment variable. Restarting is also tried on each slave process run by a subjob. If the slave process itself fails, it is retried up to 5 times (settable with the <code>SCHRODINGER_PHASE_MAX_RETRY</code> environment variable). At a finer level, failed structures are retried once, and then skipped. </p>
        <h4 class="Heading4Nonum"><a name="phase_command_db_4156632788_import">Import Task</a>
        </h4>
        <p>New record numbers are written to the file <i class="UserReplace">jobName</i><code>_new_phase.inp</code>.</p>
        <p>If using the <code>-unique</code> option, a summary of each duplicate structure that is rejected is written to the file <i class="UserReplace">jobName</i><code>_reject.out</code>, containing the SMILES string and the title of the input structure and the molID and title of the database structure, as shown in this example:</p><pre>
Rejected: [O-]C(=O)[C@H](C)[C@H](C([O-])=O)Cc1cc(C)cc(C)c1 "385089_3"
Duplicate of: block_1/mol_21 "385089_3"
</pre>
        <p>All duplicates encountered in the database are listed. Duplicates in the input file are also listed.</p>
        <h4 class="Heading4Nonum"><a name="phase_command_db_4156632788_splice">Splice Task</a>
        </h4>
        <p>There are several limitations to this task: conformer sets cannot be imported, and no checking is done for redundant structures. The task creates a number of mini-databases in parallel which are "spliced" together into the final database. The structure source can be one of the following:</p>
        <ul>
            <li value="1">
                <p class="ListPara">Maestro file (<code>.mae</code>, <code>.mae.gz</code>, <code>.maegz</code>). </p>
            </li>
            <li value="2">
                <p class="ListPara">SD file (<code>.sdf</code>, <code>.sd</code>, <code>.sdfgz</code>, <code>.sdf.gz</code>, <code>.sd.gz</code>). </p>
            </li>
            <li value="3">
                <p class="ListPara">List file (<code>.list</code>). This is a text file that contains the names of one or more Maestro or SD files, with one name per line. Files must all be of the same type (i.e., all Maestro or all SD) and have the same compression state. There is no attempt to perceive conformers, so each structure will be stored in a separate database record. </p>
            </li>
        </ul>
        <h4 class="Heading4Nonum"><a name="phase_command_db_4156632788_revise">Revise Task</a>
        </h4>
        <p>The revise job can be distributed across multiple CPUs. Any combination of <code>-sites</code>, <code>-confs</code>, and <code>-props</code> is allowed, but at least one must be used.</p>
        <p>Conformer generation is not exhaustive, and therefore depends to some extent on the input structures. However, the conformers generated should represent a reasonable sample, and the results of a search should not depend much on the input structures. If you want to be sure that you have a complete set of conformers, you should run a conformational search beforehand (with MacroModel, for example) and import the conformer sets.</p>
        <p>The feature definitions used for the sites are taken from the definition file copied into the database at the point it was created. If you want to use custom feature definitions, you can copy the feature definition file into the database by running an <code>inport</code> with the <code>-fd</code> option. You should do this when you create the database or before you run a <code>revise</code> task for the first time. If you change the feature definitions after creating sites, you can get inconsistencies in the database, and you should run a <code>revise</code> task with <code>-sites</code> to ensure that there are no inconsistencies.</p>
        <h4 class="Heading4Nonum"><a name="phase_command_db_4156632788_extract">Extract Task</a>
        </h4>
        <p>All properties that have been imported or computed are extracted and written to a single table in the SQLite database <i class="UserReplace">database</i><code>/database.sqlite</code>.  A copy of the same data is written to <i class="UserReplace">database</i><code>/database_props.csv</code>. </p>
        <h4 class="Heading4Nonum"><a name="phase_command_db_4156632788_query">Query Task</a>
        </h4>
        <p>Matching record numbers are written to <i class="UserReplace">jobName</i><code>_matches_phase.inp</code>, and all properties for those records are written to <i class="UserReplace">jobName</i><code>_matches.csv</code>. </p>
        <h4 class="Heading4Nonum">
      Convert Task</h4>
        <p>The destination database is the first argument in the <code>phase_database</code> command (i.e., <i class="UserReplace">database</i>), and it must have been created (or be created) using <code>phase_database</code>. The job can be distributed across multiple processors. </p>
        <p>New sites are created in the destination database if there is an upgrade in the storage format, the feature definitions differ, or if there are no sites for a given record. If none of these conditions is met, the default is to copy the source database sites to the destination database. </p>
        <p>The <code>-nosites</code> option is intended for merging a source database with no conformers or sites into a destination database with no conformers or sites, without adding sites in the destination database. This option ensures that sites are not created in the destination database for source records that are missing sites. If there is no upgrade in the database format, existing sites in the source database are copied (regardless of changes in feature definitions). </p>
        <h4 class="Heading4Nonum"><a name="phase_command_db_4156632788_subset">Subset Task</a>
        </h4>
        <p>The options <code>-hits</code>, <code>-has</code>, <code>-titles</code>, and <code>-logic</code> are mutually exclusive. An existing database is not required with <code>-hits</code> and <code>-logic</code>, so the <i class="UserReplace">database</i> argument is parsed but not used.</p>
        <table class="NavLink" data-mc-conditions="Default.ScreenOnly">
            <tr class="NavLink">
                <td class="NavLeft"><span class="NavText">◀ <a class="NavLink MCXref xref xrefNavLink" href="phase_command_db.htm">Managing 3D Databases from the Command Line</a></span>
                </td>
                <td class="NavCenter"><span class="NavText"><a class="NavLink MCXref xref xrefNavLink" href="phase_command_referenceTOC.htm">Phase Command Reference Manual</a></span>
                </td>
                <td class="NavRight"><span class="NavText"><a class="NavLink MCXref xref xrefNavLink" href="phase_command_db_distributing.htm">Distributing Jobs that use a Phase Database</a> ▶</span>
                </td>
            </tr>
        </table>
    </body>
</html>