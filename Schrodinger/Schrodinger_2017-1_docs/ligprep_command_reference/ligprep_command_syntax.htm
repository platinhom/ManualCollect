<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="Documentation.xml" data-mc-path-to-help-system="../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Command References|LigPrep Command Reference|Running LigPrep from the Command Line">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <link href="../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" /><title>The ligprep Command</title>
        <link href="../Resources/Stylesheets/docs.css" rel="stylesheet" />
        <script src="../Resources/Scripts/custom.modernizr.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/require.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/require.config.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/foundation.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/plugins.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body><a name="aanchor8424"></a>
        <MadCap:concept term="Command Reference" /><a name="aanchor8425"></a>
        <MadCap:concept term="LigPrep" /><a name="ligprep_command_1766673157_745021"></a><a name="ligprep_command_1766673157_66538"></a>
        <table class="NavLink" data-mc-conditions="Default.ScreenOnly">
            <tr class="NavLink">
                <td class="NavLeft"><span class="NavText">◀ <a class="NavLink MCXref xref xrefNavLink" href="ligprep_command.htm" xrefformat="{paratext}">Running LigPrep from the Command Line</a></span>
                </td>
                <td class="NavCenter"><span class="NavText"><a class="NavLink MCXref xref xrefNavLink" href="ligprep_command_referenceTOC.htm" xrefformat="{paratext}">LigPrep Command Reference Manual</a></span>
                </td>
                <td class="NavRight"><span class="NavText"><a class="NavLink MCXref xref xrefNavLink" href="ligprep_command_distributed.htm" xrefformat="{paratext}">Distributing LigPrep Jobs</a> ▶</span>
                </td>
            </tr>
        </table>
        <h1 class="Title">The ligprep Command</h1>
        <p>To run LigPrep from the command line, use the <code><a name="ligprep_command_1766673157_ligprep">ligprep</a></code> command. The syntax of the <code>ligprep</code> command is as follows.</p><pre>
ligprep [<i class="UserReplace">options</i>] [<i class="UserReplace"> meta-options</i>] {-imae|-isd|-ismi|-icsv} <i class="UserReplace">input-file</i> {&#8209;omae|&#8209;osd} <i class="UserReplace">output-file</i></pre>
        <p>You must specify an input structure file using either <code>&#8209;imae</code> for input files in Maestro format, <code>&#8209;isd</code> for input files in SD file format,  <code>-ismi</code> for input files in SMILES format as a list of SMILES strings (<code>.smi</code>) or <code>-icsv</code> for input files in CSV format containing a SMILES string with optional title and properties on each line, separated by commas (<code>.csv</code>). The output file is specified with <code>-omae</code> for Maestro format or <code>-osd</code> for SD format. Maestro input and output files can be in uncompressed (<code>.mae</code>) or compressed (<code>.maegz</code> or <code>.mae.gz</code>) form. If it is not otherwise specified, the job name for the LigPrep job is the stem of the output structure file name, formed by removing the file extension, and also <code>-out</code> if present. </p>
        <p>The <code>ligprep</code> command has a number of options for controlling the stages of the process. These options can be specified in two ways:</p>
        <ul>
            <li value="1">On the command line. For a complete listing of these options, enter the command <code>ligprep&#160;-long_help</code>.</li>
            <li value="2">In an input file. For a complete listing of input file keywords and their correspondence to the command options, enter the command <code>ligprep&#160;-sif_docs</code>. This is a useful way of specifying a set of options that you use commonly, and not have to retype them each time you run a LigPrep job.</li>
        </ul>
        <p>You can combine options specified on the command line with options specified in an input file. Options specified on the command line  override the settings from the input file. </p>
        <p>The standard Job Control options, for selecting the host, defining a scratch directory, and so on, are supported, as are the common <code>-LOCAL</code> and <code>-WAIT</code> options—see <a class="TopicLink MCXref xref xrefTopicLink" href="../job_control/running_jobs_command_line.htm#running_jobs_2725597_39764" xrefformat="{paratext}">Running Jobs From the Command Line</a> for a complete listing. In particular, you should note the syntax of the <code>-HOST</code> option, which is used to specify the list of hosts used for the job. In addition to these options, the <code>ligprep</code> command supports a range of other job options for both the control of the job and for distributing jobs over multiple processors. </p>
        <p>The <code>ligprep</code> command also has a number of <i>meta-options</i>, which set a group of options with particular values. You can use options together with meta-options; the options override any values set by the meta-options.</p>
        <p>The <code>adjust</code>, <code>vary</code> and <code>expand</code> meta-options control the range of structures generated. You can use all three of these meta-options in the same <code>ligprep</code> command, but <code>c</code>, <code>i</code> and <code>t</code> must not appear more than once. For instance, you could use <code>-adjust_t</code> <code>-vary_c</code> <code>-expand_i</code>, but not <code>-adjust_t</code> <code>-vary_c</code> <code>-expand_it</code>.</p>
        <p>The <code>retain</code> meta-option can be used to require that at least one structure produced for each input structure retains the characteristics denoted by the suffix. For instance, <code>-retain_t</code> means that the tautomerization state in the input structure will be present in at least one of the output structures for that molecule. The <code>retain</code> meta-option can be used with any of the <code>adjust</code>, <code>vary</code> and <code>expand</code> meta-options.</p>
        <p>LigPrep jobs run in the background under Schrödinger’s Job Control facility. The job output is normally written to a temporary directory and then copied back to the job submission directory when the job finishes. You can direct the temporary files and the output to the job submission directory with the <code>&#8209;LOCAL</code> option of the <code>ligprep</code> command. The <code>.log</code> file is written to the job submission directory and is updated during the run. For more information on the Job Control facility, see the <a class="Manual MCXref xref xrefManual" href="../job_control/job_controlTOC.htm#job_controltoc_4099964329_71112" xrefformat="{paratext}">Job Control Guide</a>.</p>
        <p>LigPrep runs a ligand through the entire set of processing stages and writes the output to the output file before starting on the next ligand. In releases prior to the 2016-4 release, LigPrep ran all ligands through a single stage before starting the next stage, saving the results of the stages in intermediate, temporary files. You can run the old version of LigPrep by using the <code>-classic</code> option. This option must be placed immediately after the <code>ligprep</code> command. There are a few differences between the old version (referred to as classic LigPrep) and the new version, but in most cases the output structures should be chemically the same although the conformations produced may differ. Documentation for classic LigPrep is not included in this manual, but can be found on the <a href="https://www.schrodinger.com/documentation">Documentation page</a> of our web site for releases earlier than 2016-4. You can use the <code>-classic</code> option in conjunction with the help options to obtain information on the command syntax for classic LigPrep.</p>
        <table class="NavLink" data-mc-conditions="Default.ScreenOnly">
            <tr class="NavLink">
                <td class="NavLeft"><span class="NavText">◀ <a class="NavLink MCXref xref xrefNavLink" href="ligprep_command.htm" xrefformat="{paratext}">Running LigPrep from the Command Line</a></span>
                </td>
                <td class="NavCenter"><span class="NavText"><a class="NavLink MCXref xref xrefNavLink" href="ligprep_command_referenceTOC.htm" xrefformat="{paratext}">LigPrep Command Reference Manual</a></span>
                </td>
                <td class="NavRight"><span class="NavText"><a class="NavLink MCXref xref xrefNavLink" href="ligprep_command_distributed.htm" xrefformat="{paratext}">Distributing LigPrep Jobs</a> ▶</span>
                </td>
            </tr>
        </table>
    </body>
</html>