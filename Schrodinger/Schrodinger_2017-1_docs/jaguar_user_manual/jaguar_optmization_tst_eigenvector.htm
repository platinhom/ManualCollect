<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="Documentation.xml" data-mc-path-to-help-system="../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="User Manuals|Jaguar User Manual|Jaguar Optimizations and Scans|Transition-State Optimizations">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <link href="../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" /><title>Searching Along a Particular Hessian Eigenvector for a Transition State</title>
        <link href="../Resources/Stylesheets/docs.css" rel="stylesheet" />
        <script src="../Resources/Scripts/custom.modernizr.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/require.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/require.config.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/foundation.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/plugins.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body><a name="aanchor5174"></a>
        <MadCap:concept term="User Manuals" /><a name="aanchor5175"></a>
        <MadCap:concept term="Jaguar" /><a name="jaguar_optimization_4029772162_135208"></a>
        <table class="NavLink" data-mc-conditions="Default.ScreenOnly">
            <tr class="NavLink">
                <td class="NavLeft"><span class="NavText">◀ <a class="NavLink MCXref xref xrefNavLink" href="jaguar_optmization_tst_state.htm" xrefformat="{paratext}">Specifying the Symmetry, State, and Basis Set for Transition States</a></span>
                </td>
                <td class="NavCenter"><span class="NavText"><a class="NavLink MCXref xref xrefNavLink" href="jaguar_user_manualTOC.htm" xrefformat="{paratext}">Jaguar User Manual</a></span>
                </td>
                <td class="NavRight"><span class="NavText"><a class="NavLink MCXref xref xrefNavLink" href="jaguar_optmization_tst_hessrefine.htm" xrefformat="{paratext}">Refinement of the Initial Hessian in Transition State Searches</a> ▶</span>
                </td>
            </tr>
        </table>
        <h1 class="Title">Searching Along a Particular Hessian Eigenvector for a Transition State</h1>
        <p>If you are using the standard (non-QST-guided) transition-state optimization method, you can specify a Hessian eigenvector for the optimizer to follow. The choices of eigenvector are available from the <span class="GUI">Search along</span> option menu: <span class="GUI">Lowest Hessian eigenvector</span><a href="javascript:void(0);" class="MCTextPopup popup popupHead" style="font-size: 0.9em; vertical-align: super">1<span class="MCTextPopupBody MCTextPopupBody_Closed needs-pie popupBody"><span class="MCTextPopupArrow"></span>Keyword itrvec = 0 in the gen section.</span></a> (the default), the <span class="GUI">Lowest non-torsional mode</span>,<a href="javascript:void(0);" class="MCTextPopup popup popupHead" style="font-size: 0.9em; vertical-align: super">2<span class="MCTextPopupBody MCTextPopupBody_Closed needs-pie popupBody"><span class="MCTextPopupArrow"></span>Keyword itrvec = −1 in the gen section.</span></a> the <span class="GUI">Lowest bond-stretch mode</span>,<a href="javascript:void(0);" class="MCTextPopup popup popupHead" style="font-size: 0.9em; vertical-align: super">3<span class="MCTextPopupBody MCTextPopupBody_Closed needs-pie popupBody"><span class="MCTextPopupArrow"></span>Keyword itrvec = −2 in the gen section.</span></a> or a <span class="GUI">User selected eigenvector</span>. You also have access to these search directions if you are doing an LST search, in addition to the <span class="GUI">Reactant-product path</span>.<a href="javascript:void(0);" class="MCTextPopup popup popupHead" style="font-size: 0.9em; vertical-align: super">4<span class="MCTextPopupBody MCTextPopupBody_Closed needs-pie popupBody"><span class="MCTextPopupArrow"></span>Keyword itrvec = −5 in the gen section.</span></a></p>
        <p>Under certain circumstances, you might want to direct your transition-state search using these options, rather than having the optimizer simply minimize along the lowest Hessian eigenvector found for each iteration. The <span class="GUI">Lowest non-torsional mode</span> and <span class="GUI">Lowest bond-stretch mode</span> options can be useful for steering the optimizer to a particular type of transition state—for instance, for a study of a bond-breaking reaction, you can avoid converging to a torsional transition state by choosing <span class="GUI">Lowest bond-stretch mode</span>. </p>
        <p>If you know the index number of the eigenvector along which you would like to minimize (a particular bond stretch, for instance), you can make the optimizer follow that eigenvector by choosing <span class="GUI">User selected eigenvector</span> and specifying the eigenvector number in the <span class="GUI">Eigenvector</span> text box.<a href="javascript:void(0);" class="MCTextPopup popup popupHead" style="font-size: 0.9em; vertical-align: super">5<span class="MCTextPopupBody MCTextPopupBody_Closed needs-pie popupBody"><span class="MCTextPopupArrow"></span>Keyword itrvec &gt; 0 in the gen section, where itrvec is the eigenvector number for the selected eigenvector.</span></a> You can identify the index number by running one geometry optimization iteration (see <a class="TopicLink MCXref xref xrefTopicLink" href="jaguar_optmization_basics_convergence.htm#jaguar_optimization_4029772162_156642" xrefformat="{paratext}">SCF and Geometry Convergence</a> for more information) and examining the output summary of the Hessian eigenvectors, which indicates the dominant internal coordinates and their coefficients for each eigenvector. </p>
        <p>You can also determine the eigenvector to follow from a vibrational frequency calculation. However, because different mass-weighting schemes are used in vibrational frequency calculations and transition state searches, it is possible for the two calculations to produce a different number of negative Hessian eigenvalues for a non-stationary point. If you select the mode to follow based on the results of a vibrational frequency calculation, you might discover that the mode actually followed is different, and that the number of negative Hessian eigenvalues has changed. There are two ways around this problem. The preferred way is to use the QST-guided algorithm, which automatically selects the mode that best connects the reactant and product geometries with the transition state guess geometry. In this case there is no need to select an eigenvector (or to set the <span class="Keyword">itrvec</span> keyword). If you do not wish to use the QST method, then you should check the output file from your transition-state search job while it is running to ensure that the desired mode was selected. For each negative Hessian eigenvalue, Jaguar prints out the internal coordinates that dominate the corresponding eigenvector. If you find that the wrong mode is being followed, kill the job and select the desired eigenvector index, either in the GUI or by setting <span class="Keyword">itrvec</span> in the <span class="Keyword">gen</span> section of the input file. </p>
        <p>The order and the character of the eigenvectors can change during an optimization. To ensure that the optimization follows the eigenvector that most closely correlates with the one chosen in the previous iteration, select <span class="GUI">Follow same eigenvector</span>.<a href="javascript:void(0);" class="MCTextPopup popup popupHead" style="font-size: 0.9em; vertical-align: super">6<span class="MCTextPopupBody MCTextPopupBody_Closed needs-pie popupBody"><span class="MCTextPopupArrow"></span>Keyword ifollow = 1 in the gen section.</span></a> Otherwise, the optimization follows the eigenvector of the same index number as the previous iteration.<a href="javascript:void(0);" class="MCTextPopup popup popupHead" style="font-size: 0.9em; vertical-align: super">7<span class="MCTextPopupBody MCTextPopupBody_Closed needs-pie popupBody"><span class="MCTextPopupArrow"></span>Keyword ifollow = 0 in the gen section.</span></a></p>
        <table class="NavLink" data-mc-conditions="Default.ScreenOnly">
            <tr class="NavLink">
                <td class="NavLeft"><span class="NavText">◀ <a class="NavLink MCXref xref xrefNavLink" href="jaguar_optmization_tst_state.htm" xrefformat="{paratext}">Specifying the Symmetry, State, and Basis Set for Transition States</a></span>
                </td>
                <td class="NavCenter"><span class="NavText"><a class="NavLink MCXref xref xrefNavLink" href="jaguar_user_manualTOC.htm" xrefformat="{paratext}">Jaguar User Manual</a></span>
                </td>
                <td class="NavRight"><span class="NavText"><a class="NavLink MCXref xref xrefNavLink" href="jaguar_optmization_tst_hessrefine.htm" xrefformat="{paratext}">Refinement of the Initial Hessian in Transition State Searches</a> ▶</span>
                </td>
            </tr>
        </table>
    </body>
</html>