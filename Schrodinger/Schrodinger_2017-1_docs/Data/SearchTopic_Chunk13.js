define({"3185":{i:0.000141529070438334,u:"../maestro_command_reference/psptemplatesetregion.html",a:"psptemplatesetregion Sets the region for the given template.  Syntax: psptemplatesetregion end= \u003cn\u003e start= \u003cn\u003e [\u003ctemplate name\u003e ]\n Options: end This is the position at which the region ends. ",t:"psptemplatesetregion"},"3186":{i:0.000141528849919512,u:"../maestro_command_reference/psptmplsecstructprediction.html",a:"psptmplsecstructprediction Runs the available secondary structure prediction programs on the template sequence identified by row number  Syntax: psptmplsecstructprediction [\u003crow_number\u003e ]\n Operands: \u003crow_number\u003e  The row number in the table which is to be selected. ",t:"psptmplsecstructprediction"},"3187":{i:0.000141528139788571,u:"../maestro_command_reference/psptranslatespatial.html",a:"psptranslatespatial Translate in Angstroms the selected Prime refinement spatial constraint.  Syntax: psptranslatespatial x= \u003cx\u003e y= \u003cx\u003e z= \u003cx\u003e  Options: x Amount in Angstroms to translate in X ",t:"psptranslatespatial"},"3188":{i:0.000141525853760321,u:"../maestro_command_reference/pspunselecttable1row.html",a:"pspunselecttable1row Unselects a row from the input table shown in the current Structure Prediction step. This applies to the Refine Backbone step.  Syntax: pspunselecttable1row [\u003crow_number\u003e ]\n Operands: \u003crow_number\u003e  The row number in the table which is to be unselected. ",t:"pspunselecttable1row"},"3189":{i:0.000141518494171102,u:"../maestro_command_reference/pspunselecttablerow.html",a:"Unselects a row from the table shown in the current Structure Prediction step. This applies to the Find Homologs, Fold Recognition, Build Backbone, Refine Backbone, and Edit Alignment steps (which support multiple row selection).  Syntax: pspunselecttablerow [\u003crow_number\u003e ]\n Operands: \u003crow_number\u003e  ...",t:"pspunselecttablerow"},"3190":{i:0.000141494802865827,u:"../maestro_command_reference/pspupdatehetatomlist.html",a:"pspupdatehetatomlist Updates list of ligands and cofactors in Build Structure step.  Syntax: pspupdatehetatomlist showall= yes | no  Options: showall Specifies whether or not to list all ligands and waters, or only ligands within 5A from a chain. ",t:"pspupdatehetatomlist"},"3191":{i:0.000141418539552052,u:"../maestro_command_reference/pspupdatescores.html",a:"pspupdatescores Updates Scores of all the alignments  Syntax: pspupdatescores",t:"pspupdatescores"},"3192":{i:0.000141173052268067,u:"../maestro_command_reference/pspwritebuildconsensusmodel.html",a:"pspwritebuildconsensusmodel Writes input files for the build structure backend in consensus modeling mode.  Syntax: pspwritebuildconsensusmodel",t:"pspwritebuildconsensusmodel"},"3193":{i:0.000140382856673057,u:"../maestro_command_reference/pspwritebuildhomomultimer.html",a:"pspwritebuildhomomultimer Writes input files for the build structure backend in homo-multimer mode.  Syntax: pspwritebuildhomomultimer",t:"pspwritebuildhomomultimer"},"3194":{i:0.000137839343393943,u:"../maestro_command_reference/pspwritebuildstructure.html",a:"pspwritebuildstructure Writes input files for the build structure backend.  Syntax: pspwritebuildstructure",t:"pspwritebuildstructure"},"3195":{i:0.000172869681442301,u:"../maestro_command_reference/pyeval.html",a:"pyeval This is a standard alias for  pythoneval .",t:"pyeval"},"3196":{i:0.000170550048997955,u:"../maestro_command_reference/pyimp.html",a:"pyimp This is a standard alias for  pythonimport .",t:"pyimp"},"3197":{i:0.000170550048912252,u:"../maestro_command_reference/pyrun.html",a:"pyrun This is a standard alias for  pythonrun .",t:"pyrun"},"3198":{i:0.000170550048997955,u:"../maestro_command_reference/pythoneval.html",a:"pythoneval Evaluate the python expression using the built-in Python interpreter. KEY_OPERAND_SYNOPOSIS: \u003cpython expression\u003e  Syntax: pythoneval Aliases:\n\n pyeval",t:"pythoneval"},"3199":{i:0.000170550048912252,u:"../maestro_command_reference/pythonimport.html",a:"Imports the specified python module. If the module has already been imported then it will be reloaded. Under normal usage this command is not needed as pythonrun automatically imports the module specified as its operand. However during development of modules it is useful to be able to reload them ...",t:"pythonimport"},"3200":{i:0.000172869680803239,u:"../maestro_command_reference/pythonrun.html",a:"pythonrun Runs the function in \u003cfunction name\u003e in module \u003cmodulename\u003e KEY_OPERAND_SYNOPOSIS: \u003cfunction name\u003e [function parameters]  Syntax: pythonrun Aliases:\n\n pyrun",t:"pythonrun"},"3201":{i:0.000137839341323787,u:"../maestro_command_reference/pythonrunbuiltin.html",a:"pythonrunbuiltin Runs the function in \u003cfunction name\u003e in module \u003cmodulename\u003e KEY_OPERAND_SYNOPOSIS: \u003cfunction name\u003e [function parameters]  Syntax: pythonrunbuiltin",t:"pythonrunbuiltin"},"3202":{i:0.000140382849793913,u:"../maestro_command_reference/qikprop.html",a:"qikprop This keyword is used to set various options associated with running QikProp jobs.  Syntax: qikprop fastmode= yes | no input_file= \u003ctext\u003e nsim= \u003cn\u003e sim= yes | no structure_source= workspace | file  Options: fastmode The option to identify the similar molecules ",t:"qikprop"},"3203":{i:0.000141173030131503,u:"../maestro_command_reference/qsarmarkerdump.html",a:"qsarmarkerdump Print out the current option values of the QSAR marker command.  Syntax: qsarmarkerdump",t:"qsarmarkerdump"},"3204":{i:0.000141418468173731,u:"../maestro_command_reference/qsarmarkersettings.html",a:"Set graphical data of Phase QSAR markers.  Syntax: qsarmarkersettings ambient= \u003cx\u003e coefficient_feature= \u003ctext\u003e combine_effects= yes | no diffuse= \u003cx\u003e emission= \u003cx\u003e negative_blue= \u003cx\u003e negative_green= \u003cx\u003e negative_red= \u003cx\u003e negativecoefficient= \u003cx\u003e numberpls= \u003cn\u003e positive_blue= \u003cx\u003e positive_green= \u003cx\u003e ...",t:"qsarmarkersettings"},"3205":{i:0.000141494573160076,u:"../maestro_command_reference/qsitebasis.html",a:"qsitebasis Specifies an atom for QM basis atoms  Syntax: qsitebasis basis= \u003ctext\u003e diaplayname= \u003ctext\u003e select= yes | no [\u003catom\u003e ]\n Options: basis The basis set for the atom to be included in the QM basis of an Impact QSite simulation. ",t:"qsitebasis"},"3206":{i:0.000141517754431189,u:"../maestro_command_reference/qsitehcap.html",a:"qsitehcap Specifies a pair of atoms to define a hydrogen cap  Syntax: qsitehcap basis= \u003ctext\u003e [\u003catom1\u003e \u003catom2\u003e ]\n Options: basis The basis set for the hydrogen cap to be included in the QM region of an Impact QSite simulation. ",t:"qsitehcap"},"3207":{i:0.000141523472387927,u:"../maestro_command_reference/qsitehcapmarkersettings.html",a:"Set graphical data of QM hydrogen cap markers.  Syntax: qsitehcapmarkersettings ambient= \u003cx\u003e blue= \u003cx\u003e cornradius= \u003cx\u003e cylinderheight= \u003cx\u003e cylinderradius= \u003cx\u003e diffuse= \u003cx\u003e drawstyle= line emission= \u003cx\u003e green= \u003cx\u003e linewidth= \u003cx\u003e red= \u003cx\u003e selectblue= \u003cx\u003e selectgreen= \u003cx\u003e selectred= \u003cx\u003e shininess= \u003cx\u003e ...",t:"qsitehcapmarkersettings"},"3208":{i:0.000141520473186474,u:"../maestro_command_reference/qsiteion.html",a:"qsiteion Defines an ion as part of the QM region for an Impact QSite simulation  Syntax: qsiteion basis= \u003ctext\u003e [\u003cmolecule_num\u003e ]\n Options: basis The basis set for the ligand to be included in the QM region of an Impact QSite simulation. ",t:"qsiteion"},"3209":{i:0.00014150417029802,u:"../maestro_command_reference/qsiteresidue.html",a:"Defines a residue as part of the QM region for an Impact QSite simulation  Syntax: qsiteresidue backboneresidue= yes | no backbonestring= \u003ctext\u003e basis= \u003ctext\u003e cuttype= \u003cn\u003e [\u003cchain\u003e:\u003cmolnum\u003e:\u003cresnum\u003e:\u003cinscode\u003e ]\n Options: backboneresidue The flag indicates if this residue is a lower or upper bound ...",t:"qsiteresidue"},"3210":{i:0.000141449625670985,u:"../maestro_command_reference/qsiteset.html",a:"Settings associated with QSite simulations in Impact.  Syntax: qsiteset alie= yes | no boxadjustment= \u003cx\u003e charge= \u003cn\u003e electrondensities= density_difference electrondensity= yes | no enableip472= yes | no endalpha= \u003cn\u003e endalphabase= lumoplus endbeta= \u003cn\u003e endbetabase= lumoplus esp= yes | no espunits= ...",t:"qsiteset"},"3211":{i:0.000141273411123323,u:"../maestro_command_reference/quicktorsion.html",a:"Adjust the dihedral specified by 4 atoms to the given value. Adjust the marker arrow direction via reverse operand.  Syntax: quicktorsion contactdisplay= yes | no dihedral= \u003cx\u003e hbonddisplay= yes | no reverse= yes | no [movelarger|\u003catom1\u003e \u003catom2\u003e \u003catom3\u003e \u003catom4\u003e ]\n Options: contactdisplay This option ...",t:"quicktorsion"},"3212":{i:0.00014070600236324,u:"../maestro_command_reference/quit.html",a:"Quit the program. To quit issue just the quit command without any options.  Syntax: quit confirm= yes | no  Options: confirm If this option has been set to \"false\" then the program will exit without prompting the user in any way. So, for example, the user is not prompted to save any changed macros ...",t:"quit"},"3213":{i:0.000138879556381599,u:"../maestro_command_reference/raisepanels.html",a:"raisepanels Raise all visible panels  Syntax: raisepanels",t:"raisepanels"},"3214":{i:0.000177334116854092,u:"../maestro_command_reference/read.html",a:"read This is a standard alias for  fileread .",t:"read"},"3215":{i:0.000138878924699891,u:"../maestro_command_reference/readpotential.html",a:"readpotential Read potential settings from a command file.  Syntax: readpotential [\u003cfile_name\u003e ]\n Operands: \u003cfile_name\u003e  The name of the file from which the potential settings will be read. If no name is specified, the default settings will be used. ",t:"readpotential"},"3216":{i:0.000140703772582027,u:"../maestro_command_reference/reagentprep.html",a:"Options for Reagent Preparation jobs.  Syntax: reagentprep gen_conform= \u003cn\u003e gen_ionization= yes | no gen_stereo= \u003cn\u003e gen_tautomers= yes | no group_name_long= \u003ctext\u003e group_name_short= \u003ctext\u003e include_states= yes | no input_file= \u003ctext\u003e output_structures= ignore_molecule | produce_structure ph= \u003cx\u003e ...",t:"reagentprep"},"3217":{i:0.000141266171766753,u:"../maestro_command_reference/reagentprepwrite.html",a:"reagentprepwrite Write a ReagentPrep input file with the current settings.  Syntax: reagentprepwrite",t:"reagentprepwrite"},"3218":{i:0.000141426302481344,u:"../maestro_command_reference/refinestart.html",a:"refinestart Start a Refine input file with the current settings.  Syntax: refinestart",t:"refinestart"},"3219":{i:0.000141429086514767,u:"../maestro_command_reference/refinewrite.html",a:"refinewrite Write a Refine input file with the current settings.  Syntax: refinewrite",t:"refinewrite"},"3220":{i:0.000141278782125398,u:"../maestro_command_reference/reformatstringproperty.html",a:"reformatstringproperty This command reformats the given properties.  Syntax: reformatstringproperty format= \u003ctext\u003e [\u003cpropertynames\u003e ]\n Options: format This option determines which format to apply to the specified string properties. Valid values are \"lower_case\", \"upper_case\" or \"title_case\". ",t:"reformatstringproperty"},"3221":{i:0.000140745499282747,u:"../maestro_command_reference/removeatomsfromtable.html",a:"removeatomsfromtable Removes the selected atoms from the atom-property table.  Syntax: removeatomsfromtable",t:"removeatomsfromtable"},"3222":{i:0.000139013592073571,u:"../maestro_command_reference/rename.html",a:"Rename a named object. The object type is the same as the command which is used to create that type of object.   For example to rename a set named \"alpha\" use: rename set alpha beta .  Syntax: rename [\u003cobject_type\u003e \u003ccurrent_object_name\u003e \u003cnew_object_name\u003e ]\n Operands: \u003cobject_type\u003e ...",t:"rename"},"3223":{i:0.0001779122339071,u:"../maestro_command_reference/renameproperty.html",a:"renameproperty This is a standard alias for  propertyrename .",t:"renameproperty"},"3224":{i:0.000139014260416062,u:"../maestro_command_reference/renamepropertyid.html",a:"renamepropertyid This command renames the given property internal m2io name to the given name.  Syntax: renamepropertyid [\u003cfrom_m2io_name\u003e \u003cto_m2io_name\u003e ]\n Operands: \u003cfrom_m2io_name\u003e \u003cto_m2io_name\u003e  The m2io name of the property to rename. The m2io name to rename the property to. ",t:"renamepropertyid"},"3225":{i:0.000140747858448619,u:"../maestro_command_reference/repall.html",a:"Set global representation properties  Syntax: repall ballhresolution= \u003cn\u003e balllresolution= \u003cn\u003e ballsize= \u003cx\u003e bondoutline= yes | no bstyle= blend cpkhresolution= \u003cn\u003e cpklresolution= \u003cn\u003e cpksize= \u003cx\u003e depthcutoff= \u003cn\u003e depthfactor= \u003cx\u003e displaybonds= yes | no drawspheresaspoints= yes | no enhancedepth= ...",t:"repall"},"3226":{i:0.000141286441629376,u:"../maestro_command_reference/repatom.html",a:"repatom Change the representation used to display a group of atoms in the main structure window.  Syntax: repatom rep= circle | cpk | ballnstick [\u003cASL\u003e ]\n Options: rep Type of atom representation ",t:"repatom"},"3227":{i:0.000141453763352358,u:"../maestro_command_reference/repatombonds.html",a:"repatombonds Set representation of all of atoms\u0027 bonds. Uses bond rep specified in the repbond command.  Syntax: repatombonds [\u003cASL\u003e ]\n Operands: \u003cASL\u003e  A string in the atom specification language. All atoms which match this string will have the representation of all bonds to them changed. ",t:"repatombonds"},"3228":{i:0.000141505744495797,u:"../maestro_command_reference/repbond.html",a:"repbond Change the representation used to draw an on-screen bond.  Syntax: repbond rep= wire | tube | thin_tube [\u003catom1\u003e \u003catom2\u003e ]\n Options: rep Type of bond representation ",t:"repbond"},"3229":{i:0.000141521892687504,u:"../maestro_command_reference/repdefault.html",a:"repdefault Set representation of all atoms and bonds  Syntax: repdefault style= cpk | ballnstick | tube | thin_tube  Options: style Default representation ",t:"repdefault"},"3230":{i:0.000141526908779994,u:"../maestro_command_reference/replacefromhold.html",a:"This command replaces the on-screen structure with a copy of the the structure from the specified hold set.  Syntax: replacefromhold [\u003chold_name\u003e ]\n Operands: \u003chold_name\u003e  The name of the hold. This must be the name which was specified when the hold was created using the \"hold\" command. ",t:"replacefromhold"},"3231":{i:0.000141528465565543,u:"../maestro_command_reference/repquick.html",a:"repquick Set representation of all atoms and bonds  Syntax: repquick default= wire | cpk | ballnstick | tube | thin_tube style= wire | cpk | ballnstick | tube | thin_tube [[update] ]\n Options: default Default representation ",t:"repquick"},"3232":{i:0.000141528944889259,u:"../maestro_command_reference/resetcsearch.html",a:"resetcsearch Deletes all the variables used in a conformational search.  Syntax: resetcsearch",t:"resetcsearch"},"3233":{i:0.000141529079944566,u:"../maestro_command_reference/residuename.html",a:"Set the residue name for all atoms which match the ASL specification.  Syntax: residuename [\u003cPDBNAME\u003e \u003cASL\u003e ]\n Operands: \u003cPDBNAME\u003e \u003cASL\u003e  The first operand is the PDB residue name which will be used for all atoms which match the specification. The second operand is a valid ASL string which defines ...",t:"residuename"},"3234":{i:0.000141529077426849,u:"../maestro_command_reference/residuenumber.html",a:"Set the residue number for all atoms which match the ASL specification.  Syntax: residuenumber [\u003cres_num\u003e \u003cASL\u003e ]\n Operands: \u003cres_num\u003e \u003cASL\u003e  The first operand is an integer, optionally followed by a single-character insertion code, that specifies the residue number for all the atoms which match the ...",t:"residuenumber"},"3235":{i:0.000141528933569879,u:"../maestro_command_reference/residuerenumber.html",a:"Renumber the residues, starting with the starting number, for all residues which match the ASL specification.  Syntax: residuerenumber [\u003cstarting_res_num\u003e \u003cASL\u003e ]\n Operands: \u003cstarting_res_num\u003e \u003cASL\u003e  The first operand is an integer which represents the starting residue number. The second operand ...",t:"residuerenumber"},"3236":{i:0.000141528428022005,u:"../maestro_command_reference/restorepanels.html",a:"restorepanels Restores panel locations  Syntax: restorepanels",t:"restorepanels"},"3237":{i:0.000141526787682764,u:"../maestro_command_reference/retype.html",a:"Change the atom type of the atom number specified by the operand to whatever type or element has previously been made current with the atom command.  Syntax: retype [\u003catom_num\u003e ]\n Operands: \u003catom_num\u003e  An atom number representing the atom which is to have its type changed to the current type. ",t:"retype"},"3238":{i:0.000141521502568107,u:"../maestro_command_reference/retypeset.html",a:"retypeset Change the atom type or element of the specified atoms to whatever type or element has previously been made current with theatom command.  Syntax: retypeset [\u003cASL\u003e ]\n Operands: \u003cASL\u003e  ASL of atoms to retype ",t:"retypeset"},"3239":{i:0.000141504488665517,u:"../maestro_command_reference/ribbon.html",a:"Creates a new Ribbon.  Syntax: ribbon ambient= \u003cx\u003e ambientback= \u003cx\u003e applycscheme= yes | no applystyle= yes | no backcoloroffset= \u003cx\u003e blend= yes | no blue= \u003cn\u003e calphalinewidth= \u003cn\u003e calphatubesteps= \u003cn\u003e calphatubewidth= \u003cx\u003e color= gray | darkblue | blue | lightblue | aquamarine | turquoise | ...",t:"ribbon"},"3240":{i:0.000141449720241032,u:"../maestro_command_reference/ribbondump.html",a:"ribbondump Print out the current option values of the ribbon command.  Syntax: ribbondump",t:"ribbondump"},"3241":{i:0.000141273426566569,u:"../maestro_command_reference/ringclosure.html",a:"ringclosure A command which defines a ring closure to be used during a conformational search.  Syntax: ringclosure maximum= \u003cx\u003e minimum= \u003cx\u003e [\u003catom1\u003e \u003catom2\u003e \u003catom3\u003e \u003catom4\u003e ]\n Options: maximum The maximum distance between the ends of the ring which will be accepted as a candidate for \"closure\". ",t:"ringclosure"},"3242":{i:0.000140705962257204,u:"../maestro_command_reference/ringflip.html",a:"ringflip Conversion of aliphatic ring substituents between axial and equitorial  Syntax: ringflip [\u003catom_num\u003e ]\n Operands: \u003catom_num\u003e  An atom number representing the atom which is a ring atom to have the substituents flipped. ",t:"ringflip"},"3243":{i:0.000138879399426875,u:"../maestro_command_reference/rotate.html",a:"Rotate in degrees whatever is specified in the transform set. This is either global (all atoms) or a local grouping defined via an ASL in the transform command.  Syntax: rotate angle= \u003cx\u003e virtualtrackball= yes | no x= \u003cx\u003e y= \u003cx\u003e z= \u003cx\u003e [[reset] ]\n Options: angle Rotation angle (radians) used in ...",t:"rotate"},"3244":{i:0.000177333431316892,u:"../maestro_command_reference/run.html",a:"run This is a standard alias for  scriptrun .",t:"run"},"3245":{i:0.000138876910392579,u:"../maestro_command_reference/saveimage.html",a:"Capture the current main structure window and save to an image file.  Syntax: saveimage customdpi= \u003cn\u003e dpi= \u003cn\u003e format= jpeg | png jpeg_quality= \u003cn\u003e png_compression= \u003cn\u003e png_gamma= \u003cx\u003e showoptions= yes | no smooth= yes | no transparentbg= yes | no [\u003cfile_name\u003e ]\n Options: customdpi Customized ...",t:"saveimage"},"3246":{i:0.000140697176272502,u:"../maestro_command_reference/saveimageheight.html",a:"saveimageheight Sets the height of the image saved due to saveimage command  Syntax: saveimageheight [\u003cheight\u003e ]\n Operands: \u003cheight\u003e  Height of the image to be saved. ",t:"saveimageheight"},"3247":{i:0.000141244903028934,u:"../maestro_command_reference/saveimagewidth.html",a:"saveimagewidth Sets the width of the image saved due to saveimage command  Syntax: saveimagewidth [\u003cwidth\u003e ]\n Operands: \u003cwidth\u003e  Width of the image to be saved. ",t:"saveimagewidth"},"3248":{i:0.000141357827440727,u:"../maestro_command_reference/savelayout.html",a:"savelayout Save the size and position of all currently visible panels.  Syntax: savelayout",t:"savelayout"},"3249":{i:0.000141208667392214,u:"../maestro_command_reference/savemovie.html",a:"savemovie Syntax: savemovie [\u003cfilename\u003e ]\n Operands: \u003cfilename\u003e  The file where the movie will be saved. ",t:"savemovie"},"3250":{i:0.000140569281195868,u:"../maestro_command_reference/savemovieoptions.html",a:"Sets the options for the save movie while eplaying entries  Syntax: savemovieoptions addframes= \u003cn\u003e duration= movieduration frameduration= \u003cx\u003e movieduration= \u003cn\u003e quality= medium | high resolution= medium | high smooth= yes | no speed= \u003cn\u003e  Options: addframes This option controls the number of frames ...",t:"savemovieoptions"},"3251":{i:0.000138461738494802,u:"../maestro_command_reference/scanmode.html",a:"scanmode Set the Coordinate Scan mode.  Syntax: scanmode modetype= angle | dihedral  Options: modetype Determines the mode for coordiante scan softlimit=\u003cn\u003e \u003cinput_file_name\u003e ",t:"scanmode"},"3252":{i:0.000175550168349553,u:"../maestro_command_reference/scriptlogfile.html",a:"Commands are by default logged to a temporary file which is deleted when the program terminates. If the \"logfile\" command is used to name the logfile then the commands will be logged to that file and that file will not be deleted when the program ends.  Syntax: scriptlogfile logging= yes | no ...",t:"scriptlogfile"},"3253":{i:0.000175550567725899,u:"../maestro_command_reference/scriptrun.html",a:"Run the script file whose name is given as the operands.  Syntax: scriptrun [\u003cscript_name\u003e ]\n Operands: \u003cscript_name\u003e  The name of the script which is to be executed. The full name, including any suffix must be given. If the file is not in the local directory then a full pathname must be given.  ...",t:"scriptrun"},"3254":{i:0.000138463983021526,u:"../maestro_command_reference/scrolltoproperty.html",a:"scrolltoproperty This command scrolls to the given property in current project table.  Syntax: scrolltoproperty [\u003cproperty_data_name\u003e ]\n Operands: \u003cproperty_data_name\u003e  The data name of the property to scroll. ",t:"scrolltoproperty"},"3255":{i:0.000140576905039545,u:"../maestro_command_reference/searchdbconfgen.html",a:"Defines settings for Find Matches to Hypothesis Generate Conformers job.  Syntax: searchdbconfgen amidebonds= retain | trans eliminate= rmsd field= opls2005 | opls2008 incorporate= replace | ignore | appendungrouped | workspace | appendinplace max_rmsd= \u003cx\u003e maxdist= \u003cx\u003e method= mixed ...",t:"searchdbconfgen"},"3256":{i:0.000141233332804036,u:"../maestro_command_reference/selectatomsforediting.html",a:"selectatomsforediting Selects atoms for editing their properties.  Syntax: selectatomsforediting [\u003cASL\u003e ]\n Operands: \u003cASL\u003e  The operand is a valid ASL string which specifies which atoms are to be selected. ",t:"selectatomsforediting"},"3257":{i:0.000141437264888929,u:"../maestro_command_reference/selecteditatom.html",a:"selecteditatom Selects a row in the atom-level property table.  Syntax: selecteditatom [\u003crow number\u003e ]\n Operands: \u003crow number\u003e  The operand is the row number to select. ",t:"selecteditatom"},"3258":{i:0.000141500619175881,u:"../maestro_command_reference/selecteditproperty.html",a:"selecteditproperty Selects an atom-level property from the edit atom-level property list.  Syntax: selecteditproperty [\u003cproperty\u003e ]\n Operands: \u003cproperty\u003e  The operand is a property from the edit property list. ",t:"selecteditproperty"},"3259":{i:0.000141520300247121,u:"../maestro_command_reference/selectfragmentatoms.html",a:"selectfragmentatoms Selects the atoms for the last-chosen fragment in the workspace.  Syntax: selectfragmentatoms",t:"selectfragmentatoms"},"3260":{i:0.00014152641281086,u:"../maestro_command_reference/sequenceviewersaveimage.html",a:"sequenceviewersaveimage Capture the sequence viewer contents and save it to an image file.  Syntax: sequenceviewersaveimage format= jpeg | png sequenceviewer= \u003ctext\u003e [\u003cfile_name\u003e ]\n Options: format Specifies the format of the saved image. ",t:"sequenceviewersaveimage"},"3261":{i:0.000141528307325497,u:"../maestro_command_reference/set.html",a:"Creates a new named set. The set name must be a single token (or \"quoted\" if multiple tokens). A set can be redefined by specifying a new definition.  Syntax: set [\u003cset_name\u003e \u003cASL-definition\u003e ]\n Operands: \u003cset_name\u003e \u003cASL-definition\u003e  The name which will be applied to the set. If the name contains ...",t:"set"},"3262":{i:0.000141528882189663,u:"../maestro_command_reference/setread.html",a:"Read set definitions from the file whose name is given as the operand. The file name usually has a \".set\" suffix.  Syntax: setread [\u003cset_file_name\u003e ]\n Operands: \u003cset_file_name\u003e  The name of the file from which the set definitions are to be read. The full name of the file (including any .set suffix) ...",t:"setread"},"3263":{i:0.000141529016813736,u:"../maestro_command_reference/setwrite.html",a:"Write the currently defined sets to the file whose name is given as the operand. The file name usually has a \".set\" suffix  Syntax: setwrite [\u003cset_file_name\u003e ]\n Operands: \u003cset_file_name\u003e  The name of the file to which the current set definitions are to be written . The full name of the file ...",t:"setwrite"},"3264":{i:0.000141528917343882,u:"../maestro_command_reference/showdockablepanels.html",a:"showdockablepanels Show visible dockable panels previously hidden with MM_ID_HIDE_DOCKABLE_PANELS.  Syntax: showdockablepanels",t:"showdockablepanels"},"3265":{i:0.000141528431429304,u:"../maestro_command_reference/showfirstselectedentry.html",a:"showfirstselectedentry Scroll to make first selected entry visible in Project Table.  Syntax: showfirstselectedentry",t:"showfirstselectedentry"},"3266":{i:0.000141526815784659,u:"../maestro_command_reference/showhwstereosetup.html",a:"showhwstereosetup Write out the hardware stereo setup.  Syntax: showhwstereosetup",t:"showhwstereosetup"},"3267":{i:0.000141521598624326,u:"../maestro_command_reference/showmarkers.html",a:"showmarkers This command displays the given marker.  Syntax: showmarkers [\u003cmarker_name\u003e ]\n Operands: \u003cmarker_name\u003e  The name of the marker. ",t:"showmarkers"},"3268":{i:0.000141504799213664,u:"../maestro_command_reference/showpanel.html",a:"Show the panel whose name is given by the operands.  Syntax: showpanel [\u003cpanel_name\u003e [:\u003ctab_name\u003e] ]\n Operands: \u003cpanel_name\u003e [:\u003ctab_name\u003e]  The first operand is the name of the panel which is to be displayed. The name must match to all characters. The optional second argument is the name of a tab ...",t:"showpanel"},"3269":{i:0.000141450720735392,u:"../maestro_command_reference/showpanels.html",a:"showpanels Make visible panels previously hidden with HIDEPANELS  Syntax: showpanels",t:"showpanels"},"3270":{i:0.000141276646369033,u:"../maestro_command_reference/showpropertiesselectedentries.html",a:"showpropertiesselectedentries Displays only those properties for which at least one of the selected entries has a value.  Syntax: showpropertiesselectedentries",t:"showpropertiesselectedentries"},"3271":{i:0.000140716326222606,u:"../maestro_command_reference/showproperty.html",a:"showproperty This command shows the given property by creating a subset of all the properties in show state. This function also switches to the property subset view.  Syntax: showproperty [\u003cpropertyname\u003e ]\n Operands: \u003cpropertyname\u003e  The name of the property to show. ",t:"showproperty"},"3272":{i:0.000138912756225449,u:"../maestro_command_reference/showtoolbar.html",a:"Show the toolbar of given id displayed under given panel.  Syntax: showtoolbar [\u003cpanel_name:toolbar_id\u003e ]\n Operands: \u003cpanel_name:toolbar_id\u003e  The first part is the name of the panel under which toolbar would be displayed. The name must match to all characters and it is a case sensitive. The second ...",t:"showtoolbar"},"3273":{i:0.000177476584094296,u:"../maestro_command_reference/sleep.html",a:"sleep This is a standard alias for  energysleep .",t:"sleep"},"3274":{i:0.00013890593404524,u:"../maestro_command_reference/sorteditatomcolumn.html",a:"sorteditatomcolumn Sorts the given column in the atom-property table.  Syntax: sorteditatomcolumn [\u003ccolumn\u003e ]\n Operands: \u003ccolumn\u003e  The column to sort. ",t:"sorteditatomcolumn"},"3275":{i:0.000140692245578107,u:"../maestro_command_reference/specifiedname.html",a:"Set the specified name to that specified for all atoms which match the ASL specification.  Syntax: specifiedname [\u003cspecified_name\u003e \u003cASL\u003e ]\n Operands: \u003cspecified_name\u003e \u003cASL\u003e  The first operand is the specified name which is to be applied to the atom. Only the first 20 characters of the specified name ...",t:"specifiedname"},"3276":{i:0.000141198472026668,u:"../maestro_command_reference/spotcenter.html",a:"spotcenter Center the given atom in the Workspace. Make it the center of global rotation.  Syntax: spotcenter [\u003catom_num\u003e ]\n Operands: \u003catom_num\u003e  The number of the atom which is to be centered in the Workspace and to become the center of rotation. ",t:"spotcenter"},"3277":{i:0.000141198877048186,u:"../maestro_command_reference/spotcenteratoms.html",a:"spotcenteratoms Center specified atoms in the Workspace. Make it the center of global rotation.  Syntax: spotcenteratoms [\u003cASL\u003e ]\n Operands: \u003cASL\u003e  The specified atoms are to be centered in the Workspace and to become the center of rotation. ",t:"spotcenteratoms"},"3278":{i:0.000140694080528846,u:"../maestro_command_reference/spotcenterpoint.html",a:"spotcenterpoint Center the given point in the Workspace. Make it the center of global rotation.  Syntax: spotcenterpoint [\u003cx y z\u003e ]\n Operands: \u003cx y z\u003e  The point is to be centered in the Workspace and to become the center of rotation. ",t:"spotcenterpoint"},"3279":{i:0.000138912005472812,u:"../maestro_command_reference/startdiagnosis.html",a:"This commands collects diagnostic information such as total system memory, available system memory, running maestro process peak virtual memory usage, current virtual memory usage, peak resident memory usage (only Linux), current resident memory usage (Only Linux), total swap disk space, free swap ...",t:"startdiagnosis"},"3280":{i:0.0001775027108509,u:"../maestro_command_reference/stop.html",a:"stop This is a standard alias for  energystop .",t:"stop"},"3281":{i:0.000138918843509849,u:"../maestro_command_reference/stopdiagnosis.html",a:"This commands collects diagnostic information such as total system memory, available system memory, running maestro process peak virtual memory usage, current virtual memory usage, peak resident memory usage (only Linux), current resident memory usage (Only Linux), total swap disk space, free swap ...",t:"stopdiagnosis"},"3282":{i:0.000140718217120044,u:"../maestro_command_reference/strikebuildqsar.html",a:"strikebuildqsar Runs a Build QSAR job.  Syntax: strikebuildqsar activity_property= \u003ctext\u003e max_pls_factors= \u003cn\u003e method= pca | mlr remove_outliers= yes | no supyintercept= yes | no which_descriptors= subset [\u003cjob name\u003e ]\n Options: activity_property The name of the activity property. ",t:"strikebuildqsar"},"3283":{i:0.000141277233100965,u:"../maestro_command_reference/strikedeletemodel.html",a:"strikedeletemodel Deletes the given model.  Syntax: strikedeletemodel [\u003cmodel name\u003e ]\n Operands: \u003cmodel name\u003e  The name of the model to delete. ",t:"strikedeletemodel"},"3284":{i:0.000141450901102307,u:"../maestro_command_reference/strikeexportmodel.html",a:"strikeexportmodel Exports a model from Strike.  Syntax: strikeexportmodel [\u003cfile\u003e ]\n Operands: \u003cfile\u003e  The file to export the Strike model to. ",t:"strikeexportmodel"},"3285":{i:0.00014150484896977,u:"../maestro_command_reference/strikeextendselectdescriptor.html",a:"strikeextendselectdescriptor Extends the selected descriptors via the given descriptor.  Syntax: strikeextendselectdescriptor [\u003cM2IO descriptor name\u003e ]\n Operands: \u003cM2IO descriptor name\u003e  The M2IO data name of the descriptor to select. ",t:"strikeextendselectdescriptor"},"3286":{i:0.000141521594090732,u:"../maestro_command_reference/strikeimportmodel.html",a:"strikeimportmodel Imports a model to the Strike panels.  Syntax: strikeimportmodel [\u003cfile\u003e ]\n Operands: \u003cfile\u003e  The file to import the Strike model from. ",t:"strikeimportmodel"},"3287":{i:0.000141526749839193,u:"../maestro_command_reference/strikeplotmodel.html",a:"strikeplotmodel Plots the given model.  Syntax: strikeplotmodel [\u003cmodel name\u003e ]\n Operands: \u003cmodel name\u003e  The name of the model to plot. ",t:"strikeplotmodel"},"3288":{i:0.000141528203342069,u:"../maestro_command_reference/strikepredict.html",a:"strikepredict Runs a prediction job.  Syntax: strikepredict [\u003cjob name\u003e ]\n Operands: \u003cjob name\u003e  The name of the job to run. ",t:"strikepredict"},"3289":{i:0.000141528177875878,u:"../maestro_command_reference/strikeselectdescriptor.html",a:"strikeselectdescriptor Selects the given descriptor  Syntax: strikeselectdescriptor [\u003cM2IO descriptor name\u003e ]\n Operands: \u003cM2IO descriptor name\u003e  The M2IO data name of the descriptor to select. ",t:"strikeselectdescriptor"},"3290":{i:0.000141526634757996,u:"../maestro_command_reference/strikeselectmodel.html",a:"strikeselectmodel Selects only the given model.  Syntax: strikeselectmodel [\u003cmodel name\u003e ]\n Operands: \u003cmodel name\u003e  The name of the model to select. ",t:"strikeselectmodel"},"3291":{i:0.000141521212979694,u:"../maestro_command_reference/strikesimilarity.html",a:"strikesimilarity Runs a similarity job.  Syntax: strikesimilarity job_type= descriptors [\u003cjob name\u003e ]\n Options: job_type Whether to calculate atom pair or descriptor similarities. ",t:"strikesimilarity"},"3292":{i:0.00014150361911122,u:"../maestro_command_reference/striketoggleselectdescriptor.html",a:"striketoggleselectdescriptor Toggles the selection of the given descriptor on or off.  Syntax: striketoggleselectdescriptor [\u003cM2IO descriptor name\u003e ]\n Operands: \u003cM2IO descriptor name\u003e  The M2IO data name of the descriptor to select. ",t:"striketoggleselectdescriptor"},"3293":{i:0.00014144694057924,u:"../maestro_command_reference/structalignatoms.html",a:"structalignatoms Sets the ASL that the next struct align job will operate on.  Syntax: structalignatoms [\u003cASL\u003e ]\n Operands: \u003cASL\u003e  The residues to align. ",t:"structalignatoms"},"3294":{i:0.00014126448409478,u:"../maestro_command_reference/structalignatomsalt.html",a:"structalignatomsalt Sets the separate ASL that the next struct align job will operate on. If the separate asl is set, the original ASL will be used as reference residues.  Syntax: structalignatomsalt [\u003cASL\u003e ]\n Operands: \u003cASL\u003e  The residues to align. ",t:"structalignatomsalt"},"3295":{i:0.000140677177940939,u:"../maestro_command_reference/structalignstart.html",a:"structalignstart Start a struct align job with the current settings.  Syntax: structalignstart",t:"structalignstart"},"3296":{i:0.000138786743579221,u:"../maestro_command_reference/substructure.html",a:"Specifies a set of atoms to be used as the \"substructure\" during a substructure minimization or dynamics simulation.  Syntax: substructure fillres= yes | no radius= \u003cx\u003e [\u003cASL\u003e ]\n Options: fillres A boolean option that determines if the substructure definition will be expended to complete residue ...",t:"substructure"},"3297":{i:0.000176935764695215,u:"../maestro_command_reference/substructurefile.html",a:"substructurefile This is a standard alias for  substructurefilewrite .",t:"substructurefile"},"3298":{i:0.000136527095577787,u:"../maestro_command_reference/substructurefileread.html",a:"Will read a .sbc file and replace the current substructure and constrained/fixed atom shells.  Syntax: substructurefileread [\u003csbc_file_name\u003e ]\n Operands: \u003csbc_file_name\u003e  The complete name (including the *.sbc suffix ) of the file from which the substructure information will be read. ",t:"substructurefileread"},"3299":{i:0.0001769357647088,u:"../maestro_command_reference/substructurefilewrite.html",a:"Will write a .sbc file with the current substructure and constrained/fixed atom shells.  Syntax: substructurefilewrite absolutecoords= yes | no aslformat= yes | no [\u003csbc_file_name\u003e ]\n Options: absolutecoords A boolean option which determines whether the atoms are considered to be at absolute ...",t:"substructurefilewrite"},"3300":{i:0.000138786743641528,u:"../maestro_command_reference/substructureshell.html",a:"Specifies a set of atoms forming a \"shell\" around the substructure defined by the \"subs\" command.  Syntax: substructureshell addatoms= \u003ctext\u003e constant= \u003cx\u003e fillres= yes | no frozen= yes | no radius= \u003cx\u003e [\u003cshell_number\u003e \u003cASL-definition\u003e ]\n Options: addatoms A string in the atom specification ...",t:"substructureshell"},"3301":{i:0.000140677178142873,u:"../maestro_command_reference/superimpose.html",a:"Perform a superposition using previously defined atoms or all corresponding atoms in all onscreen entries if all is used.  Syntax: superimpose fixedentry= \u003ctext\u003e inplace= yes | no [[all] ]\n Options: fixedentry The name of the fixed entry for superposition. If not specified, the topmost entry in PT ...",t:"superimpose"},"3302":{i:0.000141264484753849,u:"../maestro_command_reference/superimposeatom.html",a:"Define an atom pair for which will be superimposed in a subsequent superposition operation.  Syntax: superimposeatom [\u003catom1\u003e \u003catom2\u003e ]\n Operands: \u003catom1\u003e \u003catom2\u003e  Two atom numbers which represent an atom pair to be superimposed by a subsequent superimpose command. The two atoms must be from ...",t:"superimposeatom"},"3303":{i:0.000141446942684058,u:"../maestro_command_reference/superimposeset.html",a:"Use an ASL expression to define superposition atom pairs. The ASL set must define exactly the same number of atoms in each on-screen entry.  Syntax: superimposeset [\u003cASL\u003e ]\n Operands: \u003cASL\u003e  A string in the atom specification language. This set must define exactly the same number of atoms in each ...",t:"superimposeset"},"3304":{i:0.000141503625900454,u:"../maestro_command_reference/superimposesmarts.html",a:"Use a SMARTS expression to define superposition atom pairs. The SMARTS expression must define exactly the same number of atoms in each on-screen entry.  Syntax: superimposesmarts [\u003cSMARTS\u003e ]\n Operands: \u003cSMARTS\u003e  A SMARTS expression. This must define exactly the same number of atoms in each on-screen ...",t:"superimposesmarts"},"3305":{i:0.000141521234808777,u:"../maestro_command_reference/surfaceactivegrid.html",a:"Changes the settings of active grid for the given surface.  Syntax: surfaceactivegrid centerx= \u003cx\u003e centery= \u003cx\u003e centerz= \u003cx\u003e entry= \u003ctext\u003e mode= size | use | center_point size= \u003cx\u003e surface= \u003ctext\u003e use= yes | no volume= \u003ctext\u003e [\u003cASL\u003e ]\n Options: centerx The X coordinate of active grid center for the ...",t:"surfaceactivegrid"},"3306":{i:0.000141526705063258,u:"../maestro_command_reference/surfacecontours.html",a:"Control surface contour settings Edges are contoured when the distance along z to the nearest surface point behind it is at least the distance specified in the contour \u0027depth\u0027 value. The contour color is controlled by the red, green, and blue option values. The contour line\u0027s thickness is controlled ...",t:"surfacecontours"},"3307":{i:0.00014152840421037,u:"../maestro_command_reference/surfacedarkencolor.html",a:"surfacedarkencolor Darkens the color by cavity depth for the given surface.  Syntax: surfacedarkencolor bycavitydepth= yes | no entry= \u003ctext\u003e [\u003csurface\u003e ]\n Options: bycavitydepth Darkens the color by surface cavity depth. ",t:"surfacedarkencolor"},"3308":{i:0.000141528932072835,u:"../maestro_command_reference/surfacedelete.html",a:"surfacedelete Deletes the given surface.  Syntax: surfacedelete entry= \u003ctext\u003e [\u003csurface\u003e ]\n Options: entry The entry that the surface belongs to. ",t:"surfacedelete"},"3309":{i:0.00014152909595932,u:"../maestro_command_reference/surfacedeletebyname.html",a:"surfacedeletebyname Deletes the named surfaces from all entries in the Workspace.  Syntax: surfacedeletebyname [\u003csurface\u003e ]\n Operands: \u003csurface\u003e  The name of the surface to delete. ",t:"surfacedeletebyname"},"3310":{i:0.000141529146909128,u:"../maestro_command_reference/surfacedisplay.html",a:"surfacedisplay Displays or undisplays the given surface  Syntax: surfacedisplay display= yes | no entry= \u003ctext\u003e [\u003csurface\u003e ]\n Options: display Sets whether or not to display the surface. ",t:"surfacedisplay"},"3311":{i:0.000141529162695235,u:"../maestro_command_reference/surfaceduplicate.html",a:"surfaceduplicate Duplicates the given surface.  Syntax: surfaceduplicate entry= \u003ctext\u003e [\u003csurface\u003e ]\n Options: entry The entry that the surface belongs to. ",t:"surfaceduplicate"},"3312":{i:0.000141529167624808,u:"../maestro_command_reference/surfaceextended.html",a:"Creates a new extended radius surface for the current workspace.  Syntax: surfaceextended atom_radius_scaling= \u003cx\u003e auto_grid_spacing= yes | no context= molecule | workspace | none | asl grid_spacing= \u003cx\u003e probe_radius= \u003cx\u003e transparency= \u003cx\u003e [name of the surface, followed by ASL defining the atoms to ...",t:"surfaceextended"},"3313":{i:0.000141529169138524,u:"../maestro_command_reference/surfaceextendedradiuscontext.html",a:"surfaceextendedradiuscontext Defines a set of atoms for which a surface can be clipped against with the surfaceextendedradius command.  Syntax: surfaceextendedradiuscontext [\u003cASL\u003e ]\n Operands: \u003cASL\u003e  The ASL expression which defines the atoms the surface will be clipped against. ",t:"surfaceextendedradiuscontext"},"3314":{i:0.000141529169620861,u:"../maestro_command_reference/surfaceextendedradiusset.html",a:"surfaceextendedradiusset Defines a set of atoms for which a surface can be created for with the surfaceextendedradius command.  Syntax: surfaceextendedradiusset [\u003cASL\u003e ]\n Operands: \u003cASL\u003e  The ASL expression which defines the atoms the surface will be created for. ",t:"surfaceextendedradiusset"},"3315":{i:0.000141529169763901,u:"../maestro_command_reference/surfacemolecular.html",a:"Creates a new molecular surface for the current workspace.  Syntax: surfacemolecular atom_radius_scaling= \u003cx\u003e auto_grid_spacing= yes | no boolean_operation= union | intersection | difference context= molecule | workspace | none | asl edgesmoothing= yes | no grid_spacing= \u003cx\u003e probe_radius= \u003cx\u003e ...",t:"surfacemolecular"},"3316":{i:0.00014152916981287,u:"../maestro_command_reference/surfacemolecularcontext.html",a:"surfacemolecularcontext Defines a set of atoms for which a surface will be clipped against with the surfacemolecular command.  Syntax: surfacemolecularcontext [\u003cASL\u003e ]\n Operands: \u003cASL\u003e  The ASL expression which defines the atoms the surface will be clipped against. ",t:"surfacemolecularcontext"},"3317":{i:0.000141529169825829,u:"../maestro_command_reference/surfacemolecularset.html",a:"surfacemolecularset Defines a set of atoms for which a surface can be created for with the surfacemolecular command.  Syntax: surfacemolecularset [\u003cASL\u003e ]\n Operands: \u003cASL\u003e  The ASL expression which defines the atoms the surface will be created for. ",t:"surfacemolecularset"},"3318":{i:0.000141529169831234,u:"../maestro_command_reference/surfacemolecularset2.html",a:"surfacemolecularset2 Defines a set of atoms for surface boolean operation.  Syntax: surfacemolecularset2 [\u003cASL\u003e ]\n Operands: \u003cASL\u003e  The ASL expression which defines the atoms for surface boolean operation. ",t:"surfacemolecularset2"},"3319":{i:0.00014152916983229,u:"../maestro_command_reference/surfaceoption.html",a:"Set surface options.  Syntax: surfaceoption cavitydepth= yes | no cavityiterations= \u003cn\u003e cavitylimit= \u003cx\u003e defaulttransparency= \u003cn\u003e defaulttransparencyback= \u003cn\u003e defaulttransparencytogether= yes | no extentstep= \u003cx\u003e fastrender= yes | no keepcenter= yes | no lowqualitytransparency= always | never ...",t:"surfaceoption"},"3320":{i:0.000141529169832956,u:"../maestro_command_reference/surfacepbrsp.html",a:"Creates a new Electrostatic Potential Surface for the current workspace.  Syntax: surfacepbrsp auto_grid_spacing= yes | no coarsedepth= \u003cn\u003e coarsespacing= \u003cx\u003e espmapscale= \u003cx\u003e focusdepth= \u003cn\u003e focusspacing= \u003cx\u003e grid_spacing= \u003cx\u003e isosurfaces= yes | no isovalue= isovalue2 | isovalue3 | isovalue4 ...",t:"surfacepbrsp"},"3321":{i:0.000141529169833023,u:"../maestro_command_reference/surfacepbrspset.html",a:"surfacepbrspset Defines a set of atoms for which a surface can be created for with the surfacepbrsp command.  Syntax: surfacepbrspset [\u003cASL\u003e ]\n Operands: \u003cASL\u003e  The ASL expression which defines the atoms the surface will be created for. ",t:"surfacepbrspset"},"3322":{i:0.000141529169833109,u:"../maestro_command_reference/surfacerename.html",a:"surfacerename Renames the given surface.  Syntax: surfacerename entry= \u003ctext\u003e newname= \u003ctext\u003e [\u003csurface\u003e ]\n Options: entry The entry that the surface belongs to. ",t:"surfacerename"},"3323":{i:0.000141529169833111,u:"../maestro_command_reference/surfaceresolution.html",a:"surfaceresolution Set surface displaying resolution options.  Syntax: surfaceresolution lowresstyle= mesh | dot resolution= low  Options: lowresstyle Specifies drawing style for sloid surfaces when rotating. Valid values are `solid\u0027, `mesh\u0027, and `dot\u0027. ",t:"surfaceresolution"},"3324":{i:0.000141529169833122,u:"../maestro_command_reference/surfacescheme.html",a:"Sets the color scheme for the given surface.  Syntax: surfacescheme color= \u003ctext\u003e colorblue= \u003cn\u003e colorgreen= \u003cn\u003e colorramp= \u003ctext\u003e colorred= \u003cn\u003e datarange= entire_volume dotradius= \u003cx\u003e entry= \u003ctext\u003e espcolorramp= \u003ctext\u003e espmax= \u003cx\u003e espmin= \u003cx\u003e iterations= \u003cn\u003e linewidth= \u003cx\u003e mapmax= \u003cx\u003e mapmin= \u003cx\u003e ...",t:"surfacescheme"},"3325":{i:0.000141529169833121,u:"../maestro_command_reference/surfacesetcomment.html",a:"surfacesetcomment Changes the comments of a given surface.  Syntax: surfacesetcomment comment= \u003ctext\u003e entry= \u003ctext\u003e [\u003csurface\u003e ]\n Options: comment The new comments for the surface. ",t:"surfacesetcomment"},"3326":{i:0.000141529169833122,u:"../maestro_command_reference/surfacesetisovalue.html",a:"surfacesetisovalue Changes the isovalue of a given surface.  Syntax: surfacesetisovalue entry= \u003ctext\u003e isovalue= \u003cx\u003e [\u003csurface\u003e ]\n Options: entry The entry that the surface belongs to. ",t:"surfacesetisovalue"},"3327":{i:0.000141529169833122,u:"../maestro_command_reference/surfacesettings.html",a:"This keyword is used to set various options associated with surface types.  Syntax: surfacesettings default_bluecolor= \u003cn\u003e default_color= gray | dark_blue | blue | light_blue | aquamarine | turquoise | spring_green | dark_green | green | lime_green | yellow_green | yellow | orange | maroon | red | ...",t:"surfacesettings"},"3328":{i:0.000141529169833122,u:"../maestro_command_reference/surfacesetviewasl.html",a:"surfacesetviewasl This command sets a surface to only display the portions of the surface within a given distance of a given ASL.  Syntax: surfacesetviewasl distance= \u003cx\u003e entry= \u003ctext\u003e surface= \u003ctext\u003e use= yes | no [ASL ]\n Options: distance The distance to the ASL. ",t:"surfacesetviewasl"},"3329":{i:0.000141529169833122,u:"../maestro_command_reference/surfacesplitpair.html",a:"surfacesplitpair Split paired surfaces into two separate surfaces.  Syntax: surfacesplitpair entry= \u003ctext\u003e volume= \u003ctext\u003e [\u003csurface\u003e ]\n Options: entry The entry name of the entry that the surface belongs to. ",t:"surfacesplitpair"},"3330":{i:0.000141529169833122,u:"../maestro_command_reference/surfacestyle.html",a:"surfacestyle Sets the drawing style for the given surface.  Syntax: surfacestyle entry= \u003ctext\u003e style= mesh | dots [\u003csurface\u003e ]\n Options: entry The entry that the surface belongs to. ",t:"surfacestyle"},"3331":{i:0.000141529169833122,u:"../maestro_command_reference/surfacetransparency.html",a:"surfacetransparency Sets the transparency for the given surface.  Syntax: surfacetransparency entry= \u003ctext\u003e transparency= \u003cx\u003e [\u003csurface\u003e ]\n Options: entry The entry that the surface belongs to. ",t:"surfacetransparency"},"3332":{i:0.000141529169833122,u:"../maestro_command_reference/surfacetransparencyback.html",a:"surfacetransparencyback Sets the transparency for the given surface (back).  Syntax: surfacetransparencyback entry= \u003ctext\u003e transparency= \u003cx\u003e [\u003csurface\u003e ]\n Options: entry The entry that the surface belongs to. ",t:"surfacetransparencyback"},"3333":{i:0.000141529169833122,u:"../maestro_command_reference/surfacevdw.html",a:"Creates a new vdW surface for the current workspace.  Syntax: surfacevdw asl= \u003ctext\u003e atom_radius_scaling= \u003cx\u003e auto_grid_spacing= yes | no context= molecule | workspace | none | asl grid_spacing= \u003cx\u003e transparency= \u003cx\u003e [Name of the surface ]\n Options: asl This option sets the ASL specification for the ...",t:"surfacevdw"},"3334":{i:0.000141529169833122,u:"../maestro_command_reference/surfacevdwcontext.html",a:"surfacevdwcontext Defines a set of atoms for which a surface will be clipped against with the surfacevdw command.  Syntax: surfacevdwcontext [\u003cASL\u003e ]\n Operands: \u003cASL\u003e  The ASL expression which defines the atoms the surface will be clipped against. ",t:"surfacevdwcontext"},"3335":{i:0.000141529169833122,u:"../maestro_command_reference/surfacevdwset.html",a:"surfacevdwset Defines a set of atoms for which a surface can be created for with the surfacevdw command.  Syntax: surfacevdwset [\u003cASL\u003e ]\n Operands: \u003cASL\u003e  The ASL expression which defines the atoms the surface will be created for. ",t:"surfacevdwset"},"3336":{i:0.000141529169833122,u:"../maestro_command_reference/surfaceviewaslset.html",a:"surfaceviewaslset Defines a set of atoms for the View by ASL property which will be used by the surfacesetviewasl command.  Syntax: surfaceviewaslset [\u003cASL\u003e ]\n Operands: \u003cASL\u003e  The ASL expression which defines the atoms that will be used for the View by ASL property. ",t:"surfaceviewaslset"},"3337":{i:0.000141529169833122,u:"../maestro_command_reference/swapptworkspace.html",a:"swapptworkspace Swaps the project table and the Workspace.  Syntax: swapptworkspace",t:"swapptworkspace"},"3338":{i:0.000141529169833122,u:"../maestro_command_reference/symmetrizeworkspace.html",a:"symmetrizeworkspace Symmetrizes the workspace finding the point groups.  Syntax: symmetrizeworkspace tolerance= \u003cx\u003e [analyze|update ]\n Options: tolerance Tolerance for finding the pointing groups and symmetrizing the workspace ",t:"symmetrizeworkspace"},"3339":{i:0.000141529169833122,u:"../maestro_command_reference/synchronizeworkspacefromproject.html",a:"synchronizeworkspacefromproject Save changes from project into the workspace.  Syntax: synchronizeworkspacefromproject [\u003cESL\u003e ]\n Operands: \u003cESL\u003e  A valid ESL specification. ",t:"synchronizeworkspacefromproject"},"3340":{i:0.000141529169833122,u:"../maestro_command_reference/system.html",a:"system Execute a command from the system.  Syntax: system [\u003ccommand\u003e ]\n Operands: \u003ccommand\u003e  A command which is to be executed from the current shell. ",t:"system"},"3341":{i:0.000141529169833122,u:"../maestro_command_reference/tablealigncolumn.html",a:"tablealigncolumn Set the alignment of the specified column in the current table.  Syntax: tablealigncolumn alignment= center | right [\u003ccolumnname\u003e \u003calignment\u003e ]\n Options: alignment The alignment to be set for the column. Valid values are \"left\", \"center\", or \"right\". ",t:"tablealigncolumn"},"3342":{i:0.000141529169833122,u:"../maestro_command_reference/tablecopyprop.html",a:"Set property values for selected project entries from a value associated with entry row in the current Project Table, and indirectly associated with the entry. This is similar to entrycopyprop command, but the from property value comes from a table row or from an entry group associated with the ...",t:"tablecopyprop"},"3343":{i:0.000141529169833122,u:"../maestro_command_reference/tablegroupsort.html",a:"Reorder the groups in the specified table.  Syntax: tablegroupsort field= \u003ctext\u003e order= descending source= firstentry [\u003ctable\u003e all|\u003cgroup name list\u003e ]\n Options: field The name of the group/entry property to be used as sort-key attribute. Use grouptitle to reorder groups based on group\u0027s title. Use ...",t:"tablegroupsort"},"3344":{i:0.000141529169833122,u:"../maestro_command_reference/tablerank.html",a:"Rank entries in the project table.  Syntax: tablerank action1= yes | no action2= yes | no action3= yes | no action4= yes | no numprops= \u003cn\u003e prop1= \u003ctext\u003e prop2= \u003ctext\u003e prop3= \u003ctext\u003e prop4= \u003ctext\u003e saveasproperty= \u003ctext\u003e saveaspropertydata= \u003ctext\u003e selectoption= npercentofentries | nentriesineachgroup ...",t:"tablerank"},"3345":{i:0.000141529169833122,u:"../maestro_command_reference/tableresizecolumn.html",a:"Set the width of the specified column in the current table.  Syntax: tableresizecolumn [\u003ccolumnname\u003e \u003cwidth\u003e ]\n Operands: \u003ccolumnname\u003e \u003cwidth\u003e  The name of the column to resize. This is the name displayed in the column header. The width to set the column to. This is the new width for the column. ",t:"tableresizecolumn"},"3346":{i:0.000141529169833122,u:"../maestro_command_reference/tablesort.html",a:"tablesort Sort current entry selection in the specified table.  Syntax: tablesort field= \u003ctext\u003e order= descending [\u003ctable\u003e ]\n Options: field The name of the property to be sorted on. This option has been deprecated in favor of the tablesortfields command. This option does nothing now. ",t:"tablesort"},"3347":{i:0.000141529169833122,u:"../maestro_command_reference/tablesortall.html",a:"tablesortall Sort all rows in the specified table.  Syntax: tablesortall [\u003ctable\u003e ]\n Operands: \u003ctable\u003e  The name of the table to sort. ",t:"tablesortall"},"3348":{i:0.000141529169833122,u:"../maestro_command_reference/tablesortfields.html",a:"Sets multiple fields for sorting.  Syntax: tablesortfields groupbypropertyname= \u003ctext\u003e groupentriesbeforesort= yes | no selectentries= selectuniqueentries selectoption= npercentofentries | nentriesineachgroup | npercentofentriesineachgroup selecttop= yes | no selectuniqueentriesbyproperty= \u003ctext\u003e ...",t:"tablesortfields"},"3349":{i:0.000141529169833122,u:"../maestro_command_reference/tablesortgroupfields.html",a:"tablesortgroupfields Sets multiple fields for sorting groups.  Syntax: tablesortgroupfields sortgroupoption= firstentrypropertysortfield | firstentrypropertygroupsortfield  Options: sortgroupoption An option which controls the sorting of groups. ",t:"tablesortgroupfields"},"3350":{i:0.000141529169833122,u:"../maestro_command_reference/tableunselectnonsubset.html",a:"tableunselectnonsubset Unselects all entries which are not in the current table\u0027s subset.  Syntax: tableunselectnonsubset",t:"tableunselectnonsubset"},"3351":{i:0.000141529169833122,u:"../maestro_command_reference/targetentry.html",a:"Designate the target entry for Workspace entry feedback, subject to the entryfeedbackshow and feedbackproperties preferences.  Syntax: targetentry target= \u003ctext\u003e  Options: target This option sets the name (ID string) of the target entry. If there is no target entry, this string should be empty. ...",t:"targetentry"},"3352":{i:0.000141529169833122,u:"../maestro_command_reference/test.htm",a:"test Export a volume to the given file.  Syntax: visexport entry= \u003ctext\u003e format= cnsformatted | cnsccp4 surface= \u003ctext\u003e surfacetype= \u003ctext\u003e surfacetypecomment= \u003ctext\u003e volume= \u003ctext\u003e [\u003cfile name\u003e ]\n Options: entry The entry name of the entry that the surface belongs to. ",t:"test"},"3353":{i:0.000141529169833122,u:"../maestro_command_reference/tile.html",a:"tile Spread the on-screen entries out in a tile-pattern.  Syntax: tile",t:"tile"},"3354":{i:0.000141529169833122,u:"../maestro_command_reference/tileapplyview.html",a:"Set the view for all tiles from that of the specified Workspace tile.  Syntax: tileapplyview [\u003ctile_name\u003e ]\n Operands: \u003ctile_name\u003e  The name which identifies the contents of the tile. This name will be the index of an entry group (greater than 0), or 0: followed by the entry ID for un ungrouped ...",t:"tileapplyview"},"3355":{i:0.000141529169833122,u:"../maestro_command_reference/tileapplyzoom.html",a:"Set the zoom for all tiles from that of the specified Workspace tile.  Syntax: tileapplyzoom [\u003ctile_name\u003e ]\n Operands: \u003ctile_name\u003e  The name which identifies the contents of the tile. This name will be the index of an entry group (greater than 0), or 0: followed by the entry ID for un ungrouped ...",t:"tileapplyzoom"},"3356":{i:0.000141529169833122,u:"../maestro_command_reference/tilemode.html",a:"tilemode Control over mode which effectively creates separate workspaces for different entries.  Syntax: tilemode max_columns= \u003cn\u003e mode= group | surface tile= yes | no transformall= yes | no  Options: max_columns Specifies the maximum number of tile columns. ",t:"tilemode"},"3357":{i:0.000141529169833122,u:"../maestro_command_reference/tilemove.html",a:"Move the tile identified by the first operand to the location of the tile identified by the second operand.  Syntax: tilemove [\u003cmove_tile_name\u003e \u003cto_tile_name\u003e ]\n Operands: \u003cmove_tile_name\u003e \u003cto_tile_name\u003e  The names of two Workspace tiles, the first of which is to be moved to the location currently ...",t:"tilemove"},"3358":{i:0.000141529169833122,u:"../maestro_command_reference/tilereset.html",a:"Reset transform for the specified Workspace tile to that which was in effect the last time the current tile mode was entered.  Syntax: tilereset [\u003ctile_name\u003e ]\n Operands: \u003ctile_name\u003e  The name which identifies the contents of the tile. This name will be the index of an entry group (greater than 0), ...",t:"tilereset"},"3359":{i:0.000141529169833122,u:"../maestro_command_reference/tileresetall.html",a:"tileresetall Reset transform for all tiles in Workspace to that which was in effect the last time the current tile mode was entered. This also sets the global transform.  Syntax: tileresetall",t:"tileresetall"},"3360":{i:0.000141529169833122,u:"../maestro_command_reference/timingsetup.html",a:"Set timing experiment variables.  Syntax: timingsetup duration= \u003cx\u003e file= \u003ctext\u003e period= \u003cx\u003e  Options: duration This option sets the maximum duration (in seconds) for the timing experiment. A value of 0.0 means that there is no limit on the time, and that the timing experiment will continue until a ...",t:"timingsetup"},"3361":{i:0.000141529169833122,u:"../maestro_command_reference/timingstart.html",a:"timingstart Start a timing experiment with the settings from the last timingsetup command. This first stops any timing experiment currently in progress (from a previous timingstart command).  Syntax: timingstart",t:"timingstart"},"3362":{i:0.000141529169833122,u:"../maestro_command_reference/timingstop.html",a:"timingstop Stop any timing experiment currently in progress (from a previous timingstart command). Timing results for a partially completed sampling period are not reported.  Syntax: timingstop",t:"timingstop"},"3363":{i:0.000141529169833121,u:"../maestro_command_reference/toggleseditatomboolean.html",a:"toggleseditatomboolean Toggles the boolean property for the given row in the atom-property table.  Syntax: toggleseditatomboolean property= \u003ctext\u003e [\u003crow number\u003e ]\n Options: property The M2IO data name of the property to toggle ",t:"toggleseditatomboolean"},"3364":{i:0.000141529169833122,u:"../maestro_command_reference/toggleselecteditatom.html",a:"toggleselecteditatom Toggles the selection of the given row in the edit atom-property table.  Syntax: toggleselecteditatom [\u003crow number\u003e ]\n Operands: \u003crow number\u003e  The operand is the row number to toggle-select. ",t:"toggleselecteditatom"},"3365":{i:0.000141529169833112,u:"../maestro_command_reference/toggleselecteditproperty.html",a:"toggleselecteditproperty Toggles the selection of the given property in the edit property list.  Syntax: toggleselecteditproperty [\u003cproperty\u003e ]\n Operands: \u003cproperty\u003e  The operand is a property from the edit property list. ",t:"toggleselecteditproperty"},"3366":{i:0.000141529169833109,u:"../maestro_command_reference/torsioncheck.html",a:"torsioncheck Specifies four atoms which define a torsion to be checked during a conformational search.  Syntax: torsioncheck maximum= \u003cx\u003e minimum= \u003cx\u003e [\u003catom1\u003e \u003catom2\u003e \u003catom3\u003e \u003catom4\u003e ]\n Options: maximum The maximum allowed value for the torsion. during the torsion check. ",t:"torsioncheck"},"3367":{i:0.00014152916983303,u:"../maestro_command_reference/torsiongroup.html",a:"Sets the current torsion group and the conformation within that group  Syntax: torsiongroup [\u003cgroup_name\u003e \u003cconformation_name\u003e ]\n Operands: \u003cgroup_name\u003e \u003cconformation_name\u003e  The first operand must be the name of a torsion group within the current fragment mode. The second operand must be the name of ...",t:"torsiongroup"},"3368":{i:0.000141529169832959,u:"../maestro_command_reference/trajectoryexport.html",a:"trajectoryexport Export selected frames from the current project to a file or to PT  Syntax: trajectoryexport",t:"trajectoryexport"},"3369":{i:0.000141529169832351,u:"../maestro_command_reference/trajectoryexportatoms.html",a:"trajectoryexportatoms Specify the set of atoms to include in each exported frame  Syntax: trajectoryexportatoms [\u003cASL\u003e ]\n Operands: \u003cASL\u003e  A string in the atom specification language. ",t:"trajectoryexportatoms"},"3370":{i:0.000141529169831292,u:"../maestro_command_reference/trajectoryexportmovieoptions.html",a:"trajectoryexportmovieoptions Sets the options for the export movie for trajectory player.  Syntax: trajectoryexportmovieoptions format= mpeg | quicktime frames= all  Options: format This option sets the format of movie file. ",t:"trajectoryexportmovieoptions"},"3371":{i:0.000141529169826305,u:"../maestro_command_reference/trajectoryexportoptions.html",a:"Sets the options for the export structure for trajectory player.  Syntax: trajectoryexportoptions exportto= file filename= \u003ctext\u003e frames= currentsingle | currentmultiple  Options: exportto This option sets the destination of the frame to be written. Valid values are \u0027pt\u0027 or \u0027file\u0027. ",t:"trajectoryexportoptions"},"3372":{i:0.000141529169813697,u:"../maestro_command_reference/trajectoryplayerdisplayatoms.html",a:"trajectoryplayerdisplayatoms Specify the set of atoms to be displayed in each frame  Syntax: trajectoryplayerdisplayatoms [\u003cASL\u003e ]\n Operands: \u003cASL\u003e  A string in the atom specification language. ",t:"trajectoryplayerdisplayatoms"},"3373":{i:0.00014152916976784,u:"../maestro_command_reference/trajectoryplayergoto.html",a:"Go to the specified frame in the ordered sequence of trajectory frames.  Syntax: trajectoryplayergoto [\u003cframe_number\u003e ]\n Operands: \u003cframe_number\u003e  The frame number within the ordered sequence of trajectory frames, which is to be included in the workspace. This frame is recorded as an option to the ...",t:"trajectoryplayergoto"},"3374":{i:0.000141529169630673,u:"../maestro_command_reference/trajectoryplayergotofirst.html",a:"trajectoryplayergotofirst Go to the start frame in the ordered sequence of trajectory frames.  Syntax: trajectoryplayergotofirst",t:"trajectoryplayergotofirst"},"3375":{i:0.000141529169174782,u:"../maestro_command_reference/trajectoryplayergotolast.html",a:"trajectoryplayergotolast Go to the end frame in the ordered sequence of trajectory frames.  Syntax: trajectoryplayergotolast",t:"trajectoryplayergotolast"},"3376":{i:0.000141529167731978,u:"../maestro_command_reference/trajectoryplayersettings.html",a:"Set trajectoryplayer state variables.  Syntax: trajectoryplayersettings arep= \u003cn\u003e brep= \u003cn\u003e crep= \u003cn\u003e drawfaster= yes | no end= \u003cn\u003e entry= \u003ctext\u003e frame= \u003cn\u003e frameduration= \u003cx\u003e playmode= reverse | once position= superimpose | center referframe= \u003cn\u003e showaxes= yes | no showonlyspecified= yes | no ...",t:"trajectoryplayersettings"},"3377":{i:0.000141529163054775,u:"../maestro_command_reference/trajectoryplayerstepahead.html",a:"Go to the next frame in the ordered sequence of trajectory frames, if there is one after the frame specified in the trajectoryplayersettings command. The step value in the trajectoryplayersettings command determines how many frames to go forward.  Syntax: trajectoryplayerstepahead",t:"trajectoryplayerstepahead"},"3378":{i:0.000141529148040315,u:"../maestro_command_reference/trajectoryplayerstepback.html",a:"Go to the previous frame in the ordered sequence of trajectory frames, if there is one before the frame specified in the trajectoryplayersettings command. The step value in the trajectoryplayersettings command determines how many frames to go back.  Syntax: trajectoryplayerstepback",t:"trajectoryplayerstepback"},"3379":{i:0.000141529099640588,u:"../maestro_command_reference/trajectoryplayersuperimposeatoms.html",a:"trajectoryplayersuperimposeatoms Specify the set of atoms used in superimposition  Syntax: trajectoryplayersuperimposeatoms [\u003cASL\u003e ]\n Operands: \u003cASL\u003e  A string in the atom specification language. ",t:"trajectoryplayersuperimposeatoms"},"3380":{i:0.000141528943864455,u:"../maestro_command_reference/trajectoryresolvemeasurements.html",a:"trajectoryresolvemeasurements Sets the options for the resolving trajectory measurements  Syntax: trajectoryresolvemeasurements use= trajonly | both  Options: use This option sets the preference of the user whether to use trajectory measuremnts or ws measurements or both ",t:"trajectoryresolvemeasurements"},"3381":{i:0.000141528442269121,u:"../maestro_command_reference/transform.html",a:"Specify what is to be transformed.  Syntax: transform acceleration= yes | no centerlocal= atom centerrotation= yes | no contactdisplay= yes | no gui= rotate | translate hbonddisplay= yes | no includealternate= yes | no rsensitivity= \u003cx\u003e scope= local | object | python showrotationcenter= yes | no ...",t:"transform"},"3382":{i:0.000141526827476479,u:"../maestro_command_reference/translate.html",a:"translate Translate in Angstroms whatever is specified in the transform set. This is either global (all atoms) or a local grouping defined useing an ASL expression in the transform command.  Syntax: translate x= \u003cx\u003e y= \u003cx\u003e z= \u003cx\u003e  Options: x Amount in Angstroms to translate in X ",t:"translate"},"3383":{i:0.000141521629109334,u:"../maestro_command_reference/undisplayatom.html",a:"undisplayatom Undisplay atoms in the set described by the ASL.  Syntax: undisplayatom [\u003cASL\u003e ]\n Operands: \u003cASL\u003e  A string in the atom specification language which describes the set of atoms which are to be undisplayed. ",t:"undisplayatom"},"3384":{i:0.000141504895066336,u:"../maestro_command_reference/undo.html",a:"undo Undo the effect of the last change on the on-screen structure.  Syntax: undo",t:"undo"},"3385":{i:0.000141451028713488,u:"../maestro_command_reference/ungroupentries.html",a:"Ungroups the entries that match the given ESL expression.  Syntax: ungroupentries [\u003cESL\u003e ]\n Operands: \u003cESL\u003e  \u003cESL\u003e A valid ESL expression to specify which entries are to be ungrouped. Ungroups the entries that match the given ESL expression, and move them all to the end of ungrouped section. In ...",t:"ungroupentries"},"3386":{i:0.000141277637583853,u:"../maestro_command_reference/unhookimport.html",a:"unhookimport Restores normal Import behavior.  Syntax: unhookimport",t:"unhookimport"},"3387":{i:0.00014071951728937,u:"../maestro_command_reference/uniquename.html",a:"With the set of specified atoms, make the atom name unique. This is done by adding a \"~N\" to each duplicate name where the \"N\" is a digit which represents how often this name is repeated in the set.  Syntax: uniquename [\u003cASL\u003e ]\n Operands: \u003cASL\u003e  The ASL expression describing the set of atoms which ...",t:"uniquename"},"3388":{i:0.000138923028625675,u:"../maestro_command_reference/uniquepdb.html",a:"uniquepdb Set unique PDB atom names (by residue) for all atoms that match the ASL specification.  Syntax: uniquepdb [\u003cASL\u003e ]\n Operands: \u003cASL\u003e  The operand is a valid ASL string that defines the set of atoms that are to have their PDB atom names changed. ",t:"uniquepdb"},"3389":{i:0.000177520674091774,u:"../maestro_command_reference/update.html",a:"update This is a standard alias for  energyupdate .",t:"update"},"3390":{i:0.000138923028625675,u:"../maestro_command_reference/updatebonds.html",a:"updatebonds Updates bond pattern in workspace structure.  Syntax: updatebonds covalentoffset= \u003cx\u003e dynamic= yes | no  Options: covalentoffset Covalent radius offset parameter. ",t:"updatebonds"},"3391":{i:0.00014071951728937,u:"../maestro_command_reference/updateribbons.html",a:"updateribbons Update existing ribbons with current ribbon style and color scheme.  Syntax: updateribbons",t:"updateribbons"},"3392":{i:0.000141277637583853,u:"../maestro_command_reference/varymolecule.html",a:"A command which defines a rotatable/translatable molecule during a conformational search. The molecule is defined by specifying any atom which belongs to it.  Syntax: varymolecule rmax= \u003cx\u003e rmin= \u003cx\u003e tmax= \u003cx\u003e tmin= \u003cx\u003e [\u003catom_number\u003e ]\n Options: rmax The maximum value for the molecule rotation. ",t:"varymolecule"},"3393":{i:0.000141451028713488,u:"../maestro_command_reference/varytorsion.html",a:"varytorsion Defines a rotatable bond to be used in a conformational search.  Syntax: varytorsion maximum= \u003cx\u003e minimum= \u003cx\u003e [\u003catom1\u003e \u003catom2\u003e ]\n Options: maximum The maximum value for the torsional rotation. ",t:"varytorsion"},"3394":{i:0.000141504895066336,u:"../maestro_command_reference/vcsaddattachment.html",a:"vcsaddattachment Adds an attachment to the core molecule using the given atoms.  Syntax: vcsaddattachment atom1= \u003cn\u003e atom2= \u003cn\u003e [\u003cattachment name\u003e ]\n Options: atom1 The atom number of the atom in the original core to set as an attachment point. This is the atom which will be kept. ",t:"vcsaddattachment"},"3395":{i:0.000141521629109334,u:"../maestro_command_reference/vcsaddcorefromproject.html",a:"vcsaddcorefromproject Adds the given entry as a core pose in CombiGlide.  Syntax: vcsaddcorefromproject [\u003centry name\u003e ]\n Operands: \u003centry name\u003e  The entry name. ",t:"vcsaddcorefromproject"},"3396":{i:0.000141526827476479,u:"../maestro_command_reference/vcsaddmincapcore.html",a:"vcsaddmincapcore Adds the minimally capped core to the poses for Define Core Poses in CombiGlide.  Syntax: vcsaddmincapcore",t:"vcsaddmincapcore"},"3397":{i:0.000141528442269121,u:"../maestro_command_reference/vcsaddoriginalcore.html",a:"vcsaddoriginalcore Adds the original core to the poses for Define Core Poses in CombiGlide.  Syntax: vcsaddoriginalcore",t:"vcsaddoriginalcore"},"3398":{i:0.000141528943864455,u:"../maestro_command_reference/vcscanceldockjob.html",a:"vcscanceldockjob Cancels the currently running Dock Library job associated results.  Syntax: vcscanceldockjob",t:"vcscanceldockjob"},"3399":{i:0.000141529099640588,u:"../maestro_command_reference/vcsclearreagentfile.html",a:"vcsclearreagentfile Clears the reagent file for the selected rows.  Syntax: vcsclearreagentfile",t:"vcsclearreagentfile"},"3400":{i:0.000141529148040315,u:"../maestro_command_reference/vcscombiexportdockingfile.html",a:"vcscombiexportdockingfile Exports the combinatorial docking results from CombiGlide to the given file.  Syntax: vcscombiexportdockingfile [\u003cfile name\u003e ]\n Operands: \u003cfile name\u003e  The file name. ",t:"vcscombiexportdockingfile"},"3401":{i:0.000141529163054775,u:"../maestro_command_reference/vcscombiexportdockingproject.html",a:"vcscombiexportdockingproject Exports the combinatorial docking results from CombiGlide.  Syntax: vcscombiexportdockingproject",t:"vcscombiexportdockingproject"},"3402":{i:0.000141529167731978,u:"../maestro_command_reference/vcscombiexportoptions.html",a:"vcscombiexportoptions Holds the options for exporting combinatorial docking results from CombiGlide.  Syntax: vcscombiexportoptions includereceptor= yes | no numreagents= \u003cn\u003e  Options: includereceptor Indicates whether or not to include the receptor in the exported results ",t:"vcscombiexportoptions"},"3403":{i:0.000141529169174782,u:"../maestro_command_reference/vcsconfiguredocking.html",a:"Allows the settings of some values that determine how the overall VCS job runs.  Syntax: vcsconfiguredocking bondrotation= \u003ctext\u003e gridfilename= \u003ctext\u003e gridfiletype= \u003ctext\u003e inputring= yes | no lig_ccut= \u003cx\u003e lig_vscale= \u003cx\u003e ligandwithmetal= either | neutral maxatom= \u003cn\u003e maxrotbonds= \u003cn\u003e ninvert= yes | ...",t:"vcsconfiguredocking"},"3404":{i:0.000141529169630673,u:"../maestro_command_reference/vcscoreoptions.html",a:"Sets the options for Define Core Poses.  Syntax: vcscoreoptions centroidx= \u003cx\u003e centroidy= \u003cx\u003e centroidz= \u003cx\u003e constrainradius= \u003cx\u003e maxglidermsd= \u003cx\u003e maxrmsd= \u003cx\u003e poseconstraint= sphere | glidecore  Options: centroidx The X-coordinate of the location to constrain the core center of mass to. ",t:"vcscoreoptions"},"3405":{i:0.00014152916976784,u:"../maestro_command_reference/vcscreatedockedlibrary.html",a:"Start the creation and docking of the library in the Analyze Library step of CombiGlide. This is similar to vcsrunenumerateddocking, except that it uses only the selected reagents at each position and does not remove or replace contents of the Combinatorial Screening run.  Syntax: ...",t:"vcscreatedockedlibrary"},"3406":{i:0.000141529169813697,u:"../maestro_command_reference/vcsdeleteattachment.html",a:"vcsdeleteattachment Deletes all of the selected attachments.  Syntax: vcsdeleteattachment",t:"vcsdeleteattachment"},"3407":{i:0.000141529169826305,u:"../maestro_command_reference/vcsdeletecore.html",a:"vcsdeletecore Deletes the selected cores in the Define Core Poses step in CombiGlide.  Syntax: vcsdeletecore",t:"vcsdeletecore"},"3408":{i:0.000141529169831292,u:"../maestro_command_reference/vcsdeleteresults.html",a:"vcsdeleteresults Deletes the given results.  Syntax: vcsdeleteresults [\u003cname\u003e ]\n Operands: \u003cname\u003e  The name of the results file. ",t:"vcsdeleteresults"},"3409":{i:0.000141529169832351,u:"../maestro_command_reference/vcsdisplayreceptor.html",a:"vcsdisplayreceptor This function displays the receptor for the current CombiGlide run in the Workspace.  Syntax: vcsdisplayreceptor",t:"vcsdisplayreceptor"},"3410":{i:0.000141529169832959,u:"../maestro_command_reference/vcsdocking.html",a:"vcsdocking Sets docking job options for CombiGlide.  Syntax: vcsdocking applystrain= yes | no postdock= yes | no task= single | combinatorial | enumerated  Options: applystrain An option which determines if the CombiGlide docking job will apply strain correction terms. ",t:"vcsdocking"},"3411":{i:0.00014152916983303,u:"../maestro_command_reference/vcsenumeratedockoptions.html",a:"vcsenumeratedockoptions Holds the options for enumerate and dock for CombiGlide.  Syntax: vcsenumeratedockoptions mode= \u003ctext\u003e  Options: mode An option controlling what type of docking will be done after combinatorial enumeration. The allowed values are combi , xp , sp , and htvs . ",t:"vcsenumeratedockoptions"},"3412":{i:0.000141529169833109,u:"../maestro_command_reference/vcsexcludetablerow.html",a:"vcsexcludetablerow Excludes the given row in the structure table in the step from the Workspace.  Syntax: vcsexcludetablerow [\u003crow\u003e ]\n Operands: \u003crow\u003e  The row number to exclude in the Workspace. ",t:"vcsexcludetablerow"},"3413":{i:0.000141529169833112,u:"../maestro_command_reference/vcsexportdefinition.html",a:"vcsexportdefinition Stores the current core molecule and attachments in a file.  Syntax: vcsexportdefinition [\u003cfile name\u003e ]\n Operands: \u003cfile name\u003e  The name of the file to store the core definition in. ",t:"vcsexportdefinition"},"3414":{i:0.000141529169833122,u:"../maestro_command_reference/vcsexportresults.html",a:"vcsexportresults Stores the settings from the Filter and Select dialog, and all the results, in a human-readable text file.  Syntax: vcsexportresults [\u003cfile name\u003e ]\n Operands: \u003cfile name\u003e  The name of the file to store the settings and results in. ",t:"vcsexportresults"},"3415":{i:0.000141529169833121,u:"../maestro_command_reference/vcsexportspreadsheet.html",a:"Export actives found by libselector to a file for use in a spreadsheet. This can be comma-separated value (.csv) format or tab-delimited format.  Syntax: vcsexportspreadsheet delimiter= \u003ctext\u003e [\u003cfilename\u003e ]\n Options: delimiter This option sets the delimiter to use to separate columns. ",t:"vcsexportspreadsheet"},"3416":{i:0.000141529169833122,u:"../maestro_command_reference/vcsimportdefinition.html",a:"vcsimportdefinition Reads a core molecule and attachments from the given file.  Syntax: vcsimportdefinition [\u003cfile name\u003e ]\n Operands: \u003cfile name\u003e  The name of the file to read the core definition from. ",t:"vcsimportdefinition"},"3417":{i:0.000141529169833122,u:"../maestro_command_reference/vcsimportrun.html",a:"Incorporates the combiglide results into the Maestro project for the specified run  Syntax: vcsimportrun [\u003cdirectory name\u003e \u003crun name\u003e ]\n Operands: \u003cdirectory name\u003e \u003crun name\u003e  The first operand is the name of the directory to read the combiglide output files. The second operand is the run name to be ...",t:"vcsimportrun"},"3418":{i:0.000141529169833122,u:"../maestro_command_reference/vcsincludeextendtablerow.html",a:"vcsincludeextendtablerow Extends the rows included in the workspace to include this one.  Syntax: vcsincludeextendtablerow [\u003crow\u003e ]\n Operands: \u003crow\u003e  The row number to include in the Workspace. ",t:"vcsincludeextendtablerow"},"3419":{i:0.000141529169833122,u:"../maestro_command_reference/vcsincludeonlytablerow.html",a:"vcsincludeonlytablerow Includes only the given row in the structure table in the step into the Workspace.  Syntax: vcsincludeonlytablerow [\u003crow\u003e ]\n Operands: \u003crow\u003e  The row number to include in the Workspace. ",t:"vcsincludeonlytablerow"},"3420":{i:0.000141529169833122,u:"../maestro_command_reference/vcsincludetablerow.html",a:"vcsincludetablerow Includes the given row in the structure table in the step into the Workspace.  Syntax: vcsincludetablerow [\u003crow\u003e ]\n Operands: \u003crow\u003e  The row number to include in the Workspace. ",t:"vcsincludetablerow"},"3421":{i:0.000141529169833122,u:"../maestro_command_reference/vcsinverttableselection.html",a:"vcsinverttableselection Inverts the row selection in the first table in the step.  Syntax: vcsinverttableselection",t:"vcsinverttableselection"},"3422":{i:0.000141529169833122,u:"../maestro_command_reference/vcsoptions.html",a:"vcsoptions This command holds general options for CombiGlide.  Syntax: vcsoptions mode= \u003ctext\u003e sidechainnode= \u003cn\u003e untangle= yes | no  Options: mode An option controlling what type of job CombiGlide will run. ",t:"vcsoptions"},"3423":{i:0.000141529169833122,u:"../maestro_command_reference/vcsrefreshstructure.html",a:"This function refreshes the structure in the Workspace from the current core structure in CombiGlide.  Syntax: vcsrefreshstructure viewcappedcore= yes | no  Options: viewcappedcore An option which allows viewing of the minimally capped core, rather than the original core, in the Workspace. ",t:"vcsrefreshstructure"},"3424":{i:0.000141529169833122,u:"../maestro_command_reference/vcsrenameattachment.html",a:"vcsrenameattachment Renames the attachment in CombiGlide to the new name.  Syntax: vcsrenameattachment row= \u003cn\u003e [\u003cnew name\u003e ]\n Options: row The row to rename. ",t:"vcsrenameattachment"},"3425":{i:0.000141529169833122,u:"../maestro_command_reference/vcsrestoreresults.html",a:"vcsrestoreresults Restores the filter and selection settings, and all associated results.  Syntax: vcsrestoreresults [\u003cname\u003e ]\n Operands: \u003cname\u003e  The name of the results file. ",t:"vcsrestoreresults"},"3426":{i:0.000141529169833122,u:"../maestro_command_reference/vcsruncombinationdocking.html",a:"vcsruncombinationdocking Runs a both single-position and combinatorial docking job for CombiGlide.  Syntax: vcsruncombinationdocking",t:"vcsruncombinationdocking"},"3427":{i:0.000141529169833122,u:"../maestro_command_reference/vcsruncombinatorialdocking.html",a:"vcsruncombinatorialdocking Runs a combinatorial docking job for CombiGlide.  Syntax: vcsruncombinatorialdocking maxresults= \u003cn\u003e mode= xp [\u003cjob name\u003e ]\n Options: maxresults The number of combinatorial results to return. ",t:"vcsruncombinatorialdocking"},"3428":{i:0.000141529169833122,u:"../maestro_command_reference/vcsruncombinatorialselection.html",a:"vcsruncombinatorialselection Runs a combinatorial selection job for CombiGlide.  Syntax: vcsruncombinatorialselection cmdargs= \u003ctext\u003e  Options: cmdargs The arguments for the reagent selection command. ",t:"vcsruncombinatorialselection"},"3429":{i:0.000141529169833122,u:"../maestro_command_reference/vcsruncreate.html",a:"vcsruncreate Creates the run with the given name.  Syntax: vcsruncreate [\u003crun name\u003e ]\n Operands: \u003crun name\u003e  The name of the new run to create. ",t:"vcsruncreate"},"3430":{i:0.000141529169833122,u:"../maestro_command_reference/vcsrundelete.html",a:"vcsrundelete Deletes the current run from the project.  Syntax: vcsrundelete",t:"vcsrundelete"},"3431":{i:0.000141529169833122,u:"../maestro_command_reference/vcsrunenumerateddocking.html",a:"vcsrunenumerateddocking Runs an enumerated docking job in the Dock Library step of CombiGlide.  Syntax: vcsrunenumerateddocking",t:"vcsrunenumerateddocking"},"3432":{i:0.000141529169833122,u:"../maestro_command_reference/vcsrunopen.html",a:"vcsrunopen Opens the run with the given name.  Syntax: vcsrunopen [\u003crun name\u003e ]\n Operands: \u003crun name\u003e  The name of the run to open. ",t:"vcsrunopen"},"3433":{i:0.000141529169833122,u:"../maestro_command_reference/vcsrunrename.html",a:"vcsrunrename Changes the current run\u0027s name to the given name.  Syntax: vcsrunrename [\u003crun name\u003e ]\n Operands: \u003crun name\u003e  The name to change the current run\u0027s name to. ",t:"vcsrunrename"},"3434":{i:0.000141529169833122,u:"../maestro_command_reference/vcsrunsaveas.html",a:"vcsrunsaveas Saves a copy of the current run under the given name.  Syntax: vcsrunsaveas [\u003crun name\u003e ]\n Operands: \u003crun name\u003e  The name of the run to save as. ",t:"vcsrunsaveas"},"3435":{i:0.000141529169833122,u:"../maestro_command_reference/vcsrunsingledocking.html",a:"vcsrunsingledocking Runs a single position docking job for CombiGlide.  Syntax: vcsrunsingledocking usecore= minimallycapped  Options: usecore Determines what kind of core will be used in single-position docking, 1) user-capped core, 2) minimally capped core. ",t:"vcsrunsingledocking"},"3436":{i:0.000141529169833122,u:"../maestro_command_reference/vcsrunsingleselection.html",a:"vcsrunsingleselection Runs a single position selection job for CombiGlide.  Syntax: vcsrunsingleselection cmdargs= \u003ctext\u003e  Options: cmdargs The arguments for the reagent selection command. ",t:"vcsrunsingleselection"},"3437":{i:0.000141529169833122,u:"../maestro_command_reference/vcssaveresults.html",a:"vcssaveresults Saves the current filter and selection settings, and all associated results.  Syntax: vcssaveresults [\u003cname\u003e ]\n Operands: \u003cname\u003e  The name of the results file. ",t:"vcssaveresults"},"3438":{i:0.000141529169833122,u:"../maestro_command_reference/vcsselectalltablerows.html",a:"vcsselectalltablerows Selects all rows in the first table in the step.  Syntax: vcsselectalltablerows",t:"vcsselectalltablerows"},"3439":{i:0.000141529169833122,u:"../maestro_command_reference/vcsselectextendtablerow.html",a:"vcsselectextendtablerow Extends the selection to this row in the table.  Syntax: vcsselectextendtablerow [\u003crow\u003e ]\n Operands: \u003crow\u003e  The row number to extend the select to. ",t:"vcsselectextendtablerow"},"3440":{i:0.000141529169833122,u:"../maestro_command_reference/vcsselectonlytablerow.html",a:"vcsselectonlytablerow Selects only this row in the table.  Syntax: vcsselectonlytablerow [\u003crow\u003e ]\n Operands: \u003crow\u003e  The row number to select only in the table row. ",t:"vcsselectonlytablerow"},"3441":{i:0.000141529169833122,u:"../maestro_command_reference/vcsselecttablerow.html",a:"vcsselecttablerow Selects the given row in the first table in the step.  Syntax: vcsselecttablerow [\u003crow\u003e ]\n Operands: \u003crow\u003e  The row number to select in the table. ",t:"vcsselecttablerow"},"3442":{i:0.000141529169833122,u:"../maestro_command_reference/vcssetattachmentfile.html",a:"vcssetattachmentfile Sets the reagent file for the given attachment.  Syntax: vcssetattachmentfile file= \u003ctext\u003e [\u003cattachment name\u003e ]\n Options: file The file name of the reagent file to add to the given attachment. ",t:"vcssetattachmentfile"},"3443":{i:0.000141529169833122,u:"../maestro_command_reference/vcssetmolecule.html",a:"vcssetmolecule Sets the core molecule for the current CombiGlide run to the molecule containing the given atom.  Syntax: vcssetmolecule title= \u003ctext\u003e [\u003catom number\u003e ]\n Options: title This option sets the title for the core molecule. ",t:"vcssetmolecule"},"3444":{i:0.000141529169833122,u:"../maestro_command_reference/vcssetreagentfile.html",a:"vcssetreagentfile Sets the reagent file for the selected rows.  Syntax: vcssetreagentfile [\u003creagent name\u003e ]\n Operands: \u003creagent name\u003e  The name of the reagent file. ",t:"vcssetreagentfile"},"3445":{i:0.000141529169833122,u:"../maestro_command_reference/vcssingleexportdockingfile.html",a:"vcssingleexportdockingfile Exports the single-position docking results from CombiGlide to the given file.  Syntax: vcssingleexportdockingfile [\u003cfile name\u003e ]\n Operands: \u003cfile name\u003e  The file name. ",t:"vcssingleexportdockingfile"},"3446":{i:0.000141529169833122,u:"../maestro_command_reference/vcssingleexportdockingproject.html",a:"vcssingleexportdockingproject Exports the single-position docking results from CombiGlide.  Syntax: vcssingleexportdockingproject",t:"vcssingleexportdockingproject"},"3447":{i:0.000141529169833122,u:"../maestro_command_reference/vcssingleexportoptions.html",a:"vcssingleexportoptions Holds the options for exporting single-position docking results from CombiGlide.  Syntax: vcssingleexportoptions includereceptor= yes | no numreagents= \u003cn\u003e  Options: includereceptor Indicates whether or not to include the receptor in the exported results ",t:"vcssingleexportoptions"},"3448":{i:0.000141529169833122,u:"../maestro_command_reference/vcssorttable.html",a:"vcssorttable Resort the given CombiGlide table based on the data in the specified column  Syntax: vcssorttable table= \u003cn\u003e [\u003ccolumn_name\u003e ]\n Options: table The table to set. ",t:"vcssorttable"},"3449":{i:0.000141529169833122,u:"../maestro_command_reference/vcsstepforward.html",a:"vcsstepforward Moves forward to the next VCS step. Deletes any steps after the current step, then creates the next step, using the data from previous steps.  Syntax: vcsstepforward",t:"vcsstepforward"},"3450":{i:0.000141529169833122,u:"../maestro_command_reference/vcsstepgoto.html",a:"vcsstepgoto Moves to an existing step in the current project.  Syntax: vcsstepgoto [\u003cstep name\u003e ]\n Operands: \u003cstep name\u003e  The name of the step to switch to. ",t:"vcsstepgoto"},"3451":{i:0.000141529169833122,u:"../maestro_command_reference/vcsundisplayreceptor.html",a:"vcsundisplayreceptor This function undisplays the receptor for the current CombiGlide run in the Workspace.  Syntax: vcsundisplayreceptor",t:"vcsundisplayreceptor"},"3452":{i:0.000141529169833122,u:"../maestro_command_reference/vcsunselecttablerow.html",a:"vcsunselecttablerow Unselects the given row in the first table in the step.  Syntax: vcsunselecttablerow [\u003crow\u003e ]\n Operands: \u003crow\u003e  The row number to unselect in the table. ",t:"vcsunselecttablerow"},"3453":{i:0.000141529169833122,u:"../maestro_command_reference/vcswritecombinationdocking.html",a:"vcswritecombinationdocking Writes a both single-position and combinatorial docking job input file for CombiGlide.  Syntax: vcswritecombinationdocking",t:"vcswritecombinationdocking"},"3454":{i:0.000141529169833122,u:"../maestro_command_reference/vcswritecombinatorialdocking.html",a:"vcswritecombinatorialdocking Writes a combinatorial docking job input file for CombiGlide.  Syntax: vcswritecombinatorialdocking",t:"vcswritecombinatorialdocking"},"3455":{i:0.000141529169833122,u:"../maestro_command_reference/vcswriteenumerateddocking.html",a:"vcswriteenumerateddocking Writes an enumerated docking job input file in the Dock Library step of CombiGlide.  Syntax: vcswriteenumerateddocking",t:"vcswriteenumerateddocking"},"3456":{i:0.000141529169833122,u:"../maestro_command_reference/vcswritesingledocking.html",a:"vcswritesingledocking Writes a single position docking job input file for CombiGlide.  Syntax: vcswritesingledocking",t:"vcswritesingledocking"},"3457":{i:0.000141529169833122,u:"../maestro_command_reference/viewcrystalmates.html",a:"Set the options for removing and adding crystal mates in Workspace  Syntax: viewcrystalmates groupradius= \u003cx\u003e renamechains= yes | no viewallcrystalmates= yes | no viewcrystalmateswithin= \u003cx\u003e viewmates= yes | no  Options: groupradius Controls the group radius used in the crystal mates calculation. ...",t:"viewcrystalmates"},"3458":{i:0.000141529169833122,u:"../maestro_command_reference/viewdelete.html",a:"viewdelete Deletes transform data and view data corresponding to the given view name.  Syntax: viewdelete [\u003cview_name\u003e ]\n Operands: \u003cview_name\u003e  A valid view name existing in the current views table. ",t:"viewdelete"},"3459":{i:0.000141529169833122,u:"../maestro_command_reference/viewdeleteselected.html",a:"viewdeleteselected Delete selected views in the current views table.  Syntax: viewdeleteselected",t:"viewdeleteselected"},"3460":{i:0.000141529169833122,u:"../maestro_command_reference/viewdragselection.html",a:"viewdragselection Move the current view selection to the specified table row.  Syntax: viewdragselection [\u003crow\u003e ]\n Operands: \u003crow\u003e  A valid destination row number in the views table. ",t:"viewdragselection"},"3461":{i:0.000141529169833122,u:"../maestro_command_reference/viewexport.html",a:"viewexport Exports views from the current views table to given file. If non of the views are selected then exports all the views, else exports only selected views.  Syntax: viewexport [\u003cfile\u003e ]\n Operands: \u003cfile\u003e  The views file name to export. ",t:"viewexport"},"3462":{i:0.000141529169833122,u:"../maestro_command_reference/viewextendselect.html",a:"Extend current view selection to encompass the specified view in the table.  Syntax: viewextendselect [\u003cview_name\u003e ]\n Operands: \u003cview_name\u003e  A valid view name existing in the current views table. A range selection will be done for the views between the currently selected view and the specified view ...",t:"viewextendselect"},"3463":{i:0.000141529169833122,u:"../maestro_command_reference/viewextendselectrow.html",a:"Extend current view selection to encompass the specified view table row.  Syntax: viewextendselectrow [\u003crow\u003e ]\n Operands: \u003crow\u003e  A row number between 1 and the total number of rows in the views table. A range selection will be done for the views between currently selected view rows and the specified ...",t:"viewextendselectrow"},"3464":{i:0.000141529169833122,u:"../maestro_command_reference/viewimport.html",a:"viewimport Imports views from the given file.  Syntax: viewimport [\u003cfile\u003e ]\n Operands: \u003cfile\u003e  The views file name to import. ",t:"viewimport"},"3465":{i:0.000141529169833122,u:"../maestro_command_reference/viewjobresult.html",a:"viewjobresult Specifies a job to to be viewed in project table or entry list. Here, viewing also means including and/or selecting incorporated entries.  Syntax: viewjobresult [\u003cjob_id\u003e ]\n Operands: \u003cjob_id\u003e  The ID of the job which is to be viewed. ",t:"viewjobresult"},"3466":{i:0.000141529169833122,u:"../maestro_command_reference/viewmatrix.html",a:"Sets workspace rotation matrix to the matrix supplied When \u0027inverse\u0027 is supplied, it sets the inverse roation matrix and when \u0027nocenter\u0027, no center rotation matrix. And in the absence of both the keywords, it sets the rotation matrix. The transpose of this matrix is used in a call to glMultMatrixd ...",t:"viewmatrix"},"3467":{i:0.000141529169833122,u:"../maestro_command_reference/viewplayergotofirst.html",a:"viewplayergotofirst Goto the first view in the current views table, for which play state is set.  Syntax: viewplayergotofirst",t:"viewplayergotofirst"},"3468":{i:0.000141529169833122,u:"../maestro_command_reference/viewplayergotolast.html",a:"viewplayergotolast Goto the last view in the current views table, for which play state is set.  Syntax: viewplayergotolast",t:"viewplayergotolast"},"3469":{i:0.000141529169833122,u:"../maestro_command_reference/viewplayerplaybackward.html",a:"viewplayerplaybackward Start playing views backward from the recently restored view in the ordered sequence of play toggled on views in the current views table.  Syntax: viewplayerplaybackward",t:"viewplayerplaybackward"},"3470":{i:0.000141529169833122,u:"../maestro_command_reference/viewplayerplayforward.html",a:"viewplayerplayforward Start playing views forward from the recently restored view in the ordered sequence of play toggled on views in the current views table.  Syntax: viewplayerplayforward",t:"viewplayerplayforward"},"3471":{i:0.000141529169833122,u:"../maestro_command_reference/viewplayersettings.html",a:"Set viewplayer state variables.  Syntax: viewplayersettings playmode= reverse | once  Options: playmode This option sets the mode for continuous play. Valid values are \"loop\", \"reverse\", or \"once\". These cause play to continue, change direction, or stop, respectively, when reaching either end of the ...",t:"viewplayersettings"},"3472":{i:0.000141529169833122,u:"../maestro_command_reference/viewplayerstepahead.html",a:"viewplayerstepahead Goto the next view in the ordered sequence of play toggled on view in the current views table.  Syntax: viewplayerstepahead",t:"viewplayerstepahead"},"3473":{i:0.000141529169833122,u:"../maestro_command_reference/viewplayerstepback.html",a:"viewplayerstepback Goto the previous view in the ordered sequence of play toggled on views in the current views table.  Syntax: viewplayerstepback",t:"viewplayerstepback"},"3474":{i:0.000141529169833122,u:"../maestro_command_reference/viewplayerstop.html",a:"viewplayerstop Stop playing views/saving views movie.  Syntax: viewplayerstop",t:"viewplayerstop"},"3475":{i:0.000141529169833121,u:"../maestro_command_reference/viewrecordmovie.html",a:"viewrecordmovie Save a movie with views for which Play is set.  Syntax: viewrecordmovie [\u003cfile\u003e ]\n Operands: \u003cfile\u003e  The file where the views movie will be saved. ",t:"viewrecordmovie"},"3476":{i:0.000141529169833122,u:"../maestro_command_reference/viewrename.html",a:"viewrename Renames the given view name.  Syntax: viewrename [\u003ccurr_name\u003e \u003cnew_name\u003e ]\n Operands: \u003ccurr_name\u003e \u003cnew_name\u003e  A valid view name existing in the current views table. A valid new view name. ",t:"viewrename"},"3477":{i:0.000141529169833112,u:"../maestro_command_reference/viewreset.html",a:"viewreset Resets the viewing transform to original.  Syntax: viewreset",t:"viewreset"},"3478":{i:0.00014152916983311,u:"../maestro_command_reference/viewresetnofit.html",a:"viewresetnofit Resets the viewing transform to original but not fit to window.  Syntax: viewresetnofit",t:"viewresetnofit"},});