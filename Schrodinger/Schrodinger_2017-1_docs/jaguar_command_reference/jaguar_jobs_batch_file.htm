<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="Documentation.xml" data-mc-path-to-help-system="../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Command References|Jaguar Command Reference|Running Jaguar Jobs|Running Multiple Jaguar Jobs with Batch Scripts">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <link href="../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" /><title>Jaguar Batch Input File Format</title>
        <link href="../Resources/TableStyles/StandardRules.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../Resources/Stylesheets/docs.css" rel="stylesheet" />
        <script src="../Resources/Scripts/custom.modernizr.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/require.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/require.config.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/foundation.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/plugins.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body><a name="aanchor3109"></a>
        <MadCap:concept term="Command Reference" /><a name="aanchor3110"></a>
        <MadCap:concept term="Jaguar" /><a name="jaguar_jobs_665538408_132584"></a>
        <table class="NavLink" data-mc-conditions="Default.ScreenOnly">
            <tr class="NavLink">
                <td class="NavLeft"><span class="NavText">◀ <a class="NavLink MCXref xref xrefNavLink" href="jaguar_jobs_batch.htm">Running Multiple Jaguar Jobs with Batch Scripts</a></span>
                </td>
                <td class="NavCenter"><span class="NavText"><a class="NavLink MCXref xref xrefNavLink" href="jaguar_command_referenceTOC.htm">Jaguar Command Reference Manual</a></span>
                </td>
                <td class="NavRight"><span class="NavText"><a class="NavLink MCXref xref xrefNavLink" href="jaguar_jobs_batch_running.htm">Running Jaguar Batch Jobs</a> ▶</span>
                </td>
            </tr>
        </table>
        <h1 class="Title">Jaguar Batch Input File Format</h1>
        <p>Batch input files can include directives, job specifications, UNIX commands, and comments. Lines that contain comments must begin with a <code>#</code> symbol, and lines that contain Unix commands must begin with a <code>%</code> symbol. Blank lines can also be used in the batch script, and are ignored. </p>
        <p>The available directives are summarized in <a class="Table_Number MCXref xref xrefTable_Number selected" href="#jaguar_jobs_665538408_148063">Table 1</a>. The directives apply to <i>all</i> jobs described below them, unless a later line of the same type replaces them. Any , <code>OUTDIR</code>, <code>TEMP</code>, <code>EXEC</code>, or <code>FLAGS</code> directive replaces any earlier setting made by the same directive, and any of these settings can be reset to their default values with the value <code>NONE</code> (for instance, <code>FLAGS=NONE</code>). An <code>OPTIONS&#160;=</code> directive clears all previously set options and creates a new options list. An <code>OPTIONS&#160;+</code> directive adds new options to the options list or redefines options already in the options list.The syntax for the options set by <code>OPTIONS</code> directives is described later and summarized in <a class="Table_Number MCXref xref xrefTable_Number selected" href="#jaguar_jobs_665538408_172600">Table 2</a>. </p>
        <table class="TableStyle-StandardRules" style="caption-side: top;mc-table-style: url('../Resources/TableStyles/StandardRules.css');" cellspacing="0">
            <caption valign="top" style="padding-bottom: 7pt;">
                <p class="Table_Caption" data-mc-autonum="Table 1. "><span class="autonumber"><span>Table 1. </span></span><a name="jaguar_jobs_665538408_148063"></a>Batch input file directives</p>
            </caption>
            <thead>
                <tr class="TableStyle-StandardRules-Head-Header1">
                    <td class="TableStyle-StandardRules-HeadE-Column1-Header1">
                        <p class="Cell_Heading">Directive</p>
                    </td>
                    <td class="TableStyle-StandardRules-HeadD-Column1-Header1">
                        <p class="Cell_Heading">Action</p>
                    </td>
                </tr>
            </thead>
            <tbody>
                <tr class="TableStyle-StandardRules-Body-Body1">
                    <td class="TableStyle-StandardRules-BodyH-Column1-Body1">
                        <p class="Cell_Body"><code>OUTDIR = </code><i class="UserReplace">directory</i>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyG-Column1-Body1">
                        <p class="Cell_Body">Set the directory to which output from jobs will be written. The default is the job submission directory. This directory is created automatically if it does not exist.</p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body1">
                    <td class="TableStyle-StandardRules-BodyE-Column1-Body1">
                        <p class="Cell_Body"><code>SCRATCH = </code><i class="UserReplace">directory</i>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyD-Column1-Body1">
                        <p class="Cell_Body">Set the scratch directory. Equivalent to specifying the <code>JAGUAR_SCRATCH</code> environment variable.</p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body2">
                    <td class="TableStyle-StandardRules-BodyH-Column1-Body2">
                        <p class="Cell_Body"><code>TMPDIR = </code><i class="UserReplace">directory</i>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyG-Column1-Body2">
                        <p class="Cell_Body">Set the scratch directory root. Equivalent of <code>tmpdir</code> setting in <code>schrodinger.hosts</code>.</p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body2">
                    <td class="TableStyle-StandardRules-BodyE-Column1-Body2">
                        <p class="Cell_Body"><code>WORKDIR </code><i class="UserReplace">directory</i><code> [</code><i class="UserReplace">files</i><code>]</code>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyD-Column1-Body2">
                        <p class="Cell_Body">Create the specified directory and use it as the working directory for input and output. Copy the specified files into the directory. The default is the job submission directory.</p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body1">
                    <td class="TableStyle-StandardRules-BodyH-Column1-Body1">
                        <p class="Cell_Body"><code>FLAGS = </code><i class="UserReplace">options</i>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyG-Column1-Body1">
                        <p class="Cell_Body">Specify <code>jaguar run</code> command line options</p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body1">
                    <td class="TableStyle-StandardRules-BodyE-Column1-Body1">
                        <p class="Cell_Body"><code>OPTIONS {=|+} </code><i class="UserReplace">options</i>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyD-Column1-Body1">
                        <p class="Cell_Body">Set options to apply to subsequent jobs. Options can be specified over multiple lines by using <code>=</code> on the first line and <code>+</code> on subsequent lines. Options are listed in <a class="Table_Number MCXref xref xrefTable_Number selected" href="#jaguar_jobs_665538408_172600">Table 2</a>.</p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body2">
                    <td class="TableStyle-StandardRules-BodyH-Column1-Body2">
                        <p class="Cell_Body"><code>OUTFILES {=|+} </code><i class="UserReplace">files</i>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyG-Column1-Body2">
                        <p class="Cell_Body">Copy the specified files from <code>WORKDIR</code> to <code>OUTDIR</code> at the end of the job. The file list can be spread over multiple lines by using <code>=</code> on the first line and <code>+</code> on subsequent lines. If set to <code>_ALL_</code>, then output files from all subjobs are copied; if set to <code>_LAST_</code>, only the output files from the last subjob are copied. The default is <code>_ALL_</code>. The files that are copied become the output files of the batch job. </p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body2">
                    <td class="TableStyle-StandardRules-BodyE-Column1-Body2">
                        <p class="Cell_Body"><code>STRUCTOUT = </code><i class="UserReplace">file</i>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyD-Column1-Body2">
                        <p class="Cell_Body">Specify the structure output (Maestro) file of the batch job. This is a file in <code>WORKDIR</code> that is copied to <code>OUTDIR</code> at the end of the job, and that will be monitored and incorporated by Maestro.</p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body1">
                    <td class="TableStyle-StandardRules-BodyH-Column1-Body1">
                        <p class="Cell_Body"><code>IGNORE_ERRORS</code>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyG-Column1-Body1">
                        <p class="Cell_Body">Continue to the next job if a job step fails. The default is to stop execution of the batch script and exit.</p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body1">
                    <td class="TableStyle-StandardRules-BodyE-Column1-Body1">
                        <p class="Cell_Body"><code>PURGE_JOBDB</code>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyD-Column1-Body1">
                        <p class="Cell_Body">Purge the job record for each job after it finishes. </p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body2">
                    <td class="TableStyle-StandardRules-BodyB-Column1-Body2">
                        <p class="Cell_Body"><code>EXIT</code>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyA-Column1-Body2">
                        <p class="Cell_Body">Exit from the batch script.</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <p>The syntax for job specifications is as follows: </p>
        <p><i>template-name</i><code> [</code><i class="UserReplace">new-name</i><code> [</code><i class="UserReplace">options</i><code>]]</code>
        </p>
        <p>Each job specification defines a single Jaguar job. For each job, the following steps are taken:</p>
        <table class="AutoNumber_p_Numbered1" style="width: 100%; margin-left: 0;" cellspacing="0" cellpadding="0">
            <col style="width: 0px;" />
            <col style="width: 32px;" />
            <col style="width: auto;" />
            <tr>
                <td valign="top" />
                <td class="AutoNumber_p_Numbered1" valign="top"><span>1.</span>
                </td>
                <td class="AutoNumber_p_Numbered1" valign="top" data-mc-autonum="1.">The template file <i>template-name</i><code>.in</code> is read.</td>
            </tr>
        </table>
        <p class="Indented1">This file is read from the current working directory.</p>
        <table class="AutoNumber_p_Numbered1_" style="width: 100%; margin-left: 0;" cellspacing="0" cellpadding="0">
            <col style="width: 0px;" />
            <col style="width: 32px;" />
            <col style="width: auto;" />
            <tr>
                <td valign="top" />
                <td class="AutoNumber_p_Numbered1" valign="top"><span>2.</span>
                </td>
                <td class="AutoNumber_p_Numbered1" valign="top" data-mc-autonum="2.">Any options that are defined are applied to the contents of the template file.</td>
            </tr>
        </table>
        <p class="Indented1">Options that are given on the job specification line override options that are specified with an <code>OPTIONS</code> directive. Option syntax is given below.</p>
        <table class="AutoNumber_p_Numbered1_" style="width: 100%; margin-left: 0;" cellspacing="0" cellpadding="0">
            <col style="width: 0px;" />
            <col style="width: 32px;" />
            <col style="width: auto;" />
            <tr>
                <td valign="top" />
                <td class="AutoNumber_p_Numbered1" valign="top"><span>3.</span>
                </td>
                <td class="AutoNumber_p_Numbered1" valign="top" data-mc-autonum="3.">A new input file, <i>new-name</i><code>.in</code> is created.</td>
            </tr>
        </table>
        <p class="Indented1">The new file is written to the directory specified by a <code>WORKDIR</code> directive or, if no <code>WORKDIR</code> directive has been given, to the current working directory. If <i>new-name</i> is not specified, <i>new-name</i> is set to <i>template-name</i>. If the file <i>new-name</i><code>.in</code> already exists, it is overwritten, unless you use the <code>-r</code> option described later in this section.</p>
        <table class="AutoNumber_p_Numbered1_" style="width: 100%; margin-left: 0;" cellspacing="0" cellpadding="0">
            <col style="width: 0px;" />
            <col style="width: 32px;" />
            <col style="width: auto;" />
            <tr>
                <td valign="top" />
                <td class="AutoNumber_p_Numbered1" valign="top"><span>4.</span>
                </td>
                <td class="AutoNumber_p_Numbered1" valign="top" data-mc-autonum="4.">The Jaguar job is run using <code>jaguar</code> <code>run</code> with this new file as input.</td>
            </tr>
        </table>
        <p class="Indented1">The command line options for the Jaguar job are specified by the <code>FLAGS</code> directive. Temporary files generated during the job are written to the subdirectory <i>new-name</i> in the scratch directory, and output files are written to the directory listed on the <code>OUTDIR</code> line, if given, or from the current working directory.</p>
        <p>The template job name can either be the stem of an existing input file or the string <code>$JOB</code>. If the string <code>$JOB</code> is used, the batch script is run multiple times, substituting for <code>$JOB</code> the job names that are provided as arguments to the <code>jaguar</code> <code>run</code> command. For example, for the job specification</p><pre>
h2o    h2o_dft   dftname=b3lyp
</pre>
        <p>the file <code>h2o.in</code> is read, the keyword setting <code>dftname=b3lyp</code> is added to the <span class="Keyword">gen</span> section of the input, and the new input is written to the file <code>h2o_dft.in</code>. The same effect is achieved with the job specification </p><pre>
$JOB   $JOB_dft   dftname=b3lyp
</pre>
        <p>and running <code>jaguar</code> <code>run</code> with the file name <code>h2o.in</code> as an argument. </p>
        <p>If no options are specified, the Jaguar job is run using the template file as input. For example, if you had a set of input files <i>jobname1</i><code>.in</code>, <i>jobname2</i><code>.in</code>, <i>jobname3</i><code>.in</code>, you could use the following batch input file to run Jaguar for each input file in order:</p>
        <p class="Indented1"><i>jobname1<br />jobname2<br />jobname3</i>
        </p>
        <p>Options for each Jaguar job can be set in preceding <code>OPTIONS</code> directives or by an options list appearing in the job specification. An options list appearing in the job specification applies only to that job. Options specified in an <code>OPTIONS</code> directive apply to all subsequent jobs, unless superseded by a later <code>OPTIONS&#160;=</code> directive or by the options list for the job. </p>
        <p>These job options can specify any of the following items for the relevant jobs:</p>
        <ul>
            <li value="1">
                <p class="ListPara">Keyword settings in the <span class="Keyword">gen</span> section of the Jaguar input file</p>
            </li>
            <li value="2">
                <p class="ListPara">Paths and names of data files, such as the basis set file or the grid file</p>
            </li>
            <li value="3">
                <p class="ListPara">Sections to remove from the template input file: for example, the <span class="Keyword">guess</span> section if you are changing basis sets</p>
            </li>
            <li value="4">
                <p class="ListPara">Substitution of a specified number or string for one already in the template input file</p>
            </li>
        </ul>
        <p>The format for each of these options and an example of each kind are shown in <a class="Table_Number MCXref xref xrefTable_Number selected" href="#jaguar_jobs_665538408_172600">Table 2</a>. Option assignments must not have spaces around the <code>=</code> or <code>==</code> operators. Host names cannot be included in any of the paths described in the table. You should avoid using any of the characters <code>"$!\&lt;&gt;?</code> in a substitution pattern.</p>
        <p>These options and the other line types in a batch input file are illustrated in the sample files in the next topic. Directions on how to submit a batch job follow in the final subsection.</p>
        <table class="TableStyle-StandardRules" style="caption-side: top;mc-table-style: url('../Resources/TableStyles/StandardRules.css');" cellspacing="0">
            <caption valign="top" style="padding-bottom: 7pt;">
                <p class="Table_Caption" data-mc-autonum="Table 2. "><span class="autonumber"><span>Table 2. </span></span><a name="jaguar_jobs_665538408_172600"></a>Definition of options that are applied to a template file to generate an input file</p>
            </caption>
            <thead>
                <tr class="TableStyle-StandardRules-Head-Header1">
                    <td class="TableStyle-StandardRules-HeadE-Column1-Header1">
                        <p class="Cell_Heading">Change</p>
                    </td>
                    <td class="TableStyle-StandardRules-HeadE-Column1-Header1">
                        <p class="Cell_Heading">Format</p>
                    </td>
                    <td class="TableStyle-StandardRules-HeadD-Column1-Header1">
                        <p class="Cell_Heading">Examples</p>
                    </td>
                </tr>
            </thead>
            <tbody>
                <tr class="TableStyle-StandardRules-Body-Body1">
                    <td class="TableStyle-StandardRules-BodyH-Column1-Body1">
                        <p class="Cell_Body">set keywords</p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyH-Column1-Body1">
                        <p class="Cell_Body"><i>keyword</i>=<i>new-value,</i> or <i>keyword</i>=NONE to remove a setting</p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyG-Column1-Body1">
                        <p class="Cell_Body"><code>basis=lav3p**</code>
                        </p>
                        <p class="Cell_Body"><code>dftname=b3lyp</code>
                        </p>
                        <p class="Cell_Body"><code>igeopt=NONE</code>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body1">
                    <td class="TableStyle-StandardRules-BodyE-Column1-Body1">
                        <p class="Cell_Body">specify a data file path and name</p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyE-Column1-Body1">
                        <p class="Cell_Body"><i>filetype</i>=<i>name</i>, or <i>filetype</i>=NONE to return to default choice for that file type</p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyD-Column1-Body1">
                        <p class="Cell_Body"><code>BASISFILE=my.bas</code>
                        </p>
                        <p class="Cell_Body"><code>ATOMIGFILE=NONE</code>
                        </p>
                        <p class="Cell_Body"><code>DAFFILE=NONE</code>
                        </p>
                        <p class="Cell_Body"><code>GRIDFILE=NONE</code>
                        </p>
                        <p class="Cell_Body"><code>CUTOFFFILE=NONE</code>
                        </p>
                        <p class="Cell_Body"><code>GPTSFILE=NONE</code>
                        </p>
                        <p class="Cell_Body"><code>WAVEFNFILE=NONE</code>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body2">
                    <td class="TableStyle-StandardRules-BodyH-Column1-Body2">
                        <p class="Cell_Body">remove a section</p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyH-Column1-Body2">
                        <p class="Cell_Body"><code>RMSECTION=</code><i class="UserReplace">section-name</i>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyG-Column1-Body2">
                        <p class="Cell_Body"><code>RMSECTION=guess</code>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body2">
                    <td class="TableStyle-StandardRules-BodyE-Column1-Body2">
                        <p class="Cell_Body">clear the <span class="Keyword">gen</span> section except for the <span class="Keyword">multip</span> and <span class="Keyword">molchg </span>settings</p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyE-Column1-Body2">
                        <p class="Cell_Body"><code>RESETGEN</code>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyD-Column1-Body2">
                        <p class="Cell_Body">&#160;</p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body1">
                    <td class="TableStyle-StandardRules-BodyH-Column1-Body1">
                        <p class="Cell_Body">insert a file<a class="Table_Footnote MCXref xref xrefTable_Footnote selected" href="#jaguar_jobs_665538408_172672">Filename must not end in .in, as this is taken as a Jaguar input file.</a> at the top of the input </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyH-Column1-Body1">
                        <p class="Cell_Body"><code>ADDTOP=</code><i class="UserReplace">filename</i>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyG-Column1-Body1">
                        <p class="Cell_Body"><code>ADDTOP=guess.txt</code>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body1">
                    <td class="TableStyle-StandardRules-BodyE-Column1-Body1">
                        <p class="Cell_Body">append a file<a class="Table_Footnote MCXref xref xrefTable_Footnote selected" href="#jaguar_jobs_665538408_172672">Filename must not end in .in, as this is taken as a Jaguar input file.</a> to the input</p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyE-Column1-Body1">
                        <p class="Cell_Body"><code>ADDEND=</code><i class="UserReplace">filename</i>
                        </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyD-Column1-Body1">
                        <p class="Cell_Body"><code>ADDEND=guess.txt</code>
                        </p>
                    </td>
                </tr>
                <tr class="TableStyle-StandardRules-Body-Body2">
                    <td class="TableStyle-StandardRules-BodyB-Column1-Body2">
                        <p class="Cell_Body">substitute a value for a variable </p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyB-Column1-Body2">
                        <p class="Cell_Body"><i>old-pattern</i>==<i>new-pattern</i>. <br />Do not use any of the characters <code>"*$!\&lt;&gt;?</code> in either pattern</p>
                    </td>
                    <td class="TableStyle-StandardRules-BodyA-Column1-Body2">
                        <p class="Cell_Body"><code>bond==1.5</code>
                        </p>
                        <p class="Cell_Body"><code>torang==170.0</code>
                        </p>
                    </td>
                </tr>
            </tbody>
            <tfoot>
                <p class="TableFooter" data-mc-autonum="&lt;sup&gt;a&lt;/sup&gt;"><span class="autonumber"><span><sup>a</sup></span></span><a name="jaguar_jobs_665538408_172672"></a>Filename must not end in <code>.in</code>, as this is taken as a Jaguar input file.</p>
            </tfoot>
        </table>
        <table class="NavLink" data-mc-conditions="Default.ScreenOnly">
            <tr class="NavLink">
                <td class="NavLeft"><span class="NavText">◀ <a class="NavLink MCXref xref xrefNavLink" href="jaguar_jobs_batch.htm">Running Multiple Jaguar Jobs with Batch Scripts</a></span>
                </td>
                <td class="NavCenter"><span class="NavText"><a class="NavLink MCXref xref xrefNavLink" href="jaguar_command_referenceTOC.htm">Jaguar Command Reference Manual</a></span>
                </td>
                <td class="NavRight"><span class="NavText"><a class="NavLink MCXref xref xrefNavLink" href="jaguar_jobs_batch_running.htm">Running Jaguar Batch Jobs</a> ▶</span>
                </td>
            </tr>
        </table>
    </body>
</html>