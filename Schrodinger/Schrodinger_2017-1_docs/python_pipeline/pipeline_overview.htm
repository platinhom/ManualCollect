<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="Documentation.xml" data-mc-path-to-help-system="../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Command References|Python Pipeline Command Reference">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <link href="../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" /><title>Overview of the Python Pipeline</title>
        <link href="../Resources/Stylesheets/docs.css" rel="stylesheet" />
        <script src="../Resources/Scripts/custom.modernizr.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/require.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/require.config.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/foundation.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/plugins.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body><a name="aanchor7423"></a>
        <MadCap:concept term="Command Reference" /><a name="pipeline_overview_2997741979_741933"></a>
        <table class="NavLink" data-mc-conditions="Default.ScreenOnly">
            <tr class="NavLink">
                <td class="NavLeft">
                &#160;
        </td>
                <td class="NavCenter"><span class="NavText"><a class="NavLink MCXref xref xrefNavLink" href="python_pipelineTOC.htm" xrefformat="{paratext}">Python Pipeline Command Reference Manual</a></span>
                </td>
                <td class="NavRight">
                &#160;
        </td>
            </tr>
        </table>
        <h1 class="Title">Overview of the Python Pipeline</h1>
        <p>The Python pipeline is a framework for running jobs that consist of multiple stages that can involve multiple products. This framework consists of a set of Python modules that perform various tasks and make use of the underlying libraries that are used by the products themselves as necessary. The framework for running the jobs includes capabilities for distributing the jobs and for restarting the jobs. </p>
        <p>The stages and the input for the stages, including communication between stages, are specified in the input file. This file is described in detail in <a class="TopicLink MCXref xref xrefTopicLink" href="pipeline_input_file.htm#pipeline_input_file_872746276_741933" xrefformat="{paratext}">The Python Pipeline Input File</a>. Information on running the jobs is given in <a class="TopicLink MCXref xref xrefTopicLink" href="pipeline_running.htm#pipeline_running_692562521_746353" xrefformat="{paratext}">Running the Python Pipeline</a>.</p>
        <p>The pipeline is used for running several workflows: the Virtual Screening Workflow (VSW), Quantum-Polarized Ligand Docking (QPLD), Prime Covalent Docking, and Phase database creation and management. These workflows can be run from Maestro. You can customize these workflows by writing out the input file (click <span class="GUI">Write</span> in the panel), editing the file, then running the job. You can also create your own workflows by assembling the stages that you want to use in the input file, and running the job.</p>
        <p>&#160;</p>
    </body>
</html>