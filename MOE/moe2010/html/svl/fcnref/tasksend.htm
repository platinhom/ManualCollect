<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<!--
!!    MOE 2010.10 On-Line Manuals
!!    COPYRIGHT (C) 2010
!!        CHEMICAL COMPUTING GROUP INC.  ALL RIGHTS RESERVED.
!!-->

<!--	tasksend.htm	Task communication
!!
!!	05-apr-2005 (ms) created
!!-->

<head>

<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<link rel="stylesheet" type="text/css"
href="../../manstyle.css" />


<meta keywords>
<meta functions task_send>
<meta functions task_receive>
<meta functions task_reply>

<title>SVL Task Communication Functions</title>
</head>

<body bgcolor="#ffffff">
<a href="../../index.htm"><img src="../../images/logo.gif"
alt="CCG Logo" align="right" width="174" height="55" border="0" /></a>
<h4>MOE 2010.10</h4>
<h2>SVL Task Communication Functions</h2>
<hr noshade="noshade" />

<h2>Syntax</h2>

<pre>
    rmsg = <a class="fcnlink" href="#task_send">task_send</a> [rtask, smsg, timeout]
    [stask, smsg] = <a class="fcnlink" href="#task_receive">task_receive</a> timeout
    <a class="fcnlink" href="#task_reply">task_reply</a> [stask, rmsg]
</pre>

<h2>Description</h2>

<p><a name="task_send"></a></p>
<p><hr noshade="noshade" /></p>

<pre>rmsg = <span class="fcndef">task_send</span> [rtask, smsg]
rmsg = <span class="fcndef">task_send</span> [rtask, smsg, timeout]
</pre>

<p>
Function <tt>task_send</tt> sends message <tt>smsg</tt>
to the receiving task <tt>rtask</tt>.
The calling task will block until the receiving task replies.
The function returns the value of the reply.

<ul>
<li>
The timer value is optional.  If the timeout is specified and expires
before the receiving task replies, the calling task will unblock
and the function will return&nbsp;<tt>[]</tt>.

<li>
If the receiving task is destroyed before it replies, the calling task
will unblock and the function will return&nbsp;<tt>[]</tt>.

<li>
If receiving task is already waiting for the calling task, both
tasks will be blocked, waiting for each other until a timeout expires
or one of them is destroyed.  If there is no timeout to unblock
the tasks, this condition is called a <i>deadlock</i>.
There is no protection against deadlock.

<li>
If <tt>rtask</tt> is&nbsp;-1, the receiving task and the calling task are
the same.  In this case, the task will unblock only if the timeout expires.
If the timeout is not specified, the task will be permanently blocked.  If
<tt>rtask</tt> is&nbsp;0, the function (immediately) returns&nbsp;<tt>[]</tt>.
If <tt>rtask</tt> refers to a nonexistent task, the function reports an error.
</ul>

<p><a name="task_receive"></a></p>
<p><hr noshade="noshade" /></p>

<pre>[stask, smsg] = <span class="fcndef">task_receive</span> []
[stask, smsg] = <span class="fcndef">task_receive</span> timeout
</pre>

<p>
Function <tt>task_receive</tt> returns a message sent to it by another
using function <tt>task_send</tt>.  The function returns the
sending task <tt>stask</tt> and the received message <tt>smsg</tt>.

<ul>
<li>
If the message has not yet been sent, the calling task will block
until the message is received.

<li>
If the message was sent and is waiting to be received, the calling
task will return immediately.

<li>
If there are several messages waiting to be received, only the
first (i.e. the oldest) message will be received.

<li>
The timer value is optional.  If the timeout specified and expires
before any message is received, the calling task will unblock
and the function will return&nbsp;<tt>[]</tt>.

<li>
Receiving a message with <tt>task_receive</tt> will <i>not</i>
unblock the sending task.
The sending task will unblock only when the calling task sends it
a reply with <tt>task_reply</tt>.

<li>
There is no protection against deadlock.

<li>
If <tt>stask</tt> is&nbsp;-1, the sending task and the calling task are the
same.  In this case, the task will unblock only if the timeout expires.  If
the timeout is not specified, the task will be permanently blocked.  If
<tt>stask</tt> is&nbsp;0, the function (immediately) returns&nbsp;<tt>[]</tt>.
If <tt>stask</tt> refers to a nonexistent task, the function reports an error.
</ul>

<p><a name="task_reply"></a></p>
<p><hr noshade="noshade" /></p>

<pre><span class="fcndef">task_reply</span> [stask, rmsg]
</pre>

<p>
Function <tt>task_reply</tt> assumes that a message has been
sent by the sending task <tt>stask</tt>, which is now awaiting
a reply.  The function delivers the reply message <tt>rmsg</tt>
to the sending task and unblocks the sending task.

<ul>
<li>
If <tt>stask</tt> refers to a nonexistent task,
the function simply discards the reply;
it does <i>not</i> report an error.

<li>
If the sending task exists but is not currently waiting for the reply,
the function also discards the reply.

</ul>

<h2>See Also</h2>

<table>
<tr>
<td valign=top>
<a class="svl" href="tskcall.html">task_call</a><br />
<a class="svl" href="tskcall.html">task_eval</a><br />
<a class="svl" href="tskcall.html">task_run</a><br />
<a class="svl" href="tskcall.html">task_script</a>
</table>


<p>
<a href="introcomm.htm">SVL Task Communication Functions</a>
</p>

<p><a href="../../index.htm">MOE Table of Contents</a>&nbsp;&nbsp;<a href="../../fcnindex.html">SVL Function Index</a></p>
<hr noshade="noshade" />
<a href="http://www.chemcomp.com"><img src="../../images/flogo.gif"
alt="CCG Logo"
align="left" width="30" height="30" border="1" hspace="5" vspace="3" /></a>
<font size="2">
<a href="../../legal.html">Copyright</a> &copy; 1997-2010
<a href="http://www.chemcomp.com">Chemical Computing Group Inc.</a><br />
<a href="mailto:info@chemcomp.com"><i>info@chemcomp.com</i></a>
</font>
</body>
</html>
