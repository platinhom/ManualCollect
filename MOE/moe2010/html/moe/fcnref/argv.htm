<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<!--
!!    MOE 2010.10 On-Line Manuals
!!    COPYRIGHT (C) 2010
!!        CHEMICAL COMPUTING GROUP INC.  ALL RIGHTS RESERVED.
!!-->

<!--
!!	argv.htm
!!
!!	11-aug-2009 (ms) created
!!-->

<head>

<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<link rel="stylesheet" type="text/css"
href="../../manstyle.css" />


<meta keywords>
<meta functions ArgvGet>
<meta functions ArgvPull>
<meta functions ArgvAll>
<meta functions ArgvReset>
<meta functions ArgvExpand>

<title>Command Line Processing Functions</title>
</head>

<body bgcolor="#ffffff">
<a href="../../index.htm"><img src="../../images/logo.gif"
alt="CCG Logo" align="right" width="174" height="55" border="0" /></a>
<h4>MOE 2010.10</h4>
<h2>Command Line Processing Functions</h2>
<hr noshade="noshade" />

<h2>Syntax</h2>

<pre>
    aval = <a class="fcnlink" href="#ArgvGet"
	>ArgvGet</a> [aname, acount]
    aval = <a class="fcnlink" href="#ArgvPull"
	>ArgvPull</a> [aname, acount]
    arglist = <a class="fcnlink" href="#ArgvAll"
	>ArgvAll</a> []

    <a class="fcnlink" href="#ArgvReset"
	>ArgvReset</a> arglist
    arglist = <a class="fcnlink" href="#ArgvExpand"
	>ArgvPull</a> arglist
</pre>

<h2>Description</h2>

<p>The <tt>ArgvXxx</tt> functions are designed for use by SVL batch scripts,
such as <tt>sdfilter</tt>, that collect their arguments from the OS
command line.

Functions <tt>ArgvGet</tt>, <tt>ArgvPull</tt> and <tt>ArgvAll</tt>
are meant to be used by batch scripts to examine and extract their
command line arguments.

Functions <tt>ArgvReset</tt> and <tt>ArgvExpand</tt> are meant to be
used only for testing of the batch scripts and their parameters.

<p>The command line parameters may contain a special parameter of form
<tt>@filename</tt>, where <tt>filename</tt> is the name of a readable
file that contains further command line parameters.

Each <tt>@filename</tt> parameter is automatically substituted with the
contents of the file <tt>filename</tt>.  The substitution is recursive,
i.e. if the file contains <tt>@filename</tt> parameters, they will be
further substituted.  The function detects and reports instances of
infinite recursion.  The file may contain comment lines that start
with the <tt>"#"</tt> character; the comment lines will be ignored.
For safety, the file size is limited to 5000 lines.

<p>Note: To specify <tt>"@abc"</tt> as the value of a parameter (that should
<i>not</i> be substituted), use <tt>"@@abc"</tt>.

<p><a name="ArgvGet"></a></p>
<p><a name="ArgvPull"></a></p>
<p><hr noshade="noshade" />

<pre>
aval = <span class="fcndef">ArgvGet</span> [aname, acount]
aval = <span class="fcndef">ArgvPull</span> [aname, acount]
</pre>

Functions <tt>ArgvGet</tt> and <tt>ArgvPull</tt> accept a list of
command line switches, <tt>aname</tt>,  together with the number of
parameters, <tt>acount</tt>, that follow each switch.

For each switch <tt>aname(i)</tt>, the functions will collect and
return the <tt>acount(i)</tt> parameters that follow <tt>aname(i)</tt>.
If the command line contains multiple instances of <tt>aname(i)</tt>,
the parameters of all instances are concatenated and returned in one
vector.

<p>
Function <tt>ArgvPull</tt> removes, as a side-effect, all switches
and parameters it found from the command line:  a second call with the
same parameters will return null vectors.  Function <tt>ArgGet</tt> has
no side-effects: a second call with the same parameters returns the same
result.

<p><a name="ArgvAll"></a></p>
<p><hr noshade="noshade" />

<pre>
arglist = <span class="fcndef">ArgvAll</span> []
</pre>

Function <tt>ArgvAll</tt> returns all currently available command line
arguments.  The purpose of the function is to return, after all
possible switches are collected by <tt>ArgvPull</tt>, all the remaining
arguments.

<p>
<b>Example:</b>
To collect <tt>"-o outfile"</tt> and <tt>"-q query"</tt> switches and use
the remaining arguments as input files:

<pre>
    [outfile, query] = ArgvPull [['-o', '-q'], [1,1]];
    infile = ArgvAll[];
</pre>

<p>
<b>Note:</b>
If there are multiple instances of the same switch, functions
<tt>ArgvGet</tt> and <tt>ArgvPull</tt> return,
in <tt>aval(i)</tt>, a flat vector of concatenated
parameters from all instances of the switch.
If the batch script needs to select one of multiple instances
present, the following formulas can be used:

<p>
Assume that in the list of the command line arguments (<tt>arglist</tt>)
there are multiple instances of switch <tt>aname(i)</tt>, each with
with <tt>acount(i)</tt> parameters, producing the result value,
<tt>aval(i)</tt>.  Assume:

<pre>    n_one = acount(i);
    n_all = length aval(i);</pre>

The last instance of the switch may have fewer parameters, if it
occurs at the end of the <tt>arglist</tt>.  The number of parameters
in the last instance is:

<pre>    n_last = n_one - mod [n_all, n_one];</pre>

To keep only the first occurrence of the switch:

<pre>    aval(i) = keep [aval(i), n_one];</pre>

To keep only the last occurrence of the switch (even if it is incomplete):

<pre>    aval(i) = keep [aval(i), -n_last];</pre>

To keep only the last complete occurrence of the switch or nothing,
if there is no complete occurrence:

<pre>    aval(i) = keep [drop [aval(i), -n_last], n_one];</pre>

To keep either the last complete occurrence of the switch or,
if there is only one occurrence, even an incomplete one:

<pre>    aval(i) = keep [keep [aval(i), -(n_one+n_last)], n_one];</pre>


<p>
<b>Note:</b>
Processing of special cases by <tt>ArgvGet</tt> and <tt>ArgvPull</tt>:
<ul>
<li>If <tt>aname(i)</tt> is not found, then <tt>aval(i)</tt>
    is set to <tt>[]</tt>.
<li>If <tt>aname(i)</tt> is followed by less than the specifed number of
    parameters (because it is near the end of the list), then the returned
    valued of <tt>aval(i)</tt> will contain only the parameters found.
<li>If <tt>aname(i)</tt> is found at a position of a parameter of some
    preceding <tt>aname(j)</tt>, then <tt>aname(i)</tt> is considered
    to be a parameter of <tt>aname(j)</tt> and <tt>aval(i)</tt> is set
    to <tt>[]</tt>.
<li>The list of names, <tt>aname</tt> must not contain duplicates.
</ul>

For example, if

<pre>
    svl&gt; ArgvAll[]
    ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h']
</pre>
    
then

<pre>
    svl&gt; ArgvGet [['b','c','g','x'], [3,3,3,3]]
    [['c','d','e'], [], 'h', []]
</pre>

<p><a name="ArgvReset"></a></p>
<p><a name="ArgvExpand"></a></p>
<p><hr noshade="noshade" />

<pre>
<span class="fcndef">ArgvReset</span> arglist
</pre>

<p>
Function <tt>ArgvReset</tt> is used for testing batch scripts.

It resets the list of the command line arguments to a
given value, without the need to restart MOE.

<pre>
arglist = <span class="fcndef">ArgvExpand</span> arglist
</pre>

<p>
Function <tt>ArgvExpand</tt> is used for
testing <tt>@filename</tt> parameters.

It expands and returns the given list of command line arguments by
replacing each occurrence of an <tt>@filename</tt> parameter with the
contents of that file.

<p>
<b>Example:</b>
To test the code from the example above
which collected
<tt>"-o outfile"</tt> and <tt>"-q query"</tt> switches and used
the remaining arguments as input files:

<pre>
    svl&gt; ArgvReset ['f1', '-q', 'que1', '-o', 'out1', 'f2', '-q', 'que2']

    svl&gt; ArgvAll[]
    ['f1', '-q', 'que1', '-o', 'out1', 'f2', '-q', 'que2']
    
    svl&gt; ArgvPull [['-o', '-q'], [1,1]]
    ['out1', ['que1', 'que2']]

    svl&gt; ArgvAll[];
    ['f1', 'f2']
</pre>


<p><a href="../../index.htm">MOE Table of Contents</a>&nbsp;&nbsp;<a href="../../fcnindex.html">SVL Function Index</a></p>
<hr noshade="noshade" />
<a href="http://www.chemcomp.com"><img src="../../images/flogo.gif"
alt="CCG Logo"
align="left" width="30" height="30" border="1" hspace="5" vspace="3" /></a>
<font size="2">
<a href="../../legal.html">Copyright</a> &copy; 1997-2010
<a href="http://www.chemcomp.com">Chemical Computing Group Inc.</a><br />
<a href="mailto:info@chemcomp.com"><i>info@chemcomp.com</i></a>
</font>
</body>
</html>
