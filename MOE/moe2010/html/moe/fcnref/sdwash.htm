<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<!--
!!    MOE 2010.10 On-Line Manuals
!!    COPYRIGHT (C) 2010
!!        CHEMICAL COMPUTING GROUP INC.  ALL RIGHTS RESERVED.
!!-->

<!--
!! 	sdwash.htm
!!
!!	22-may-2009 (al) added -rule to syntax
!!	29-apr-2008 (al) added -neutralize option
!!	22-apr-2008 (al) added -scale option
!!	14-apr-2008 (al) edits for clarification
!!   	11-sep-2007 (ac) updated
!!	06-jun-2006 (ac) created
!!-->

<head>
<link rel="stylesheet" type="text/css"
href="../../manstyle.css" />


<title>sdwash</title>
<meta functions sdwash>
</head>
<body bgcolor="#ffffff">
<a href="../../index.htm"><img src="../../images/logo.gif"
alt="CCG Logo" align="right" width="174" height="55" border="0" /></a>
<h4>MOE 2010.10</h4>
<h2>sdwash</h2>
<hr noshade="noshade" />

<h2>Syntax</h2>
<blockquote>
    <tt>$MOE/bin/sdwash</tt>
    <b>{</b> <i>option</i> | <i>inputfilename</i> | @<i>filename</i> <b>}</b>
    <br />
    <tt>$MOE/bin/moebatch -run $MOE/bin/sdwash</tt>
    <b>{</b> <i>option</i> | <i>inputfilename</i> | @<i>filename</i> <b>}</b>
    <br />
    <br />
    <tt>%MOE%\bin\sdwash</tt>
    <b>{</b> <i>option</i> | <i>inputfilename</i> | @<i>filename</i> <b>}</b>
    <br />
    <tt>%MOE%\bin-i4w9\moebatch -run $MOE\bin\sdwash</tt>
    <b>{</b> <i>option</i> | <i>inputfilename</i> | @<i>filename</i> <b>}</b>
    <p>
    <table>
    <tr>
    <td><i>option</i>
    <td>&nbsp;:&nbsp;
	  <td><tt>-o</tt> <i>outputfilename</i>

    <tr><td>&nbsp;<td>&nbsp;:&nbsp;
	<td><tt>-help</tt> | <tt>--help</tt>

    <tr><td>&nbsp;<td>&nbsp;:&nbsp;
	<td><tt>-verbose</tt> | <tt>-quiet</tt>

    <tr><td>&nbsp;<td>&nbsp;:&nbsp;
        <td><tt>-stripdata</tt>

    <tr><td>&nbsp;<td>&nbsp;:&nbsp;
        <td><tt>-keep</tt> <i>pattern</i>

    <tr><td>&nbsp;<td>&nbsp;:&nbsp;
        <td><tt>-drop</tt> <i>pattern</i>

    <tr><td>&nbsp;<td>&nbsp;:&nbsp;
        <td><tt>-setname</tt> <i>fieldname</i>

    <tr><td>&nbsp;<td>&nbsp;:&nbsp;
        <td><tt>-seqno</tt> <i>fieldname</i>

    <tr><td>&nbsp;<td>&nbsp;:&nbsp;
        <td><tt>-savesmi</tt> <i>fieldname</i>

    <tr><td>&nbsp;<td>&nbsp;:&nbsp;
        <td><tt>-strict</tt>

    <tr><td>&nbsp;<td>&nbsp;:&nbsp;
        <td><tt>-f</tt> <i>filterfile<i>

    <tr><td>&nbsp;<td>&nbsp;:&nbsp;
        <td><tt>-depict</tt>
    
    <tr><td>&nbsp;<td>&nbsp;:&nbsp;
        <td><tt>-addH</tt>
	
    <tr><td>&nbsp;<td>&nbsp;:&nbsp;
	<td><tt>-removeH</tt>

    <tr><td>&nbsp;<td>&nbsp;:&nbsp;
        <td><tt>-ylide</tt>

    <tr><td>&nbsp;<td>&nbsp;:&nbsp;
        <td><tt>-chiral</tt>
    
    <tr><td>&nbsp;<td>&nbsp;:&nbsp;
        <td><tt>-wedge</tt>
    
    <tr><td>&nbsp;<td>&nbsp;:&nbsp;
        <td><tt>-scale</tt>
    
    <tr><td>&nbsp;<td>&nbsp;:&nbsp;
        <td><tt>-salts</tt>
    
    <tr><td>&nbsp;<td>&nbsp;:&nbsp;
        <td><tt>-component</tt>

    <tr><td>&nbsp;<td>&nbsp;:&nbsp;
        <td><tt>-compfield</tt> <i>fieldname</i>
    
    <tr><td>&nbsp;<td>&nbsp;:&nbsp;
        <td><tt>-acidbase</tt>
    
    <tr><td>&nbsp;<td>&nbsp;:&nbsp;
        <td><tt>-depracids</tt>

    <tr><td>&nbsp;<td>&nbsp;:&nbsp;
        <td><tt>-protbases</tt>

    <tr><td>&nbsp;<td>&nbsp;:&nbsp;
        <td><tt>-neutralize</tt>

    <tr><td>&nbsp;<td>&nbsp;:&nbsp;
        <td><tt>-tautomers</tt>

    <tr><td>&nbsp;<td>&nbsp;:&nbsp;
        <td><tt>-protomers</tt>

    <tr><td>&nbsp;<td>&nbsp;:&nbsp;
        <td><tt>-enumsize</tt> #results

    <tr><td>&nbsp;<td>&nbsp;:&nbsp;
        <td><tt>-enumdup</tt>

    <tr><td>&nbsp;<td>&nbsp;:&nbsp;
        <td><tt>-abbrev</tt> <i>name<tt>=</tt>SMILES</i>

    <tr><td>&nbsp;<td>&nbsp;:&nbsp;
        <td><tt>-rule acid:</tt><i>group</i>

    <tr><td>&nbsp;<td>&nbsp;:&nbsp;
        <td><tt>-rule base:</tt><i>group</i>

    <tr><td>&nbsp;<td>&nbsp;:&nbsp;
	<td><tt>-rule none:</tt><i>group</i>
    </table>
</blockquote>

<p><a name="sdwash"></a></p><h2>Description</h2>

<p>The <tt>sdwash</tt> program processes one or more input SD files, and
applies certain operations to each record. Any number of input files may be
specified, and they will be read sequentially and combined into the same output
stream.
Specifying an input file of hyphen ('<tt>-</tt>') causes the standard
input to be read. In the absence of an output filename, the standard output will
be used.

<p>
The fundamental structure of operation of <tt>sdwash</tt> is:
<ol>
    <li>Read and concatenate all specified input files.
    <li>Perform filtering and wash operations.
    <li>Write output records.
</ol>

<p>On most POSIX systems, the first syntax can be used: <tt>sdwash</tt> looks
like a Unix command. If using an unusual shell, it may be necessary to  use the
second syntax. On Windows systems, use the third (batch file) or fourth syntax
lines (assuming <tt>cmd.exe</tt> is used to process commands).

<p>While much of the functionality of <tt>sdwash</tt> is shared with the  <a
href="../../mdb/wash.htm">Database Wash</a> application, there are a
number of features which are specific to the interpretation and manipulation of MDL
SD files.


<p>The following optional parameters and flags may be specified to activate
certain functionality. Unless otherwise indicated, the order in which flags are
provided on the command line does not affect their meaning.

<blockquote>
<dl>

<p><dt><a name="verbose"><tt>-verbose</tt></a>
<br /><tt>-quiet</tt>

<dd>In verbose mode, a running summary of progress will be written to the
standard error stream whenever a new input file is opened and at certain
intervals. Verbose mode and quiet mode are mutually exclusive. If both
<tt>-verbose</tt> and <tt>-quiet</tt> are encountered in the argument list,
the last to be specified (rightmost in the list) is used.

<p><dt><tt>-stripdata</tt>
<br /><tt>-keep</tt> <i>pattern</i>
<br /><tt>-drop</tt> <i>pattern</i>

<dd>Normally, the non-molecule fields in the SD input files are preserved. Fields
can be kept or dropped according to the specified sequence of pattern matches.

<p>For the processing of each SD record, a mask is constructed, which is set to
true for all records. The sequence of <tt>-stripdata</tt>, <tt>-keep</tt> and
<tt>-drop</tt> arguments are applied to the mask, in the same order as
encountered in the argument list. Any field for which the mask is true at the
end of the sequence is written to the output, and the others are omitted.

<p>The <tt>-stripdata</tt> option sets the mask to zero for all fields. It is
functionally equivalent to <tt>-drop *</tt>. The <tt>-keep</tt> and
<tt>-drop</tt> directives are accompanied by a pattern, which can be a literal
string or a matching rule, as is used by the function <a
class="svl" href="../../svl/fcnref/findetc.html">m_findmatch</a>. The
<tt>-keep</tt> directive sets the mask to true for any fields which match the
pattern, the <tt>-drop</tt> directive to false.

<p>Note that for Unix systems, care must be taken to escape out the wildcard
character (<tt>'*'</tt>), which may otherwise be interpreted by the command
shell.  For example, quotes may be used, as in the <a href="#asterisk">example</a>
below.

<p><dt><tt>-setname</tt> <i>fieldname</i>

<dd>If specified, the indicated field will be used to replace the name of the
molecule, which is line 1 of each SD record. The name replacement is done before
fields are removed, i.e.
before any of the <tt>-stripdata</tt>, <tt>-keep</tt> or
<tt>-drop</tt> features are invoked.

<p><dt><tt>-seqno</tt> <i>fieldname</i>

<dd>A sequence identifier number can be generated for output records and
written to the specified field. The identifier numbers are the output record
ordinal numbers, i.e. the first record output from the wash procedure is
given the number 1, and successive records are consecutively numbered.
If multiple files are provided, each subsequent file begins with a
sequence identifier of one greater than the end of the previous file. The
sequence identifier is not affected by rejection of records due to the
<a class="svl" href="#strict">-strict</a> option, i.e. identifier numbers
are consecutive; rejected records do not cause the identifier number
to increment.

<p><dt><tt>-savesmi</tt> <i>fieldname</i>

<dd>The structure of the input molecule prior to performing washing steps
can be stored as a SMILES string in the specified field. The SMILES string
is not necessarily canonical, and does not calculate aromaticity, in order
to be as faithful as possible to the original bond patterns. If the
<a class="svl" href="#abbrev">-abbrev</a> option is used, translation of
abbreviations will be conducted before the SMILES string is generated.
If the structure contains unrecognized elements, such elements will be
converted to carbon and labeled as <tt>R0</tt>.

<p><dt><a name="strict"><tt>-strict</tt></a>

<dd>When this option is used, only input molecules consisting entirely
of elements of the periodic table or the special lone pair identifier
(<tt>'LP'</tt>) will be washed. A molecule containing non-element
atoms will be rejected; it is then either discarded or written
to the <a href="#filterfile">filter file</a>. The strict check is
done after translation of any abbreviations specified using the
<a class="svl" href="#abbrev">-abbrev</a> option.  Any molecules still found to
contain abbreviations after the abbreviation translation step, i.e. that
contain unrecognized or invalid abbreviations, will be rejected.

<p><dt><a name="filterfile"><tt>-f</tt> <i>filterfile</i></a>

<dd>This option has effect only when the <a
class="svl" href="#strict">-strict</a> option is used.  The specified output
file is used to store the rejected records.  If a filter file is not
specified, rejected records will be discarded. The records written to the
filter file will be of the same format as those written to the main output,
and, as much as possible, the same wash rules will have been applied.

<p><dt><a name="depict"><tt>-depict</tt></a>

<dd>If specified, the molecules will be output with atom coordinates
produced by the depiction layout algorithm, as implemented by the <a
class="svl" href="depictor.htm">DepictionCoordinates</a> function.

<p><dt><a name="addH"><tt>-addH</tt></a>

<dd>When this option is used, implicit hydrogen counts are converted
into explicit hydrogen atoms. This is accomplished by temporarily converting
the MDL MOL structure into MOE atom keys and calculating the number of
missing hydrogen atoms with:

<pre>    implicitH = aHCount akeys - aExplicitHCount akeys</pre>

<p>When the implicit hydrogen count calculated in this manner is zero or
negative, no further action is taken (i.e. hydrogen atoms are <i>not</i>
deleted). When the implicit hydrogen count is calculated to be positive, a
corresponding number of new hydrogen atoms are created and appended to
the end of the atom list.  An MDL MOL structure is then extracted from
the resulting molecule.

<p>The coordinates of the newly created hydrogen atoms are generated in
several different ways, depending on the options used and on the properties of
the input molecule:

<ul>

<li><p>If the <a class="svl" href="#depict">-depict</a>
is specified, hydrogen atom
positioning is handled by the depiction algorithm.

<li><p>If the molecule appears to be 3D, i.e. there are atom coordinates
outside the plane of the Z-axis, the hydrogen atom positions are obtained
with the <a class="svl" href="addh.html">Add_H</a> function, which generates
reasonable 3D positions.

<li><p>If neither of the above two cases holds, the hydrogen positions
are determined by assuming that the structure is a planar diagram.
Each hydrogen atom is assigned the same Z-coordinate as its parent atom
and is placed according to simple diagram layout conventions.

</ul>

<p>If the wash operation is running in an enumerative mode, the addition of
hydrogen atoms is deferred to the end and carried out separately for each
result.

<p><dt><a name="removeH"><tt>-removeH</tt></a>

<dd>Removes all hydrogen atoms which can be <i>safely</i> re-created using a
simple and foolproof valence calculation. Because the SD format does not have a
field for recording the number of implicit hydrogen atoms in a
hydrogen-suppressed structure, it is prudent to retain explicit hydrogen atoms
which might be re-derived incorrectly by software. Hydrogen atoms which are
attached to hypervalent heavy atoms lying outside of the main organic
block or containing a partial complement of explicit hydrogen atoms are potentially
unsafe to delete.

<p>Hydrogen atoms will be removed if they meet all of the following criteria:

<ul>

<li>Terminal

<li>Neutral

<li>Sigma-bonded

<li>Not annotated with any kind of attachment label.

<li>The parent atom is one of: B, C, N, P, As, O, S, Se, Te, F, Cl, Br, I.

<li>For the parent atom: valence + bond orders - charge = 8.

</ul>

<p>This option is intended for use with 2D depictions in which
hydrogens are commonly suppressed.
</p>

<p><dt><tt>-ylide</tt>

<dd>Applies ylide-bond standardization rules to the structure, which is
functionally equivalent to importing the structure into MOE and exporting it as
an MDL MOL file. Some conversion between charge separated forms [A(+)-B(-)] and
double bond forms [A=B] is carried out, and certain functional groups such as
nitro and sulfoxides are represented in a conventional manner.

<p><dt><tt>-chiral</tt>

<dd>Atom-centered chirality can be marked in MDL MOL files by (1) using the
chiral parity flag, or (2) combining a planar 2D layout with wedge bond
annotations.

<p>The chiral parity flag is considered to be definitive, even if the atom
appears to have symmetry, or if the parity is not consistent with the geometry
or wedge bonds. Chiral parity values of 1 (odd), 2 (even) or 3 (chiral but
unknown state) are never modified by <tt>sdwash</tt>.

<p>Wedge bonds are usually used to correctly indicate chiral centers, but they
can also be used to provide visual cues other than atom-centric chirality. The
<tt>-chiral</tt> option will cause atom centers with a chiral parity value of 0
to be studied to see if they meet the following criteria:

<ul>

<li>The atom center is sp<sup>3</sup> and has 4 substituents, possibly
including an implicit hydrogen.

<li>None of the substituents are equivalent, as determined by the function <a
class="svl" href="atom_g.htm">aRSWaterChiral</a>.

<li>All of the atom substituents lie on the plane of the Z-axis.

<li>At least one of the substituents is assigned as a wedge bond.

</ul>

<p>This being the case, the atom will be classified as being chiral, and the
chiral parity will be calculated based on the 2D positions of the substituent
atoms and the assignment of wedge bonds.

<p>Note that 3D geometry is never used to calculate chiral parity values,
because the presence of wedge bonds is necessary in order to denote that a
chiral center is constrained to be in one particular state, and for 3D
structures, wedge bonds are meaningless.

<p><dt><tt>-wedge</tt>

<dd>Specifying this option causes the redetermination of wedge bonds for
planar atoms which are marked as having chirality by means of the chiral
parity field. For such atoms, any existing wedge bond information will
be replaced by the recalculated wedge configuration, which is intended
to be a correct representation of the chirality, as well as aesthetically
most desirable.

<p>Wedge bonds which are not involved in chiral centers are assumed to be an aid
to drawing aesthetics and overall geometry perception, and are not modified by
this feature.

<p><dt><tt>-scale</tt>

<dd>Specifying this option causes molecule coordinates to be scaled
so that the average bond length is characteristic of a 2D diagram layout.
This is useful when the source molecules have abnormally short bond
lengths as produced by some drawing programs.

<p><dt><tt>-salts</tt>

<dd>Specifying this option causes certain salts to be converted from
covalent notation to ionic notation. The identification of such cases
is conservative, and atom pairs qualify if the following conditions are met:

<p><ul>

<li>The electropositive element is one of Li, Na, K, Rb or Cs.

<li>The electronegative element is one of C, N, O, F, P, S, Cl, Se, Br, I.

<li>Both elements are drawn in their neutral form.

<li>The electropositive element is terminal.

<li>The atoms are connected to each other by a single bond.

</ul>

<p>For any atom pair where these conditions are all satisfied, the bond
between the atoms is removed, the electropositive atom is set to +1, and
the electronegative atom to -1.

<p>When minor component removal is indicated by the
<a class="svl" href="#component">-component</a> option, salt disconnection
is performed prior to their removal.

<p><dt><a name="component"><tt>-component</tt></a>

<dd>Specifying this option causes minor components to be removed
as follows.  The connection graph of the structure is divided into
connected components, and the one with the largest number of heavy atoms
is retained. In the event of a tie, the first component is kept.  The <a
class="svl" href="#compfield">-compfield</a> option is used to generate a
record of the eliminated components.

<p><b>Note:</b> Heavy atom counting is generally an effective way to
remove extraneous solvents, salts and miscellaneous adducts, but will
produce the wrong answer if the desired component is not the largest.

<p><dt><a name="compfield"><tt>-compfield</tt> <i>fieldname</i></a>

<dd>When this option is on, the <a class="svl" href="#component">-component</a>
flag is enabled automatically, and a record will be kept of any
eliminated connected components. Whenever any atoms are removed,
<tt><i>fieldname</i></tt> is appended to the output set, and its value
set to the SMILES string generated from the removed atoms.

<p><dt><a name="acidbase"><tt>-acidbase</tt></a>

<dd>This option is equivalent to specifying both <tt>-depracids</tt> and
<tt>-protbases</tt>.

<p><dt><a name="depracids"><tt>-depracids</tt></a><br />
<a name="protbases"><tt>-protbases</tt></a>

<dd>Specifying <tt>-depracids</tt> causes functional groups which are classified
as strong acids to be deprotonated. Specifying <tt>-protbases</tt> causes
functional groups which are classified as strong bases to be protonated.

<p>The list of strong acids and strong bases is given in 
<a href="../../mdb/wash.htm">Database Wash</a>.

<p>Combining these two options is often a suitable means for producing the
structure (derived from the input molecule) that is most representative
of the species in water.

<p><dt><tt>-neutralize</tt>

<dd>
When this option is specified, charged species are replaced
with:

<p>
<ul>
<li>A protonation state in which all the atoms are
neutral, if possible; otherwise
<li>A protonation state in which the species is
neutral overall, if possible; otherwise
<li>The least charge-bearing form of the structure.
</ul>

<p>Note that neutralization takes place before any
<a href="#tautomers">tautomer/protomer</a>
enumeration.

<p><dt><a name="tautomers"><tt>-tautomers</tt></a>

<dd>This option enables enumeration mode in the wash tool.  In this mode,
for each input molecule, one or more tautomers are produced, using the washed
molecule as the starting point. The tautomer enumeration process is described
in more detail in <a href="../../mdb/wash.htm">Database Wash</a>.

<p>When this option is used, the washed structure submitted to the
enumeration procedure will generally be present in the output list. All other
structures will have the same implicit molecular formula, and be related by a
tautomer shift. Explicit hydrogen atoms are removed prior to the enumeration
process (in the same manner as when using
<a class="svl" href="#removeH">-removeH</a>). 

<p>If <a class="svl" href="#depict">-depict</a> is used, the depiction
layout will be done only once, for the input molecule. Heavy atoms and
non-deletable hydrogen atoms will be identical for all results, except
for the charge field. Bond orders will vary.

<p>If <a class="svl" href="#addH">-addH</a> is used, the hydrogen atoms will
be added separately for each result, and so the connectivity graph will
in this case be different for each result.

<p><dt><a name="protomers"><tt>-protomers</tt></a>

<dd>This option overrides the <a class="svl" href="#tautomers">-tautomers</a>
option. Protomer enumeration is identical to tautomer enumeration in all
respects, except that in addition to producing tautomers, the protonated
and deprotonated forms of acidic or basic functional groups are included
in the results. The resulting structures do not necessarily have the same
total charge or implied molecular formula.

<p>It is often sensible to use the <tt>-protomers</tt> option in
combination with <a class="svl" href="#depracids">-depracids</a> and
<a class="svl" href="#protbases"><tt>-protbases</tt></a>.
The results from the enumeration
will then be filtered to exclude strong acids and strong bases, leaving
only borderline cases.

<p><dt><tt>-enumsize</tt> #results

<dd>Specifies the maximum number of results that may be obtained by
<a href="#tautomers">tautomer</a> or <a href="#protomers">protomer</a>
enumeration.  By default this is set to 25.

<p>Note that if enumeration is used in conjunction with the
<a class="svl" href="#strict">-strict</a>
option, any molecule for which the number
of enumerated results exceeds this limit is considered to be a failure,
and is filtered out.

<p><dt><tt>-enumdup</tt>

<dd>By default, the <a class="svl" href="#tautomers">-tautomers</a> and
<a class="svl" href="#protomers">-protomers</a> options filter the results to
remove molecules which are topologically degenerate: if two molecules
differ only by atom order within the atom list, just one is retained. The
<tt>-enumdup</tt> option disables this filter, so that a more complete
enumeration is performed.  This is useful when atom indexes have specific
meaning, such as for molecules which already have well-defined geometry
(e.g. a bound conformation of a ligand in an active site).

<p><dt><a name="abbrev"><tt>-abbrev</tt> <i>name=SMILES</i></a>

<dd>By default, no translation will be performed when abbreviations
(non-elements) are discovered in the atom symbol field or in the group
description property block fields.  For abbreviation translation to be
enabled, an abbreviation must be specified explicitly as a name paired
with its SMILES string.

<p>For example, translation of methyl, ethyl and phenyl abbreviations can be
accomplished by adding the arguments:

<pre>    -abbrev Me=C -abbrev Et=CC -abbrev Ph=c1ccccc1</pre>

<p>For routine or large collections of abbreviations, it is recommended
that the abbreviation parameters be stored in a text file, and retrieved
with the <tt>@filename</tt> syntax.  If a particular abbreviation name is
duplicated, the last specified takes priority.

<p>During abbreviation translation, the corresponding SMILES string
is instantiated into a molecular fragment.  The root of this fragment
replaces the atom in whose atom symbol field or property block fields the
abbreviation was found.  The remaining atoms of the fragment are appended
to the end of the molecule structure. The coordinates of the fragment atoms
are generated using a 2D depiction layout algorithm, and will be "glued on"
to the attachment point in a simple planar arrangement.  This is generally
legible in cases where the input molecule is a 2D sketch, but for best
results, the <a class="svl" href="#depict">-depict</a> option should be used,
which will cause a redraw of the whole molecule.

<p>Hydrogen atoms are not explicitly created during abbreviation translation,
so if they are desired, the <a class="svl" href="#addH">-addH</a> option should
be used. Higher order bonds to the fragment root atom are permitted, and
no special checks are done for the valence of the fragment. For fragments
in which the root atom has a subvalent heavy-atom count, this imparts some
flexibility since the hydrogens are implied, but it is possible to produce
implausible structures if care is not taken.

<p>Atoms are eligible for abbreviation translation only if they meet the
following criteria:

<ul>
<li>Terminal
<li>The atom description matches an explicitly defined abbreviation name.
</ul>

<p>The atom description within the source structure is obtained from either

<ul>

<li>The atom symbol, if not an element.

<li>Certain fields in the property block, including the <tt>M__G</tt>,
<tt>M__A</tt> or <tt>M__V</tt> data entries. If the description is held in
a property block field, the atom symbol will generally be (<tt>'*'</tt>)
or some other non-element value.  Property block entries take precedence
over the atom symbol field.

</ul>

<p>A special exception is made for property block entries which match
element symbol names; these are automatically translated, even if not
provided as abbreviation parameters.

<p>When an atom description matches one of the specified abbreviations,
the abbreviation is translated, and the atom symbol replaced by that
corresponding to the root of the fragment.  Otherwise, if no match is found,
the atom symbol is not modified. If <a class="svl" href="#strict">-strict</a>
has been specified, failure to match an abbreviation causes the record to be
rejected and written to the filter file, if one was specified. In
non-strict mode, if non-element atoms remain in the structure after all
abbreviations have been parsed, all structure washing options will be
disabled for that entry, and the original input structure will be emitted
to the output stream. If <a class="svl" href="#verbose">-verbose</a> has been
specified, a note will be made in the output if a non-element or group
description could not be matched up with an abbreviation.

<p><dt><tt>-rule acid:</tt><i>group</i>
<br /><tt>-rule base:</tt><i>group</i>
<br /><tt>-rule none:</tt><i>group</i>

<dd>Custom protonation and deprotonation rules can be provided using these
options. Each rule
consists of a type and a SMARTS pattern. Any number of rules may be specified,
and they will be applied in the order given. The order must be considered
carefully, as each atom is assigned to the first rule which matches at the root
of the corresponding SMARTS pattern, and is classified according to the
corresponding type.

<p>Three types of rules are allowed, each of which has a specific effect:
<tt>acid</tt> type rules cause the atom at the root of the SMARTS match to be
deprotonated; <tt>base</tt> type rules cause the atom to be protonated;
<tt>none</tt> type rules cause no change to be carried out, which can be used as
a way of preventing subsequent rules from being applied.

<p>The custom rules will be applied <i>after</i> the rules
activated by <a class="svl" href="#acidbase">-acidbase</a>,
<a class="svl" href="#depracids">-depracids</a> and
<a class="svl" href="#protbases">-protbases</a>, which allows the custom rules
to be used as modifications to the existing logic. In enumeration modes,
the custom rules will be used to filter the output, as well as preprocessing
the input.

<p>Note that for Unix systems, care must be taken to escape out the
character (<tt>':'</tt>), which may otherwise be interpreted by the
command shell.  For example, double quotes may be used, as in the <a
href="#quote">example</a> below.

</dl>
</blockquote>

<h2>Examples</h2>

<p>To iterate through all of the records in <tt>struct3D.sdf</tt> and rebuild
the coordinates in 2D, whilst also replacing the wedge bond assignments and
discarding non-molecule fields:

<pre>
    sdwash struct3D.sdf -o struct2D.sdf -depict -wedge -stripdata
</pre>

<p>Note that the command <tt>sdwash</tt> may need to be replaced with
<tt>$MOE/bin/sdwash</tt> or
<span class="nobr"><tt>$MOE/bin/moebatch -run $MOE/bin/sdwash</tt></span>,
depending on the platform and how it is configured.

<p>To use a Unix-style pipe to remove hydrogens and adjust protonation of all
records generated by another program:

<pre>
    <i>program1</i> | sdwash - -removeH -acidbase | <i>program2</i>
</pre>

<p>To process a number of large input datafiles, with some indication of
progress, keeping only the largest component but recording the discarded
fragments, and standardizing the bond order style:

<pre>
    sdwash structures*.sdf -o washed.sdf -verbose -compfield lost_frag -ylide
</pre>

<p>Note that because <tt>-compfield</tt> is specified, the <tt>-component</tt>
flag is enabled automatically.

<p>To take a collection of structures and parse out a predefined set of
abbreviations which occur throughout the input file, replace the coordinates
with depiction layouts, and to insert the registration key field into the name
of the molecule:

<p><span class="nobr"><tt>
&nbsp;&nbsp;&nbsp;&nbsp;sdwash input.sdf -o output.sdf -drop regno -setname regno 
-depict @$MOE/lib/sdabbrev.txt
</tt></span>

<p>The file <tt>$MOE/lib/sdabbrev.txt</tt> is a list of abbreviations
that are commonly used in SD files.

<p>To enumerate the tautomers of a source datafile, keeping the source
identification number from the original input:

<pre>
    sdwash molecules.sdf -o tautomers.sdf -seqno mseq -tautomers
</pre>

<p>For a more detailed enumeration process, which starts by removing salts and
non-major components and adjusting the protonation states, then enumerates all
of the tautomer/protomer combinations which are likely to be present in an
acidic solution:

<p><span class="nobr"><tt>
&nbsp;&nbsp;&nbsp;&nbsp;sdwash molecules.sdf -o protomers.sdf -seqno mseq 
-protomers -salts -component -protbases
</tt></span>

<p>To create a field which contains a SMILES string representation of the
corresponding structure, remove all descriptor fields which begin with
the prefix <tt>desc_</tt>, but keep descriptor fields named <tt>desc_pi</tt> and
<tt>desc_mu</tt>, and append the results to an existing file:

<a name="asterisk"></a>
<p><span class="nobr"><tt>
&nbsp;&nbsp;&nbsp;&nbsp;sdwash fragments002.sdf -savesmi SMILES -drop 'desc_*' 
-keep desc_pi -keep desc_mu >> cumulative_output.sdf
</tt></span>

<p>To cause primary amines to be protonated, unless they are of a benzylic
nature, the following two custom protonation rules could be used:

<a name="quote"></a>
<pre>
    sdwash molecules.sdf -rule "none:NCc" -rule "base:[NH2]C"
</pre>

<p>Note in the above two examples the use of quotation marks, which are
used to prevent interpretation by a Unix command shell.

<h2>See Also</h2>

<a href="../../mdb/wash.htm">Database Wash</a>

<p>
<a class="svl" href="sddesc.htm">sddesc</a><br />
<a class="svl" href="sdfilter.htm">sdfilter</a><br />
<a class="svl" href="sdfrag.htm">sdfrag</a><br />
<a class="svl" href="sdsort.htm">sdsort</a><br />
<a class="svl" href="sdstereo.htm">sdstereo</a>

<p>
<a class="svl" href="protomer.htm">ctab_EnumerateProtomers</a><br />
<a class="svl" href="depictor.htm">DepictionCoordinates</a>


<p><a href="../../index.htm">MOE Table of Contents</a>&nbsp;&nbsp;<a href="../../fcnindex.html">SVL Function Index</a></p>
<hr noshade="noshade" />
<a href="http://www.chemcomp.com"><img src="../../images/flogo.gif"
alt="CCG Logo"
align="left" width="30" height="30" border="1" hspace="5" vspace="3" /></a>
<font size="2">
<a href="../../legal.html">Copyright</a> &copy; 1997-2010
<a href="http://www.chemcomp.com">Chemical Computing Group Inc.</a><br />
<a href="mailto:info@chemcomp.com"><i>info@chemcomp.com</i></a>
</font>
</body>
</html>
