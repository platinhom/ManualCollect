<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<!--
!!    MOE 2010.10 On-Line Manuals
!!    COPYRIGHT (C) 2010
!!        CHEMICAL COMPUTING GROUP INC.  ALL RIGHTS RESERVED.
!!-->

<head>

<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<link rel="stylesheet" type="text/css"
href="../../manstyle.css" />


<meta functions rAtomCount, rName, rNumber, rPos, rSelected, rType>
<meta functions rActualSegment, rSegment, rSetSegment>
<meta functions rSetSelected, rSetName, rSetPos, rSetType>
<meta functions rUID, rSetUID, rINS, rSetINS, rScalar, rSetScalar>
<meta functions rRGB, rSetRGB, rColor, rColorBy, rSetColorBy>
<meta functions rRibbonWidth, rSetRibbonWidth, rRibbonHeight, rSetRibbonHeight>
<meta functions rRibbonRGB, rSetRibbonRGB, rRibbonColor>
<meta functions rRibbonColorBy, rSetRibbonColorBy>
<meta functions rRibbonMode, rSetRibbonMode>
<meta functions rRibbonEnable, rSetRibbonEnable>
<meta functions rLetter>

<meta intro Residue Functions>

<title>Residue Object Functions</title>
</head>
<body bgcolor="#ffffff">
<a href="../../index.htm"><img src="../../images/logo.gif"
alt="CCG Logo" align="right" width="174" height="55" border="0" /></a>
<h4>MOE 2010.10</h4>
<h2>Residue Object Functions</h2>
<hr noshade="noshade" />

<h2>Syntax</h2>

<pre>
    seg_tokens      = <a class="fcnlink" href="#rActualSegment">rActualSegment</a> residue_keys
    atom_counts     = <a class="fcnlink" href="#rAtomCount">rAtomCount</a>     residue_keys
    colors          = <a class="fcnlink" href="#rColor">rColor</a>         residue_keys
    colorby_tokens  = <a class="fcnlink" href="#rColorBy">rColorBy</a>       residue_keys
    ins_chars       = <a class="fcnlink" href="#rINS">rINS</a>           residue_keys
    letter_chars    = <a class="fcnlink" href="#rLetter">rLetter</a>        residue_keys
    name_tokens     = <a class="fcnlink" href="#rName">rName</a>          residue_keys
    residue_indices = <a class="fcnlink" href="#rNumber">rNumber</a>        residue_keys
    se_positions    = <a class="fcnlink" href="#rPos">rPos</a>           residue_keys
    colors          = <a class="fcnlink" href="#rRGB">rRGB</a>           residue_keys
    colors          = <a class="fcnlink" href="#rRibbonColor">rRibbonColor</a>   residue_keys
    colorby_tokens  = <a class="fcnlink" href="#rRibbonColorBy">rRibbonColorBy</a> residue_keys
    heights         = <a class="fcnlink" href="#rRibbonHeight">rRibbonHeight</a>  residue_keys
    mode_tokens     = <a class="fcnlink" href="#rRibbonMode">rRibbonMode</a>    residue_keys
    flags           = <a class="fcnlink" href="#rRibbonEnable">rRibbonEnable</a>  residue_keys
    colors          = <a class="fcnlink" href="#rRibbonRGB">rRibbonRGB</a>     residue_keys
    widths          = <a class="fcnlink" href="#rRibbonWidth">rRibbonWidth</a>   residue_keys
    scalar_triplets = <a class="fcnlink" href="#rScalar">rScalar</a>        residue_keys
    seg_tokens      = <a class="fcnlink" href="#rSegment">rSegment</a>       residue_keys
    flags           = <a class="fcnlink" href="#rSelected">rSelected</a>      residue_keys
    type_tokens     = <a class="fcnlink" href="#rType">rType</a>          residue_keys
    uid_numbers     = <a class="fcnlink" href="#rUID">rUID</a>           residue_keys

    <a class="fcnlink" href="#rSetColorBy">rSetColorBy</a>       [residue_keys, 'colorby_tokens']
    <a class="fcnlink" href="#rSetINS">rSetINS</a>           [residue_keys, ins_chars]
    <a class="fcnlink" href="#rSetName">rSetName</a>          [residue_keys, name_tokens]
    <a class="fcnlink" href="#rSetPos">rSetPos</a>           [residue_keys, se_positions]
    <a class="fcnlink" href="#rSetRGB">rSetRGB</a>           [residue_keys, colors]
    <a class="fcnlink" href="#rSetRibbonColorBy">rSetRibbonColorBy</a> [residue_keys, colorby_tokens]
    <a class="fcnlink" href="#rSetRibbonHeight">rSetRibbonHeight</a>  [residue_keys, heights]
    <a class="fcnlink" href="#rSetRibbonMode">rSetRibbonMode</a>    [residue_keys, mode_tokens]
    <a class="fcnlink" href="#rSetRibbonEnable">rSetRibbonEnable</a>  [residue_keys, flags]
    <a class="fcnlink" href="#rSetRibbonRGB">rSetRibbonRGB</a>     [residue_keys, colors]
    <a class="fcnlink" href="#rSetRibbonWidth">rSetRibbonWidth</a>   [residue_keys, widths]
    <a class="fcnlink" href="#rSetScalar">rSetScalar</a>        [residue_keys, scalar_num, values]
    <a class="fcnlink" href="#rSetSegment">rSetSegment</a>       [residue_keys, seg_tokens]
    <a class="fcnlink" href="#rSetSelected">rSetSelected</a>      [residue_keys, flags]
    <a class="fcnlink" href="#rSetType">rSetType</a>          [residue_keys, type_tokens]
    <a class="fcnlink" href="#rSetUID">rSetUID</a>           [residue_keys, uid_numbers]
</pre>

<p><a name="rActualSegment"></a></p><h2>Description</h2>

<p>
In MOE, molecular data is organized as a hierarchy of <i>molecular objects</i>
or <i>objects</i>.  A residue object can own zero or more atoms.  Within MOE
residue information is stored in separate internal data structures.  The
following functions obtain or modify basic residue properties.  Residues are
referenced with an object key (a unique number identifying the residue object).

<!-- DESC -->

<P>
The following functions can be used to obtain information from residue objects:
<p>
<table class="titlebar" width="100%" border="1" cellpadding="3">

<tr>
<th>Function</th>
<th>Description</th>
</tr>

<tr>
<td valign="baseline">
<a name="rActualSegment"></a><tt>rActualSegment</tt>
<td valign="baseline">
Returns the secondary structure segment label token for each residue.  Legal
label tokens are defined by the constant 
<a class="svl" href="moe_const.html">R_SEGMENT_TYPES</a>.
This function can be used on arbitrarily nested vectors.

<pre>
seg_tokens = rActualSegment residue_keys
</pre>

<tr>
<td valign="baseline">
<a name="rAtomCount"></a><tt>rAtomCount</tt>
<td valign="baseline">
Returns the number of atoms owned
by each given residue.
This function can be used on arbitrarily nested vectors.

<pre>
atom_counts = rAtomCount residue_keys
</pre>

<tr>
<td valign="baseline">
<a name="rColor"></a><tt>rColor</tt>
<td valign="baseline">
Returns the display color for the residue.  This is the (computed) color that
is actually used for the residue label in the Sequence Editor.  The integer
color format is 0xRRGGBB encoding red, green and blue.

<tr>
<td valign="baseline">
<a name="rColor"></a>
<a name="rColorBy"></a><tt>rColorBy</tt>
<td valign="baseline">
For each residue in the argument, this function returns a token describing how
the residue is colored.  Legal values are
<ul>
<li><tt>'rgb'</tt> - color by residue's <tt>rRGB</tt> color
<li><tt>'tempfactor'</tt> - color by the residue's atoms' average temperature
factor
<li><tt>'r:rgb'</tt> - color by residue's <tt>rRGB</tt> color
<li><tt>'c:rgb'</tt> - color by the owning chain's <tt>cRGB</tt> color
<li><tt>'r:aseg'</tt> - color by the residue's secondary structure
<li><tt>'c:number'</tt> - color by the owning chain's index color
<li><tt>'chain'</tt> - color by the owning chain's display color
</ul>

<tr>
<td valign="baseline">
<a name="rLetter"></a><tt>rLetter</tt>
<td valign="baseline">
Returns the single letter code translation for the name
of each given residue.
Standard IUPAC translations are applied
for standard amino acid residues.  Residues which are not amino acids
are translated to a question mark ("?").
Modified and non-standard residues are mapped to the letter code of the
standard residue from which they are derived.

<pre>
letter_chars = rLetter residue_keys
</pre>

<tr>
<td valign="baseline">
<a name="rINS"></a><tt>rINS</tt>
<td valign="baseline">
Returns the PDB insertion character
for each given residue.
This function can be used on arbitrarily nested vectors.

<pre>
ins_chars = rINS residue_keys
</pre>

<tr>
<td valign="baseline">
<a name="rName"></a><tt>rName</tt>
<td valign="baseline">
Returns the 3 letter residue name token for each residue in the argument.
This function can be used on arbitrarily nested vectors.
<pre>
name_tokens = rName residue_keys
</pre>
<tr>
<td valign="baseline">
<a name="rNumber"></a><tt>rNumber</tt>
<td valign="baseline">
Returns the index of each residue in its parent chain,
and is equivalent to 
<a class="svl" href="obj.htm">oIndex</a>.
This function can be used on arbitrarily nested vectors.
<pre>
residue_indices = rNumber residue_keys
</pre>

<tr>
<td valign="baseline">
<a name="rPos"></a><tt>rPos</tt>
<td valign="baseline">
Returns the non-negative integers used to determine the layout column
numbers of residues in the Sequence Editor.

<pre>
res_pos = rPos residue_keys
</pre>

<p>
For each residue <i>i</i> in a given chain, the gap distance <i>g</i>(<i>i</i>)
between it and the next residue in its chain is calculated using the following
formula:
<blockquote>
    <i>g</i>(<i>i</i>) = MAX { rpos(<i>i</i>) - rpos(<i>i</i>-1), 1 }
</blockquote>
The value <i>g</i>(<i>i</i>) becomes the gap between residue <i>i</i> and
residue <i>i</i>-1. The value of rpos(1) (<i>i</i> starts at 1) is 1. A gap
value of 1 results in no gap.  The function
<a class="svl" href="caligpos.html">cAlignmentPositions</a>
calculates and returns the column numbers for all of the
residues in its chain arguments.
<tt>rPos</tt> can be used on arbitrarily nested vectors.

<tr>
<td valign="baseline">
<a name="rRGB"></a><tt>rRGB</tt>
<td valign="baseline">
Returns the internal color of the residue.  This is the color used when the
residue's ColorBy mode is <tt>rgb</tt> or <tt>r:rgb</tt>.  The internal color
is an integer representing the RGB color in the format 0xRRGGBB encoding
red, green and blue.

<tr>
<td valign="baseline">
<a name="rRibbonWidth"></a>
<a name="rRibbonHeight"></a><tt>rRibbonWidth</tt><br /><tt>rRibbonHeight</tt>
<td valign="baseline">
Returns the width (height) used for rendering the backbone ribbon.  A value
of zero means that a standard width (height) is used.  Not all ribbon modes
use the width (height).

<tr>
<td valign="baseline">
<a name="rRibbonColor"></a><tt>rRibbonColor</tt>
<td valign="baseline">
Returns the display color for the ribbon for the given residue.  This is the
(computed) color that is actually used for the ribbon segment.  The integer
color format is 0xRRGGBB encoding red, green and blue.

<tr>
<td valign="baseline">
<a name="rRibbonColor"></a>
<a name="rRibbonColorBy"></a><tt>rRibbonColorBy</tt>
<td valign="baseline">
For each residue in the argument, this function returns a token describing how
the residue's ribbon segment is colored.  Legal values are
<ul>
<li><tt>'rgb'</tt> - color by ribbons' <tt>rRibbonRGB</tt> color
<li><tt>'tempfactor'</tt> - color by residue's atoms' average temperature factor
<li><tt>'r:rgb'</tt> - color by residue's <tt>rRGB</tt> color
<li><tt>'c:rgb'</tt> - color by the owning chain's <tt>cRGB</tt> color
<li><tt>'r:aseg'</tt> - color by the residue's secondary structure
<li><tt>'c:number'</tt> - color by the owning chain's index color
<li><tt>'chain'</tt> - color by the owning chain's display color
</ul>

<tr>
<td valign="baseline">
<a name="rRibbonEnable"></a><tt>rRibbonEnable</tt>
<td valign="baseline">
Returns a flag for each residue:
0 if the ribbon rendering is disabled for the residue,
1 if enabled.
</td>
</tr>

<tr>
<td valign="baseline">
<a name="rRibbonMode"></a><tt>rRibbonMode</tt>
<td valign="baseline">
Returns a token describing how the residue's backbone is to be
rendered.  Legal values are:
<ul>
<li><tt>'none'</tt> - no backbone is rendered
<li><tt>'line'</tt> - backbone is rendered as a smooth line
<li><tt>'trace'</tt> - backbone is rendered as a straight line
<li><tt>'flat'</tt> - backbone is rendered as a flat ribbon
<li><tt>'tube'</tt> - backbone is rendered as a ellipsoidal tube
<li><tt>'slab'</tt> - backbone is rendered as a solid ribbon
<li><tt>'auto'</tt> - backbone is rendered according to secondary structure
</ul>

<tr>
<td valign="baseline">
<a name="rRibbonRGB"></a><tt>rRibbonRGB</tt>
<td valign="baseline">
Returns the internal color of the ribbon.  This is the color used when the
ribbon's ColorBy mode is <tt>rgb</tt> or <tt>r:rgb</tt>.  The internal color
is an integer representing the RGB color in the format 0xRRGGBB encoding
red, green and blue.

<tr>
<td valign="baseline">
<a name="rScalar"></a><tt>rScalar</tt>
<td valign="baseline">
Returns a vector of three numbers for each residue in the argument.
These three numbers are the values used in the Sequence Editor residue plots.
This function applies to flat vectors only.

<pre>
scalar_triplets = rScalar residue_keys
</pre>

<tr>
<td valign="baseline">
<a name="rSegment"></a><tt>rSegment</tt>
<td valign="baseline">
Returns the predicted secondary structure segment label token for each residue.
This label token is used to secondary structure predictors (unlike the
actual segment which is defined by atomic coordinates).  Legal
label tokens are defined by the constant 
<a class="svl" href="moe_const.html">R_SEGMENT_TYPES</a>.
This function can be used on arbitrarily nested vectors.
<pre>
seg_tokens = rSegment residue_keys
</pre>
<tr>
<td valign="baseline">
<a name="rSelected"></a><tt>rSelected</tt>
<td valign="baseline">Returns the selection state
for each residue in the argument: 
1 if the residue
is selected in the Sequence Editor and 0 otherwise.
This function can be used on arbitrarily nested vectors.
<pre>
flags = rSelected residue_keys
</pre>
<tr>
<td valign="baseline">
<a name="rType"></a><tt>rType</tt>
<td valign="baseline">
Returns the residue type token for each residue in the argument.  Legal type
tokens are defined in the constant 
<a class="svl" href="moe_const.html">R_TYPES</a>.
This function can be used on arbitrarily nested vectors.
<pre>
type_tokens = rType residue_keys
</pre>

<tr>
<td valign="baseline">
<a name="rUID"></a><tt>rUID</tt>
<td valign="baseline">
Returns the UID number (an integer typically equal to the ID field in PDB
files) for each residue in the argument.  This function can be used on
arbitrarily nested vectors.

<pre>
uid_numbers = rUID residue_keys
</pre>

</table>

<!-- ENDDESC -->

<P>
The following functions can be used to modify information in residue objects:

<!-- DESC -->

<p>
<table class="titlebar" width="100%" border="1" cellpadding="3">

<tr>
<th>Function</th>
<th>Description</th>
</tr>

<tr>
<td valign="baseline">
<a name="rSetColorBy"></a><tt>rSetColorBy</tt>
<td valign="baseline">
For each residue in the argument, this function sets the mode describing how
the residue is colored.  Legal values are
<ul>
<li><tt>'rgb'</tt> - color by residue's <tt>rRGB</tt> color
<li><tt>'r:rgb'</tt> - color by residue's <tt>rRGB</tt> color
<li><tt>'c:rgb'</tt> - color by the owning chain's <tt>cRGB</tt> color
<li><tt>'r:aseg'</tt> - color by the residue's secondary structure
<li><tt>'c:number'</tt> - color by the owning chain's index color
<li><tt>'chain'</tt> - color by the owning chain's display color
</ul>

<tr>
<td valign="baseline">
<a name="rSetINS"></a><tt>rSetINS</tt>
<td valign="baseline">
Sets the PDB insertion character for each residue in the <tt>residue_keys</tt>
argument.
This function can be used on arbitrarily nested vectors.
<pre>
rSetINS [residue_keys, ins_chars]
</pre>
<tr>
<td valign="baseline">
<a name="rSetName"></a><tt>rSetName</tt>
<td valign="baseline">
Sets the residue name for each residue in the <tt>residue_keys</tt> argument.
Residue names are automatically converted to upper-case with no blanks and
truncated to a maximum of three characters.
This function can be used on arbitrarily nested vectors.
<pre>
rSetName [residue_keys, name_tokens]
</pre>
<tr>
<td valign="baseline">
<a name="rSetPos"></a><tt>rSetPos</tt>
<td valign="baseline">
Assigns the values used to determine the layout column
numbers of residues in the Sequence Editor. Negative numbers are
replaced with zero.

<pre>
rSetPos [residue_keys, residue_positions]
</pre>

<p>
For each residue <i>i</i> in a given chain, the gap distance <i>g</i>(<i>i</i>)
between it and the next residue in its chain is calculated using the following
formula:
<blockquote>
    <i>g</i>(<i>i</i>) = MAX { rpos(<i>i</i>) - rpos(<i>i</i>-1), 1 }
</blockquote>
The value <i>g</i>(<i>i</i>) becomes the gap between residue <i>i</i> and
residue <i>i</i>-1. The value of rpos(1) (<i>i</i> starts at 1) is 1. A gap
value of 1 results in no gap.
<a class="svl" href="caligpos.html">cAlignmentPositions</a>
calculates and returns the column numbers for all of the
residues in its chain arguments.

<tr>
<td valign="baseline">
<a name="rSetScalar"></a><tt>rSetScalar</tt>
<td valign="baseline">Sets a scalar value for each given residue.
Residue
scalars can be displayed in the Sequence Editor residue plots.
This function applies to flat vectors only. 

<pre>
rSetScalar [residue_keys, scalar_num, values]
</pre>

<p>where <tt>scalar_num</tt> can be <tt>1</tt>, <tt>2</tt> or <tt>3</tt>.


<p>Unit extension applies as illustrated below:

<pre>
rSetScalar [
    first Residues[], // residue key
    [1,2,3],          // sets all three scalars
    [1,-1,2]          // value for each scalar
]                    
</pre>

<p>The next example sets the first scalar (<tt>scalar_num</tt> is 1)
of all residues to <tt>value</tt> 100:

<pre>
rSetScalar [
    Residues[],   // residue keys
    1,            // sets one scalar
    100           // value for all scalars
]
</pre>


<p>(See <a class="svl" href="drawse.html">DrawSEScalar</a> and 
<a class="svl" href="sescalar.html">SEScalarPlotName</a>.)

<tr>
<td valign="baseline">
<a name="rSetRibbonColorBy"></a><tt>rSetRibbonColorBy</tt>
<td valign="baseline">
For each residue in the argument, this function sets the mode by which
the residue's ribbon segment is colored.  Legal values are
<ul>
<li><tt>'rgb'</tt> - color by ribbons's <tt>rRibbonRGB</tt> color
<li><tt>'r:rgb'</tt> - color by residue's <tt>rRGB</tt> color
<li><tt>'c:rgb'</tt> - color by the owning chain's <tt>cRGB</tt> color
<li><tt>'r:aseg'</tt> - color by the residue's secondary structure
<li><tt>'c:number'</tt> - color by the owning chain's index color
<li><tt>'chain'</tt> - color by the owning chain's display color
</ul>

<tr>
<td valign="baseline">
<a name="rSetRibbonEnable"></a><tt>rSetRibbonEnable</tt>
<td valign="baseline">
For each residue,
sets the flag for enabling or disabling ribbon rendering.
If <tt>flag</tt> is 0, rendering is disabled.  Otherwise,
if <tt>flag</tt> is 1, the ribbon will be rendered in the
current ribbon mode (<tt>rRibbonMode</tt>).
</td>
</tr>

<tr>
<td valign="baseline">
<a name="rSetRibbonMode"></a><tt>rSetRibbonMode</tt>
<td valign="baseline">
Sets the backbone ribbon rendering mode for each residue.  Legal values are:
<ul>
<li><tt>'none'</tt> - no backbone is rendered
<li><tt>'line'</tt> - backbone is rendered as a smooth line
<li><tt>'trace'</tt> - backbone is rendered as a straight line
<li><tt>'flat'</tt> - backbone is rendered as a flat ribbon
<li><tt>'tube'</tt> - backbone is rendered as a ellipsoidal tube
<li><tt>'slab'</tt> - backbone is rendered as a solid ribbon
<li><tt>'auto'</tt> - backbone is rendered according to secondary structure
</ul>

<tr>
<td valign="baseline">
<a name="rSetRGB"></a><tt>rSetRGB</tt>
<td valign="baseline">
Sets the internal color of the residue.  This is the color used when the
residue's ColorBy mode is <tt>rgb</tt> or <tt>r:rgb</tt>.  The internal color
is an integer representing the RGB color in the format 0xRRGGBB encoding
red, green and blue.

<tr>
<td valign="baseline">
<a name="rSetRibbonWidth"></a>
<a name="rSetRibbonHeight"></a><tt>rSetRibbonWidth</tt><br /><tt>rSetRibbonHeight</tt>
<td valign="baseline">
Sets the width (height) used for rendering the backbone ribbon.  A value
of zero means that a standard width (height) is used.  Not all ribbon modes
use the width (height).

<tr>
<td valign="baseline">
<a name="rSetRibbonRGB"></a><tt>rSetRibbonRGB</tt>
<td valign="baseline">
Sets the internal color of the ribbon.  This is the color used when the
ribbon's ColorBy mode is <tt>rgb</tt> or <tt>r:rgb</tt>.  The internal color
is an integer representing the RGB color in the format 0xRRGGBB encoding
red, green and blue.


<tr>
<td valign="baseline">
<a name="rSetSegment"></a><tt>rSetSegment</tt>
<td valign="baseline">
Sets the segment label for each given residue.  Legal segment
labels are defined in the constant 
<a class="svl" href="moe_const.html">R_SEGMENT_TYPES</a>.  Segment
labels are used in secondary structure prediction.
This function can be used on arbitrarily nested vectors.

<pre>
rSetSegment [residue_keys, seg_tokens]
</pre>

<tr>
<td valign="baseline">
<a name="rSetSelected"></a><tt>rSetSelected</tt>
<td valign="baseline">
Assigns the selection flag for each given residue.  The selection flag
controls the selection status of residues in the Sequence Editor.
This function can be used on arbitrarily nested vectors.
<pre>
rSetSelected [residue_keys, flags]
</pre>

<tr>
<td valign="baseline">
<a name="rSetType"></a><tt>rSetType</tt>
<td valign="baseline">
Sets the residue type token for each given residue.  Legal type tokens
are defined in the constant 
<a class="svl" href="moe_const.html">R_TYPES</a>.
This function can be used on arbitrarily nested vectors.
<pre>
rSetType [residue_keys, type_tokens]
</pre>

<tr>
<td valign="baseline">
<a name="rSetUID"></a><tt>rSetUID</tt>
<td valign="baseline">
Sets the integer User ID number for each given residue.  These numbers
are typically the residue identification numbers found in PDB files.
This function can be used on arbitrarily nested vectors.
<pre>
rSetUID [residue_keys, uid_numbers]
</pre>

</table>

<!-- ENDDESC -->

<h2>See Also</h2>
<p>
<a class="svl" href="ratrch.html">rAtoms</a>
<a class="svl" href="ratrch.html">rChains</a><br />
<a class="svl" href="rconstraint.html">rConstraints</a><br />
<a class="svl" href="../../proteins/fcnref/pro_lett.html">Seq_LetterToName</a>
</p>

<p>
<a href="atom.htm">Atom&nbsp;Functions</a><br />
<a href="chain.htm">Chain&nbsp;Functions</a><br />
<a href="obj.htm">Object&nbsp;Functions</a>
</p>

<p>
<a href="../molsystems/molrep.html">Representation of Molecular Systems in MOE</a>
</p>

<p><a href="../../index.htm">MOE Table of Contents</a>&nbsp;&nbsp;<a href="../../fcnindex.html">SVL Function Index</a></p>
<hr noshade="noshade" />
<a href="http://www.chemcomp.com"><img src="../../images/flogo.gif"
alt="CCG Logo"
align="left" width="30" height="30" border="1" hspace="5" vspace="3" /></a>
<font size="2">
<a href="../../legal.html">Copyright</a> &copy; 1997-2010
<a href="http://www.chemcomp.com">Chemical Computing Group Inc.</a><br />
<a href="mailto:info@chemcomp.com"><i>info@chemcomp.com</i></a>
</font>
</body>
</html>
