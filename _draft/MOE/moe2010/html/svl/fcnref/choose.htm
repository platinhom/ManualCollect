<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<!--
!!    MOE 2010.10 On-Line Manuals
!!    COPYRIGHT (C) 2010
!!        CHEMICAL COMPUTING GROUP INC.  ALL RIGHTS RESERVED.
!!-->

<!--	choose.htm	Choose functions
!!
!!	05-may-2005 (ms) created
!!-->

<head>

<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<link rel="stylesheet" type="text/css"
href="../../manstyle.css" />


<meta keywords>

<meta functions choose>
<meta functions choose_intz>
<meta functions choose_s2m>
<meta functions choose_m2s>
<meta functions chooseR_s2m>
<meta functions chooseR_m2s>

<title>SVL Subset Index Functions</title>

<style type="text/css">
dd { padding-bottom: 0.5em; }
table.display {
    width: 90%;
    border: solid thin grey;
}
table.display th {
    border: solid thin grey;
    background-color: #bbb;
}
table.display td {
    border: solid thin grey;
    padding: 0.25em 0.5em;
}
</style>
</head>

<body bgcolor="#ffffff">
<a href="../../index.htm"><img src="../../images/logo.gif"
alt="CCG Logo" align="right" width="174" height="55" border="0" /></a>
<h4>MOE 2010.10</h4>
<h2>SVL Subset Index Functions</h2>
<hr noshade="noshade" />

<h2>Syntax</h2>

<pre>
    val = <a class="fcnlink" href="#choose">choose</a> [N, K]
    val = <a class="fcnlink" href="#choose_intz">choose_intz</a> [N, K]
    sidx = <a class="fcnlink" href="#choose_m2s">choose_m2s</a> [midx1, midx2, ... midxK]
    sidx = <a class="fcnlink" href="#chooseR_m2s">chooseR_m2s</a> [midx1, midx2, ... midxK]
    [midx1, midx2, ... midxK] = <a class="fcnlink" href="#choose_s2m">choose_s2m</a> [sidx, K]
    [midx1, midx2, ... midxK] = <a class="fcnlink" href="#chooseR_s2m">chooseR_s2m</a> [sidx, K]
</pre>

<h2>Description</h2>

<p><a name="choose"></a></p>
<p><hr noshade="noshade" />

<pre>val = <span class="fcndef">choose</span> [N, K]
</pre>

Function <tt>choose</tt> returns the value of the <i>binomial
coefficient</i>: the number of ways of picking&nbsp;<i>K</i> unordered
outcomes from&nbsp;<i>N</i> possibilities.

<blockquote>
<span class="nobr">
<tt>choose[N,K]</tt> = 
<i>N</i> &times; (<i>N</i>&minus;1) &times; (<i>N</i>&minus;2) &times;
... &times; (<i>N</i>&minus;<i>K</i>+1) /
<i>K</i>!
</span>
</blockquote>

The arguments can be nested vectors of compatible shapes.  The function
matches the corresponding elements of the nested arguments.  Unit
extension applies.

<p><a name="choose_intz"></a></p>
<p><hr noshade="noshade" />

<pre>val = <span class="fcndef">choose_intz</span> [N, K]
</pre>

Function <tt>choose_intz</tt> is identical to function
<tt>choose</tt> with one important exception:  if the value of the
result could not be stored in an SVL variable without losing precision,
the function returns&nbsp;0 instead.

The function can be used to test whether a set of indices can be safely
converted to a single index using function <tt>choose_m2s</tt>.
If function <span class="nobr"><tt>choose_intz[N,K]</tt></span> returns non-zero,
then function <tt>choose_m2s midx</tt></span> will succeed for all values of
<tt>midx</tt> such that <span class="nobr">(<tt>max midx &le; N</tt>)</span>
and <span class="nobr">(<tt>length midx == K</tt>)</span>.

Function <tt>chooseR_m2s midx</tt></span> will succeed for all values of
<tt>midx</tt> such that <span class="nobr">(<tt>max midx &le; N-K+1</tt>)</span>
and <span class="nobr">(<tt>length midx == K</tt>)</span>.

<p><a name="choose_m2s"></a></p>
<p><hr noshade="noshade" />

<pre>sidx = <span class="fcndef">choose_m2s</span> [midx1, midx2, ... midxK]
</pre>

<p> Function <tt>choose_m2s</tt> converts a set of&nbsp;<i>K</i> unique
indices to a single index.

The indices can be nested vectors of compatible shapes.  The function
matches the corresponding elements of the nested arguments.  Unit
extension applies.

Note: Function <tt>choose_m2s</tt> operates on a sets of indices <i>without
repetitions</i>, i.e. its argument must be free of duplicates.

<p><a name="chooseR_m2s"></a></p>
<p><hr noshade="noshade" />

<pre>sidx = <span class="fcndef">chooseR_m2s</span> [midx1, midx2, ... midxK]
</pre>

<p>
Function <tt>chooseR_m2s</tt> converts a set of&nbsp;<i>K</i>
indices with possible repetitions to a single index.

The indices can be nested vectors of compatible shapes.  The function
matches the corresponding elements of the nested arguments.  Unit
extension applies.

Note: Function <tt>chooseR_m2s</tt> operates on a sets of indices <i>with
repetitions</i>, i.e. its argument can contain duplicate indices.

<p><a name="choose_s2m"></a></p>
<p><hr noshade="noshade" />

<pre>[midx1, midx2, ... midxK] = <span class="fcndef">choose_s2m</span> [sidx, K]
</pre>

<p>
Function <tt>choose_s2m</tt> converts a single index to a set of&nbsp;<i>K</i>
unique, sorted indices.

The index can be a nested vector.  The resulting indices will match the
shape of the single-index argument.  The second argument must be a
scalar integer.

Note: Function <tt>choose_s2m</tt> operates on sets of indices <i>without
repetitions</i>, i.e. it returns sequences of strictly ascending values.

<p><a name="chooseR_s2m"></a></p>
<p><hr noshade="noshade" />

<pre>[midx1, midx2, ... midxK] = <span class="fcndef">chooseR_s2m</span> [sidx, K]
</pre>

<p>
Function <tt>chooseR_s2m</tt> converts a single index to a set of&nbsp;<i>K</i>
sorted indices.

The index can be a nested vector.  The resulting indices will match the
shape of the single-index argument.  The second argument must be a
scalar integer.

Note: Function <tt>chooseR_s2m</tt> operates on sets of indices <i>with
repetitions</i>, i.e. it returns sequences of ascending values with
possible duplicates.

<p><a name="choose_s2m"></a></p>
<p><a name="choose_m2s"></a></p>
<p><a name="choose"></a></p>
<p><hr noshade="noshade" />

<b>Note 1</b>:

Given a set of&nbsp;<i>N</i> unique elements, let&nbsp;<i>M</i> denote
the number of unique subsets of size&nbsp;<i>K</i>.  Then the following
expressions are all true:

<pre>
    M == <span class="fcndef">choose</span> [N, K]
    M == <span class="fcndef">choose_m2s</span> (N - dec igen K)
    <span class="fcndef">choose_s2m</span> [igen M, K] &lt;= N - dec igen K
    max <span class="fcndef">choose_s2m</span> [inc M, K] &gt; N
</pre>

<p>
<b>Note 2</b>:

With functions <tt>choose</tt> and <tt>choose_s2m</tt>, it is
straightforward to generate all subsets of size&nbsp;<i>K</i> from
a set of&nbsp;<i>N</i> items:

<pre>
    slist = tr choose_s2m [igen choose [N, K], K]
</pre>

For example, if&nbsp;<i>k</i>=2, then then vector <tt>slist</tt> will contain
the indices of the upper-triangular portion of an&nbsp;<i>N</i>&times;<i>N</i>
matrix in the column-major order.

<h2>See Also</h2>

<a class="svl" href="grididx.htm">grid_m2s</a><br />
<a class="svl" href="grididx.htm">grid_s2m</a>


<p><a href="../../index.htm">MOE Table of Contents</a>&nbsp;&nbsp;<a href="../../fcnindex.html">SVL Function Index</a></p>
<hr noshade="noshade" />
<a href="http://www.chemcomp.com"><img src="../../images/flogo.gif"
alt="CCG Logo"
align="left" width="30" height="30" border="1" hspace="5" vspace="3" /></a>
<font size="2">
<a href="../../legal.html">Copyright</a> &copy; 1997-2010
<a href="http://www.chemcomp.com">Chemical Computing Group Inc.</a><br />
<a href="mailto:info@chemcomp.com"><i>info@chemcomp.com</i></a>
</font>
</body>
</html>
