<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<!--
!!    MOE 2010.10 On-Line Manuals
!!    COPYRIGHT (C) 2010
!!        CHEMICAL COMPUTING GROUP INC.  ALL RIGHTS RESERVED.
!!-->

<!--
!!	introcomm.htm	SVL Task Communication Functions
!!
!!	30-sep-2008 (al) created
!!-->

<head>

<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<link rel="stylesheet" type="text/css"
href="../../manstyle.css" />


<title>SVL Task Communication Functions</title>
<meta intro SVL Task Communication Functions>

</head>

<body  bgcolor="#ffffff">
<a href="../../index.htm"><img src="../../images/logo.gif"
alt="CCG Logo" align="right" width="174" height="55" border="0" /></a>
<h4>MOE 2010.10</h4>
<h2>SVL Task Communication Functions</h2>
<hr noshade="noshade" />

<p>
When computations require cooperation between tasks,
inter-task communication is essential.  Such computations
may progress asynchronously, requiring that tasks
be able to coordinate their activity.  Often, resources
must be shared between tasks, and access to
those resources must be coordinated as well.
</p>

<p>
SVL tasks can communicate with each other through a variety
of SVL functions.  The <tt>task_send</tt> and <tt>task_receive</tt>
functions allow tasks to send and receive messages directly
from each other.
In a distributed computing environment, <tt>mpu_send</tt>,
<tt>mpu_receive</tt>, and <tt>mpu_reply</tt> serve a similar
purpose.  Built-in constants such as <tt>MPU_HOSTNAMES</tt>
and <tt>MPU_THISHOST</tt>
give information about the distributed system that
are useful for identifying sender/receiver tasks.
</p>

<p>When cooperating tasks share resources, the
<tt>mutex_*</tt> functions can be used to manage access
to those resources.  The <tt>sync_*</tt> functions are
used by tasks to notify the rest of the system about changes
in their state.  The <tt>barrier_*</tt> functions are
used to coordinate cooperating tasks, requiring them to wait
until all tasks needed for an operation are active.
</p>

<p>Information can be shared between tasks using
dynamic variables.  The <tt>dvar_*</tt> functions
control access to these special data containers.
</p>

<p><tt><table border="0" cellspacing=5 cellpadding=5>

<tr>
<td valign="top">
<a class="svl" href="tasksend.htm">task_receive</a><br />
<a class="svl" href="tasksend.htm">task_send</a>
</td>

<td valign="top">
<a class="svl" href="svlmpu.htm">mpu_receive</a><br />
<a class="svl" href="svlmpu.htm">mpu_send</a><br />
<a class="svl" href="svlmpu.htm">mpu_reply</a>
</td>

<td valign="top">
<a class="svl" href="svlmpu.htm">MPU_HOSTCOUNT</a><br />
<a class="svl" href="svlmpu.htm">MPU_HOSTNAMES</a><br />
<a class="svl" href="svlmpu.htm">MPU_THISHOST</a>
</td>

</tr>

<tr>
<td valign="top">
<a class="svl" href="mutex.htm">mutex_open</a><br />
<a class="svl" href="mutex.htm">mutex_close</a><br />
<a class="svl" href="mutex.htm">mutex_lock</a><br />
<a class="svl" href="mutex.htm">mutex_unlock</a><br />
<a class="svl" href="mutex.htm">mutex_rcapacity</a><br />
<a class="svl" href="mutex.htm">mutex_capacity</a><br />
<a class="svl" href="mutex.htm">mutex_setcapacity</a><br />
<a class="svl" href="mutex.htm">mutex_key</a><br />
<a class="svl" href="mutex.htm">mutex_name</a><br />
<a class="svl" href="mutex.htm">mutex_keylist</a><br />
<a class="svl" href="mutex.htm">mutex_ref</a><br />
<a class="svl" href="mutex.htm">mutex_taskref</a>
</td>

<td valign="top">
<a class="svl" href="sync.htm">sync_open</a><br />
<a class="svl" href="sync.htm">sync_close</a><br />
<a class="svl" href="sync.htm">sync_key</a><br />
<a class="svl" href="sync.htm">sync_name</a><br />
<a class="svl" href="sync.htm">sync_keylist</a><br />
<a class="svl" href="sync.htm">sync_ref</a><br />
<a class="svl" href="sync.htm">sync_taskref</a><br />
<a class="svl" href="sync.htm">sync_update</a><br />
<a class="svl" href="sync.htm">sync_wait</a><br />
<a class="svl" href="sync.htm">sync_poll</a><br />
<a class="svl" href="sync.htm">sync_diff</a>
</td>

<td valign="top">
<a class="svl" href="barrier.htm">barrier_open</a><br />
<a class="svl" href="barrier.htm">barrier_close</a><br />
<a class="svl" href="barrier.htm">barrier_wait</a><br />
<a class="svl" href="barrier.htm">barrier_rcapacity</a><br />
<a class="svl" href="barrier.htm">barrier_capacity</a><br />
<a class="svl" href="barrier.htm">barrier_setcapacity</a><br />
<a class="svl" href="barrier.htm">barrier_key</a><br />
<a class="svl" href="barrier.htm">barrier_name</a><br />
<a class="svl" href="barrier.htm">barrier_keylist</a><br />
<a class="svl" href="barrier.htm">barrier_ref</a><br />
<a class="svl" href="barrier.htm">barrier_taskref</a>
</td>

<td valign="top">
<a class="svl" href="dvaretc.htm">dvar_open</a><br />
<a class="svl" href="dvaretc.htm">dvar_close</a><br />
<a class="svl" href="dvaretc.htm">dvar_key</a><br />
<a class="svl" href="dvaretc.htm">dvar_keylist</a><br />
<a class="svl" href="dvaretc.htm">dvar_name</a><br />
<a class="svl" href="dvaretc.htm">dvar_ref</a><br />
<a class="svl" href="dvaretc.htm">dvar_taskref</a><br />
<a class="svl" href="dvaretc.htm">dvar_value</a>
</td>

</tr>

</table>

<p><a href="../../index.htm">MOE Table of Contents</a>&nbsp;&nbsp;<a href="../../fcnindex.html">SVL Function Index</a></p>
<hr noshade="noshade" />
<a href="http://www.chemcomp.com"><img src="../../images/flogo.gif"
alt="CCG Logo"
align="left" width="30" height="30" border="1" hspace="5" vspace="3" /></a>
<font size="2">
<a href="../../legal.html">Copyright</a> &copy; 1997-2010
<a href="http://www.chemcomp.com">Chemical Computing Group Inc.</a><br />
<a href="mailto:info@chemcomp.com"><i>info@chemcomp.com</i></a>
</font>
</body>
</html>
