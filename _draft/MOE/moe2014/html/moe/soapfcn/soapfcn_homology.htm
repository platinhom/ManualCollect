<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<!--	soapfcn_homology.htm
!!-->

<!--
!!    MOE Online Manuals
!!    COPYRIGHT (C) 1997-2015
!!        CHEMICAL COMPUTING GROUP INC.  ALL RIGHTS RESERVED.
!!-->

<head>

<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />

<script type="text/javascript" 
src="../../include/jsincludes_moe.js"></script>

<link rel="stylesheet" type="text/css"
href="../../include/manstyle.css" />

<meta keywords SOAP, moeweb>
<meta keywords homology>
<meta functions soapfcn_HomologyModeler>
<meta functions soap_spec_HomologyModeler>
<meta functions soap_HomologyModeler>

<title>HomologyModeler SOAP Function</title>

</head>

<body>
<div id="MoeHeader"></div>
<noscript>
	<span class="warning">Warning: JavaScript is disabled. This page will not display correctly.</span>
	<h1 class="title">MOE Documentation</h1>
	<hr noshade="noshade" />
	<style>.LaTeX {color: #C08080;}</style>
</noscript>

<p>The automated SOAP homology modeler builds an all-atom homology
model for an input residue sequence.</p>
<pre>
    <a class="fcnlink" href="#HomologyModeler">HomologyModeler</a>
</pre>

<hr noshade="noshade">

<a name="HomologyModeler"></a>
<h2>HomologyModeler</h2>

<h3>Parameters</h3>

    <dl>
	<dt><tt>seqFasta: </tt> <i>file</i></dt>

	<dd>

	The input sequences, in FASTA <tt>(.fst)</tt> format, supplied as a
	file. It is also possible to specify multiple chains by including all
	chain sequences within the FASTA string.  Note that multi-chain models
	are only supported via <tt>seqFasta</tt> input. The content type for the file
	is specified in the <tt>seqFastaContent</tt> parameter.
	</dd>
	<br/>
	<dt>
	<tt>seq: </tt> <i>string</i>
	</dt>
	<dd>

	The input residue sequence, supplied as a string of single
	letter amino acid codes.  This argument is required.

	</dd>
	<br/>
	
	<dt><tt>template: </tt> <i>file</i></dt>

	<dd>

	The antibody template model as a PDB-formatted file. The content type for the file
	is specified in the <tt>templateContent</tt> parameter.
	</dd>
	<br/>

	<dt>
	<tt>templatePDBCode: </tt> <i>string</i>
	</dt>
	<dd>

	An optional string argument specifying the PDB code of the 
	template structure.  The
	dot-separated chain specifier can also be supplied; for example,
	<tt>2XQY.L</tt>.  If <tt>templatePDBCode</tt> is not
	provided, a template will be automatically identified.

	</dd>
	<br/>
	<dt><tt>protocol: </tt> <i>string</i> (default: <tt>standard</tt>)</dt>

	<dd>
    The level of effort to expend during model creation. This proceeds from
    fast (<tt>coarse</tt>) to precise (<tt>fine</tt>), with <tt>standard</tt>
	as the default. <tt>[coarse, standard, fine]</tt>.
	</dd>
	<br/>
	
	<dt><tt>seqFastaContent: </tt> <i>string</i> (default: <tt>text</tt>)</dt>

	<dd>
    The content type of the file passed as the <tt>seqFasta</tt> parameter.
	<tt>[text, base64, url]</tt>.
	</dd>
	<br/>
	
	<dt><tt>templateContent: </tt> <i>string</i> (default: <tt>text</tt>)</dt>

	<dd>
    The content type of the file passed as the <tt>template</tt> parameter.
	<tt>[text, base64, url]</tt>.
	</dd>
	<br/>
	
	<dt><tt>modelContent: </tt> <i>string</i> (default: <tt>text</tt>)</dt>

	<dd>
    The content type of the file passed as the <tt>model</tt> return value.
	<tt>[text, base64, url]</tt>.
	</dd>
	<br/>

    </dl>


<h3>Return Values</h3>

    <dl>
	<dt>
	<tt>model: </tt> <i>file</i>
	</dt>
	<dd>

	The homology model, in PDB format, returned as a file. The content type for the file
	is specified in the <tt>modelContent</tt> parameter.

        </dd>
        <br/>
    </dl>

<h3>Description</h3>

    <p>The automated SOAP homology modeler application creates an
    all-atom 3D homology model of the input residue sequence.  A
    template can optionally be specified as a 4-letter PDB code using
    the <tt>templatePDBCode</tt> input parameter, in which case it will
    be used to build the model.  The template structure will
    preferentially be taken from the provided <tt>template</tt> PDB structure.
    Alternatively, it may be specified using <tt>templatePDBCode</tt>.  The
    latter is loaded from the Protein Database distributed with
    MOE, if possible.  If it is not found within this database, the template will
    be downloaded from the PSILO server, if available, otherwise it will be
    obtained from the RCSB website.  If a chain specifier for the
    template is given, and the specified chain exists, that specific
    structure will be used as the template.  If the
    chain specifier is not given, or if the chain is not found, a
    pairwise alignment of the input query sequence to each available
    chain in the template PDB family is conducted.  The template PDB
    family is the family of structures all sharing the same PDB code.
    The chain offering the best scoring alignment will then be used as
    the actual template.</p>
  
    
    <p>In the absence of a specified template (when <tt>template</tt> or
    <tt>templatePDBCode</tt> are not given), a homology search is
    performed to automatically identify a template.  The chosen template
    is the top-scoring member of the top-scoring family. </p> 
    
    <p>As part of the homology modeling protocol, the input residue
    sequence is first aligned to the family in which
    the template belongs.  This sequence-to-family alignment yields
    superior results compared to a sequence-to-sequence alignment using
    just the template itself. The template structure is then subjected
    to a structure preparation protocol in which problems such as
    erroneous charges or missing atoms are corrected, and refinement
    is performed.</p>

    <p>After the template has been refined, a series of intermediate
    homology models is built using MOE's homology modeling procedure.
    This procedure copies structure from the template wherever the input
    sequence is in good alignment with the template, fills in gaps using
    loops modeled from a loop library, packs sidechains, and finally
    performs additional refinement.  The returned homology model is chosen to be
    the best scoring of all these intermediate models.</p>
    
    <p>When multiple query chains are specified, the above protocol is used
    with the additional caveat that each chain is searched.  The best scoring
    chain will form the basis of selection for the template with all other
    chains being matched to their best template pairing.  Finally, a multi-chain
    homology model is constructed with the best scoring model being returned.
    </p>

<h2>See Also</h2>

    <a href="../../moe/moeweb_intro.htm">MOE/web Applications</a><br />
    <a href="../../moe/moesoap.htm">MOE/web SOAP Service and Functions</a><br />
	<a class="svl" href="../../svl/fcnref/soapfcn.htm">SOAP Interface Functions</a>
	<br /><br />

    <a href="../../tutorials/hom_tut.htm">Homology Model Tutorial</a><br />

    <a href="../../proteins/prosearch.htm">Homology Searching</a></br />

    <a href="../../proteins/promodel.htm">Building Homology
    Models</a><br /><br />

    <a href="../../proteins/fcnref/pro_mod.htm"><tt>pro_HomologyModel</tt> 
    Protein Function</a>

<noscript>
	<hr noshade="noshade" />
	<font size="2"> Copyright &copy; 1997&ndash;2015
	<a href="http://www.chemcomp.com">Chemical Computing Group Inc.</a> </font>
</noscript>
<div id="MoeFooter"></div>
</body>
</html>
