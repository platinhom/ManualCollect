<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<!--
!!    	sdfrag.htm
!!-->

<!--
!!    MOE Online Manuals
!!    COPYRIGHT (C) 1997-2015
!!        CHEMICAL COMPUTING GROUP INC.  ALL RIGHTS RESERVED.
!!-->

<head>

<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />

<script type="text/javascript" 
src="../../include/jsincludes_moe.js"></script>

<link rel="stylesheet" type="text/css"
href="../../include/manstyle.css" />


<meta functions sdfrag>
<title>sdfrag</title>
</head>

<body>
<div id="MoeHeader"></div>
<noscript>
	<span class="warning">Warning: JavaScript is disabled. This page will not display correctly.</span>
	<h1 class="title">MOE Documentation</h1>
	<hr noshade="noshade" />
	<style>.LaTeX {color: #C08080;}</style>
</noscript>

<h2>Syntax</h2>
<blockquote>
    <tt>unix&gt;&nbsp;$MOE/bin/sdfrag</tt>
    <b>{</b> <i>option</i> | <i>inputfilename</i> | @<i>filename</i> <b>}</b>
    <br />
    <tt>unix&gt;&nbsp;$MOE/bin/moebatch -run $MOE/bin/sdfrag</tt>
    <b>{</b> <i>option</i> | <i>inputfilename</i> | @<i>filename</i> <b>}</b>
    <br />
    <br />
    <tt>windows&gt;&nbsp;%MOE%\bin\sdfrag</tt>
    <b>{</b> <i>option</i> | <i>inputfilename</i> | @<i>filename</i> <b>}</b>
    <br />
    <tt>windows&gt;&nbsp;%MOE%\bin\moebatch -run $MOE/bin/sdfrag</tt>
    <b>{</b> <i>option</i> | <i>inputfilename</i> | @<i>filename</i> <b>}</b>
    <p>
    <table>
    <tr>
    <td><i>option</i>
    <td>&nbsp;:&nbsp;
	<td><tt>-help</tt>
    <tr>
    <td>&nbsp;
    <td>&nbsp;:&nbsp;
    <td><tt>-verbose</tt> | <tt>-quiet</tt>
    <tr>
    <td>&nbsp;
    <td>&nbsp;:&nbsp;
    <td><tt>-sdf</tt> | <tt>-smi</tt>
    <tr>
    <td>&nbsp;
    <td>&nbsp;:&nbsp;
 	<td><tt>-o</tt> <i>outputfilename</i>
    <tr>
    <td>&nbsp;
    <td>&nbsp;:&nbsp;
    <td><tt>-recap</tt> | <tt>-norecap</tt>
    <tr>
    <td>&nbsp;
    <td>&nbsp;:&nbsp;
    <td><tt>-schuffenhauer</tt> | <tt>-noschuffenhauer</tt>
    <tr>
    <td>&nbsp;
    <td>&nbsp;:&nbsp;
    <td><tt>-ringblock</tt> | <tt>-noringblock</tt>
    <tr>
    <td>&nbsp;
    <td>&nbsp;:&nbsp;
    <td><tt>-ringatoms</tt> | <tt>-noringatoms</tt>
    <tr>
    <td>&nbsp;
    <td>&nbsp;:&nbsp;
    <td><tt>-label</tt> | <tt>-nolabel</tt>
    <tr>
    <td>&nbsp;
    <td>&nbsp;:&nbsp;
    <td><tt>-unique</tt> | <tt>-nounique</tt>
    <tr>
    <td>&nbsp;
    <td>&nbsp;:&nbsp;
    <td><tt>-tmp</tt> <i>directory</i>
    <tr>
    <td>&nbsp;
    <td>&nbsp;:&nbsp;
    <td><tt>-simplify</tt> | <tt>-nosimplify</tt>
    <tr>
    <td>&nbsp;
    <td>&nbsp;:&nbsp;
    <td><tt>-carbonize</tt> | <tt>-nocarbonize</tt>
    <tr>
    <td>&nbsp;
    <td>&nbsp;:&nbsp;
    <td><tt>-maxdiam</tt> <i>number</i>
    <tr>
    <td>&nbsp;
    <td>&nbsp;:&nbsp;
    <td><tt>-maxrotbond</tt> <i>number</i>
    <tr>
    <td>&nbsp;
    <td>&nbsp;:&nbsp;
    <td><tt>-maxrotchain</tt> <i>number</i>
    <tr>
    <td>&nbsp;
    <td>&nbsp;:&nbsp;
    <td><tt>-fragname</tt> <i>property</i>
    <tr>
    <td>&nbsp;
    <td>&nbsp;:&nbsp;
    <td><tt>-nofragname</tt>
    <tr>
    <td>&nbsp;
    <td>&nbsp;:&nbsp;
    <td><tt>-3D</tt>
    <tr>
    <td>&nbsp;
    <td>&nbsp;:&nbsp;
    <td><tt>-rmsd</tt> <i>number</i>
    </table>
</blockquote>

<p><a name="sdfrag"></a></p><h2>Description</h2>

<p>
The <tt>sdfrag</tt> program generates molecular fragments from each molecule in
a catenated sequence of SD (or SMILES) files (possibly removing duplicate
output fragments).
<tt>sdfrag</tt> is an SVL program intended to be run in MOE/batch.
The intended use of <tt>sdfrag</tt> is to generate fragment databases
for applications like scaffold replacement.  The outputs can be generated
in either format.
The fundamental structure of operation of <tt>sdfrag</tt> is:
<ol>
    <li>Read and concatenate all specified input files.
    <li>Compute molecular fragments from each input molecule.
    <li>Write output fragments (possibly removing duplicates).
</ol>

<p>On most POSIX systems, the first syntax can be used: <tt>sdfrag</tt> looks
like a Unix command. If using an unusual shell, it may be necessary to  use the
second syntax. On Windows systems, use the third (batch file) or fourth syntax
lines (assuming <tt>cmd.exe</tt> is used to process commands).
<p>
The <tt>sdfrag</tt> program can generate or process fragments according to
one or more methodologies. By default, all of the fragment generation methods are <i>disabled</i>.
The following methodologies are supported in <tt>sdfrag</tt>:
<blockquote>
<dl>
    <dt><tt>-recap<br />-norecap</tt>
    <dd>Generate fragments resulting from all combination of RECAP bond
    breaks.  A RECAP bond satisfies the RECAP [Lewell&nbsp;1998]
    retrosynthetic rules.  The <span class="nobr"><tt>-norecap</tt></span>
     option disables the <span class="nobr"><tt>-recap</tt></span>
    fragment generation. (This is the default.)
    <p>
    <dt><tt>-schuffenhauer<br />-noschuffenhauer</tt>
    <dd>Generate fragments from a Schuffenhauer hierarchical decomposition
    of a molecule [Schuffenhauer&nbsp;2007].
    The <span class="nobr"><tt>-noschuffenhauer</tt></span> option disables
    the <span class="nobr"><tt>-schuffenhauer</tt></span>
    fragment generation. (This is the default.)
    <p>
    <dt><tt>-ringblock<br />-noringblock</tt>
    <dd>Generate fragments resulting from deleting non-ring bonds (but
    keeping exocyclic double bonds and exocyclic charge-separated bonds).
    The <span class="nobr"><tt>-noringblock</tt></span> option disables
    the <span class="nobr"><tt>-ringblock</tt></span>
    fragment generation. (This is the default.)
    <p>
    <dt><tt>-ringatoms<br />-noringatoms</tt>
    <dd>Generate fragments resulting from deleting bonds involving at least
    one non-ring atom (but keeping exocyclic double bonds and exocyclic
    charge-separated bonds).
    The <span class="nobr"><tt>-noringatoms</tt></span> option disables
    the <span class="nobr"><tt>-ringatoms</tt></span>
    fragment generation. (This is the default.)
</dl>
</blockquote>

<p>
There are several general options that modify the behavior of
<tt>sdfrag</tt>:
<blockquote>
<dl>
    <dt><tt>-help</tt>
    <dd>Prints a syntax summary to <tt>stderr</tt> and then exits.
    <p>
    <dt><tt>-verbose</tt>
    <dd>Prints progress information to <tt>stderr</tt> during the run.
    <p>
    <dt><tt>-quiet</tt>
    <dd>Suppresses the printing of progress information to <tt>stderr</tt>.
    This is the default.
    <p>
    <dt><tt>-o</tt> <i>outputfilename</i>
    <dd>By default, output is written to <tt>stdout</tt>; however, if the
    <span class="nobr"><tt>-o</tt></span> option is present then output
    will be written to the given <i>outputfilename</i>.  Specifying a
    filename of <tt>.</tt> will suppress the output.
    <p>
    <dt><tt>-sdf</tt></dt>
    <dd>Specifies that subsequent files in the <tt>sdfrag</tt> argument
    list are SD files.  The format of the SD files can be further specified
    using an option of the form
    <span class="nobr"><tt>-sdf:<i>fmt</i></tt></span> where <i>fmt</i> is
    either <tt>V2000</tt> or <tt>V3000</tt>.  If <i>fmt</i> is omitted,
    output files will be written in V2000 format (the default).  It is not
    necessary to specify the format of input SD files.
    </dd>
    </p>
    <p>
    <dt><tt>-smi</tt></dt>
    <dd>Specifies that subsequent files in the <tt>sdfrag</tt> argument
    list are whitespace separated ASCII files.
    Note that this includes both input and output files.
    The files have one SMILES string per line, with each line beginning
    with the SMILES string;
    subsequent fields on a given line are considered to be data.
    The format of the ASCII file can be further specified using an
    option of the form <span class="nobr"><tt>-smi:</tt><i>f</i></span>
    where <i>f</i> is a single character: <tt>t</tt> for tab separated,
    <tt>c</tt> for comma separated, <tt>m</tt> for semicolon separated,
    and <tt>w</tt> for whitespace separated.
    Append a <tt>q</tt> to the option string to specify that items
    are surrounded by double quotes.  Append a <tt>p</tt> to the option
    string to specify that the property names should be written as
    the first line of the output file.  For example,
    <span class="nobr"><tt>-smi:tq</tt></span>
    specifies files in which each line contains tab-separated items
    with each item enclosed in double quotes.
    </dd>
    </p>
    <p>
    <dt><tt>-label<br />-nolabel</tt>
    <dd>If <tt>-label</tt> is specified, then <tt>sdfrag</tt> will add
    an attachment point to each bond that is cut during the fragmentation
    process.  This is represented by a methyl group with implicit hydrogens
    and the carbon atom labeled <b>A0</b>.
    The <span class="nobr"><tt>-nolabel</tt></span> option disables this
    addition (this is the default).  Fragments
    with attachment points are used by the Labeled Linker option of the
    <a href="../../apps/scaffold.htm">Scaffold Replacement</a>
    application.
    <p>
    <dt><tt>-unique<br />-nounique</tt>
    <dd>If <tt>-unique</tt> is specified, then <tt>sdfrag</tt> will remove
    (topologically) duplicate fragments from its output; this is the default.
    The <span class="nobr"><tt>-nounique</tt></span> option disables this
    duplicate removal.
    A temporary disk file is created (and subsequently deleted) in the
    <tt>$TMP</tt> directory (specifiable with the
    <span class="nobr"><tt>-tmp</tt></span> option).
    <p>
    <dt><tt>-tmp</tt> <i>directory</i>
    <dd>The location of the temporary file used by the
    <span class="nobr"><tt>-unique</tt></span>
    option will be created in the specified <i>directory</i>.  By default,
    this directory is
    <a class="svl" href="moe_const.htm">TMP</a>, the MOE temporary directory.
    <p>
    <dt><tt>-simplify<br />-nosimplify</tt>
    <dd>If <tt>-simplify</tt> is specified then fragments will be
    &quot;simplified&quot; prior to output; the
    <span class="nobr"><tt>-nosimplify</tt></span>
    disables simplification of fragments (the default).
    Terminal groups with no possibility of substitution that do not affect
    the conformation of the remaining atoms will be deleted from the fragment.
    For example, a terminal nitro group on benzene with no ortho
    substituents will be deleted.  The
    <span class="nobr"><tt>-simplify</tt></span> can greatly
    reduce the number of output fragments but at the expense of
    pharmacophore diversity.
    <p>
    <dt><tt>-carbonize<br />-nocarbonize</tt>
    <dd>If <tt>-carbonize</tt> is specified then fragments will be converted
    to neutral hydrocarbons immediately prior to their output.
    The <span class="nobr"><tt>-nocarbonize</tt></span> option disables
    this conversion (the default).
    <p>
    <dt><tt>-maxdiam</tt> <i>number</i>
    <dd>Fragments with a hydrogen-suppressed graph diameter exceeding the
    given value will not be output.  The graph diameter is the length of
    the longest path in the molecule.  The default limit is 10.
    <p>
    <dt><tt>-maxrotbond</tt> <i>number</i>
    <dd>Fragments with a more than the specified number of rotatable bonds
    will not be output.  The default limit is 4.
    <p>
    <dt><tt>-maxrotchain</tt> <i>number</i>
    <dd>Fragments with a more than the specified number of rotatable bonds
    in a contiguous chain will not be output.  The default limit is 4.
    <p>
    <dt><tt>-fragname</tt> <i>property</i>
    <dd>Each fragment is named <tt>root__<i>n</i></tt> using the property
    value as the <tt>root</tt>, suffixed with the <i>nth</i> occurrence.  The input
    structure number is used when the specified property is absent
    (<tt>S<i>n</i></tt>).
    By default, the input molecule name is used as the property value.
    <p>
    <dt><tt>-nofragname</tt>
    <dd>Fragments are not named.
    <p>
    <dt><tt>-3D</tt>
    <dd>Include 3D checking when removing duplicates.  New fragments that
    are topologically identical to
    previously-found conformers are retained if 
    judged sufficiently different in 3D conformation,
    otherwise they are discarded.
    The 3D conformation comparison is made by superimposing each new
    fragment onto each previously-found (topologically) duplicate conformer
    and then applying a threshold to
    the calculated RMS difference; if the threshold is exceeded,
    the new fragment is retained.  The threshold is
    specified using the <span class="nobr"<tt>-rmsd</tt></span> option.
    <p>
    <dt><tt>-rmsd</tt> <i>number</i>
    <dd>Sets the RMSD threshold used for 3D coordinate checking.  The
    default RMSD is 0.15.
    <dd>
</dl>
</blockquote>

<p>
<b>Note!</b> You must specify one of
<span class="nobr"><tt>-recap</tt></span>,
<span class="nobr"><tt>-schuffenhauer</tt></span>,
<span class="nobr"><tt>-ringblock</tt></span>,
<span class="nobr"><tt>-ringatoms</tt></span>,
<span class="nobr"><tt>-simplify</tt></span>,
or <span class="nobr"><tt>-carbonize</tt></span>
otherwise no output will be generated.
If none of the fragmentation options are specified (i.e. all are disabled)
then <span class="nobr"><tt>-simplify</tt></span> and/or
<span class="nobr"><tt>-carbonize</tt></span> can be used to process
each input molecule (e.g. to reprocess previously generated fragments).

<p>
<b>Argument Processing</b>.  The input arguments to <tt>sdfrag</tt> are
processed in left-to-right order.  An argument that starts with a dash
<span class="nobr">("-")</span> is
taken as an option specification.  An argument of the form
<span class="nobr">@<i>filename</i></span> specifies that the contents of
<i>filename</i> are read and inserted
into the argument stream for further argument processing (which is useful to
avoid long command lines or to record commonly used arguments and files).
Any other argument form is taken to be an input file.<br /><br />
<b>Note:</b> the
@<i>filename</i> can only appear where an option or filename would normally
be processed and cannot be used as the second argument to an option
(e.g. <span class="nobr"><tt>-o</tt>&nbsp;@<i>filename</i></span>
specifies <span class="nobr">@<i>filename</i></span> as
the actual output file).<br /><br />
The input files are processed in left-to-right order.
Input files containing "*" or "?" are
interpreted as filename patterns and each will be substituted with all
filenames that match the given pattern; for example, <tt>*.sdf</tt> will
be substituted with all filenames in the current directory that have a
<tt>.sdf</tt> suffix.
The input file
<span class="nobr">"-"</span>
is interpreted as <tt>stdin</tt> (for use with pipes).  If there are no
explicit input files, <tt>stdin</tt> is used as the single input file.

<p>
<b>Warning!</b>  The data fields, molecule names and ID numbers of the
input molecules are stripped and not copied to the output.  Stereochemistry
is also stripped from the output when using the Schuffenhauer fragmentation
method.

<p><b>Examples</b>.
Typically, a number of files will have to be processed to produce a
comprehensive set of fragments.  The following procedure is recommended:
<ol>
<li>Use <a class="svl" href="sdwash.htm">sdwash</a> on each of the files to
enumerate protonation states, fix functional group abbreviations, etc.
<p>
<li>Use <a class="svl" href="sdfilter.htm">sdfilter</a> on each of the
resulting files to remove compounds with undesirable elements or
other properties (e.g. retain only drug-like compounds).
<p>
<li>Use <tt>sdfrag</tt> on each or all of the resulting files to generate
unique fragments.
</ol>
To perform Schuffenhauer decomposition to generate fragments for each entry
in a given SD file and output the unique fragments to an SD file,
the following command can be used:

<blockquote><tt>
sdfrag -unique -schuffenhauer structures.sdf -o fragments.sdf
</tt></blockquote>

As the <tt>-sdf</tt> option is omitted, <tt>fragments.sdf</tt> will be
written as an MDL V2000 SD file.

<p>
For extremely large numbers of compounds (that generate more than 5 million
unique fragments) or if <span class="nobr"><tt>-nounique</tt></span>
 is used, it may be better
to use <tt>sdfrag</tt> on a number separate input files and then
use <a class="svl" href="sdsort.htm">sdsort&nbsp;-unique</a> on the resulting
fragment files
to eliminate duplicates and produce the final fragment file.
</ol>

<p>
Once the fragments have been produced, they can be submitted to a
conformational analysis application to generate a 3D fragment database.
<b>Note!</b> If the input files contain 3D structures, 
the <span class="nobr"><tt>-nounique</tt></span> option should be used
to prevent the removal of
different conformers of otherwise identical fragments.
The output fragments preserve the coordinates of the input structures.

<h2>References</h2>

<table cellpadding="5" border="0">
<tr>
<td>[Lewell&nbsp;1998]
<td>
Lewell, X. Q., Judd, D. B., Watson, S. P., Hann, M. M.;
RECAP - Retrosynthetic Combinatorial Analysis Procedure: A Powerful New
Technique for Identifying Privileged Molecular Fragments with Useful
Applications in Combinatorial Chemistry;
<i>J. Chem. Inf. Comput. Sci. 38</i> (<b>1998</b>) 511&ndash;522.
<tr>
<td>[Schuffenhauer&nbsp;2007]
<td>
Schuffenhauer, A., Ertl, P., Roggo, S., Wetzel, S. Marcus A.,
Koch, M. A., Waldmann, H.;
The Scaffold Tree - Visualization of the Scaffold Universe
by Hierarchical Scaffold Classification;
<i>J. Chem. Inf. Model. 47</i> (<b>2007</b>) 47&ndash;58.
</table>

<h2>See Also</h2>

<a class="svl" href="sddesc.htm">sddesc</a><br />
<a class="svl" href="sdfilter.htm">sdfilter</a><br />
<a class="svl" href="sdsort.htm">sdsort</a><br />
<a class="svl" href="sdstereo.htm">sdstereo</a><br />
<a class="svl" href="sdwash.htm">sdwash</a>

<noscript>
	<hr noshade="noshade" />
	<font size="2"> Copyright &copy; 1997&ndash;2015
	<a href="http://www.chemcomp.com">Chemical Computing Group Inc.</a> </font>
</noscript>
<div id="MoeFooter"></div>
</body>
</html>
