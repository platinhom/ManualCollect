<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">


<!--
!!    MOE Online Manuals
!!    COPYRIGHT (C) 1997-2015
!!        CHEMICAL COMPUTING GROUP INC.  ALL RIGHTS RESERVED.
!!-->

<head>

<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />

<script type="text/javascript" 
src="../../include/jsincludes_moe.js"></script>

<link rel="stylesheet" type="text/css"
href="../../include/manstyle.css" />


<meta keywords>
<meta functions rot3d_mmMul, rot3d_mvMul>

<title>Rotation Functions: rot3d_mmMul, rot3d_mvMul</title>

</head>


<body>
<div id="MoeHeader"></div>
<noscript>
	<span class="warning">Warning: JavaScript is disabled. This page will not display correctly.</span>
	<h1 class="title">MOE Documentation</h1>
	<hr noshade="noshade" />
	<style>.LaTeX {color: #C08080;}</style>
</noscript>

<h2>Syntax</h2>

<pre>
    M = <a class="fcnlink" href="#rot3d_mmMul">rot3d_mmMul</a> Mlist
    V = <a class="fcnlink" href="#rot3d_mvMul">rot3d_mvMul</a> [M,v]
</pre>

<p><a name="rot3d_mmMul"></a></p>
<h2>Description</h2>

<pre>
M = <span class="fcndef">rot3d_mmMul</span> Mlist
</pre>

<p>Performs matrix-matrix multiplication on a list of square matrices. Its
typical use would be for concatenating matrix transformations such as 3D
rotations. The resulting matrix is returned. <tt>Mlist</tt> is a list of
matrices; each matrix is supplied as a vector of row-vectors. Thus, the
matrix:</p>

<p>
<table cellspacing="0" border="0" cellpadding="4" width="109">
  <tr>
    <td width="33%" valign="top"><i>a</i>1</td>
    <td width="33%" valign="top"><i>a</i>2</td>
    <td width="33%" valign="top"><i>a</i>3</td>
  </tr>
  <tr>
    <td valign="top"><i>b</i>1</td>
    <td valign="top"><i>b</i>2</td>
    <td valign="top"><i>b</i>3</td>
  </tr>
  <tr>
    <td valign="top"><i>c</i>1</td>
    <td valign="top"><i>c</i>2</td>
    <td valign="top"><i>c</i>3</td>
  </tr>
</table>


<p>is given in <tt>Mlist</tt> as:

<pre>
    [ [a1,a2,a3], [b1,b2,b3], [c1,c2,c3] ]
</pre>

<p>and <tt>Mlist</tt> is a vector of such vectors:</tt>

<pre>
    [ [ [a1,a2,a3], [b1,b2,b3], [c1,c2,c3] ], [ [d1,d2,d3], ... ], ... ]
</pre>

<p>The returned matrix <tt>M</tt> is given in the same (row-wise) form. The
matrices in <tt>Mlist</tt> are multiplied from left to right, in the
order they are provided. </p>

<pre>
    svl&gt; MX = rot3d_XRotation (PI/2)   // rotation matrix: 90 degrees about X
    svl&gt; MY = rot3d_YRotation (PI/3)   // rotation matrix: 60 degrees about X
    svl&gt; MZ = rot3d_ZRotation (PI/4)   // rotation matrix: 45 degrees about X
    svl&gt; M = rot3d_mmMul [MX, MY, MZ]  // M does all three rotations
</pre>

<p><a name="rot3d_mvMul"></a></p>
<p><hr noshade="noshade" />

<pre>
V = <span class="fcndef">rot3d_mvMul</span> [M,v]
</pre>

<p>Applies a matrix transformation to a vector <tt>v</tt>.
The transformed vector is returned in the same form. <tt>M</tt> cannot
be a list of matrices, and <tt>v</tt> cannot be a list of vectors. </p>
<tt>
 
<p>M</tt> is specified in row-major order.  For example, if <tt>M</tt>
is a 3x3 matrix, it is given as a vector of row-vectors. Thus,</p>

<p> 
<table cellspacing="0" border="0" cellpadding="4" width="109">
  <tr>
    <td width="33%" valign="top"><i>a</i>1</td>
    <td width="33%" valign="top"><i>a</i>2</td>
    <td width="33%" valign="top"><i>a</i>3</td>
  </tr>
  <tr>
    <td valign="top"><i>b</i>1</td>
    <td valign="top"><i>b</i>2</td>
    <td valign="top"><i>b</i>3</td>
  </tr>
  <tr>
    <td valign="top"><i>c</i>1</td>
    <td valign="top"><i>c</i>2</td>
    <td valign="top"><i>c</i>3</td>
  </tr>
</table>

 
<p>is supplied as:
 
<pre>
    [ [a1,a2,a3], [b1,b2,b3], [c1,c2,c3] ]
</pre>

<pre>
    svl&gt; M = [ [1,0,0], [0,10,0], [0,0,100] ]
    svl&gt; rot3d_mvMul [ M, [1,2,3] ]
    [1,20,300]

    svl&gt; M = rot3d_XRotation (PI/2)     // rotation matrix: 90 degrees about X axis
    svl&gt; rotpos = rot3d_mvMul [M, aPos Atoms[]]  // rotate atom positions
    svl&gt; aSetPos [ Atoms[], rotpos ]    // rotate the atoms
</pre>

<h2>See Also</h2>
<p><table>
<tr>
<td valign="top">
    <a class="svl" href="rot_xyz.htm">rot3d_Rotation</a><br />
    <a class="svl" href="rot_iden.htm">rot3d_Identity</a><br />
    <a class="svl" href="rot_vang.htm">rot3d_vAngle</a><br />
    <a class="svl" href="rot_vang.htm">rot3d_vBisector</a><br />
    <a class="svl" href="rot_vcro.htm">rot3d_vCross</a>
</td>
<td valign="top">
    <a class="svl" href="rot_vcro.htm">rot3d_vNorm</a><br />
    <a class="svl" href="rot_vcro.htm">rot3d_vNormalize</a><br />
    <a class="svl" href="rot_prt.htm">rot3d_Print</a><br />
    <a class="svl" href="rot_cov.htm">rot3d_Covariance</a><br />
    <a class="svl" href="rot_cov.htm">rot3d_CovarianceEigenSystem</a>
</td>
</tr>
</table>

<noscript>
	<hr noshade="noshade" />
	<font size="2"> Copyright &copy; 1997&ndash;2015
	<a href="http://www.chemcomp.com">Chemical Computing Group Inc.</a> </font>
</noscript>
<div id="MoeFooter"></div>
</body>
</html>


