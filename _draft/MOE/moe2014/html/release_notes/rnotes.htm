<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">


<!--
!!    MOE Online Manuals
!!    COPYRIGHT (C) 1997-2015
!!        CHEMICAL COMPUTING GROUP INC.  ALL RIGHTS RESERVED.
!!-->

<head>

<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />

<script type="text/javascript" 
src="../include/jsincludes_moe.js"></script>

<link rel="stylesheet" type="text/css"
href="../include/manstyle.css" />

<title>MOE 2014.09 Release Notes</title>

</head>

<body>
<div id="noOnlineLinks"></div>
<div id="MoeHeader"></div>
<noscript>
    <span class="warning">Warning: JavaScript is disabled. This page will not display correctly.</span>
	<style>.LaTeX {color:rgb(192,128,128);}</style>
<!-- **Ensure header always displays, even if javascript is disabled. -->
	<a class="linkAlways" href="../index.htm"> <img src="../images/ccglogo.png"
	alt="CCG Logo" align="right" width="169" height="60" border="0" /> </a>
	<h1 class="title">Legal Information</h1>
	<hr noshade="noshade" />
</noscript>
<!-- **End Header** -->

<p>The 2014.09 release of Chemical Computing Group's
Molecular Operating Environment (MOE) software includes a variety of
new features, enhancements and changes that are summarized in
this document.
</p>


<!-- ======================== UPDATE 2014.0901 ======================= -->
<p>
<table width="100%"><tr bgcolor="#cccccc"><td align="center"><b>
MOE 2014.0901
</b></td></table>
</p>

<p>The 2014.0901 update to Chemical Computing Group's Molecular Operating Environment (MOE) software includes the following enhancements and changes:
</p>


<p style="margin-bottom: 0;">
<img src="../images/blueball.gif" />
<a href="../proteins/probuild.htm"><b>Protein Builder.</b></a>
    <ul style="margin-top: 0;">
    <li>An option to use AMBER residue names for standard residue variants
has been added.
    </li><li>A field for appending or prepending a multiple residue sequence specified by single-letter names has been added.
    </li>
    </ul>
</p>

<p>
<img src="../images/blueball.gif" />
<a href="../moe/molsystems/build.htm"><b>Builder H Color.</b></a>  In the Builder, added Hâ€™s now inherit the color of their attached heavy atom provided there is a consistent coloring of atoms in the whole residue.
</p>

<p>
<img src="../images/blueball.gif" />
<a href="../moe/fcnref/sddesc.htm"><b>sddesc.</b></a> A new <tt>-smi:p</tt> option causes field headers to be written to the output ASCII file.
</p>

<p style="margin-bottom: 0;">
<img src="../images/blueball.gif" /><b>Bug Fixes.</b>
Various bugs have been fixed, including:
    <ul style="margin-top: 0;">
    <li><a href="../install/install.htm#RunEnv"><tt>MOE_SVL_RUNPATH</tt></a> is now properly honored.
    </li><li>The <a href="../apps/frag_combi.htm">Combinatorial Builder</a> now honors different attachment point locations on the same R-group.
    </li><li>
   The <a href="../mdb/dbio.htm#ExportingData">Database Save As</a> One Entry per File mode now properly generates unique filenames.
    </li><li>
    The <a href="../apps/docking.htm">Dock</a> Template Forcing batch file is now correctly generated.
    </li><li>Saved views in <a href="../apps/filesave.htm#MOE">.moe files</a> are now properly restored.
    </li><li>Auto-save when  <a href="../mdb/db.htm">Database Viewer</a> display attributes are changed can now be disabled to prevent changes to the database file modification date when only the display is changed and not the database content.
    </li><li>The SVL function <a href="../moe/fcnref/protonat.htm"><tt>Deprotonate</tt></a> now works properly.
    </li><li>A variety of <a href="../proteins/moeproject.htm">MOE Project</a> and
<a href="../proteins/pdb_mdb.htm#dbupdateDBPanel">Protein Database Update</a> bugs are now fixed.
    </ul>
</p>


<!-- ----------------------------- CORE SYSTEM ------------------------ -->
<p>
<table width="100%"><tr bgcolor="#cccccc"><td align="center"><b>
Core System
</b></td></table>
</p>

<div class="extra_info">

<p>Please note that the Java requirement for MOE has been raised from 1.4 to
1.5. MOE now requires Oracle (Sun) Java version 1.5 or higher.</p>

</div>

<p><img src="../images/blueball.gif"> <span class="new"><b>NEW!</b></span>
<b>Start-in Configuration</b>.

The Configuration Options panel <span class="nobr">(<span class="menu">MOE |
	Settings</span>)</span> has a new
<a href="../appendix/settings.htm#Miscellaneous"><b>Start In Folder</b></a>
option on the <b>Miscellaneous</b> page.
</p>

    <ol>

	<p><li><span class="tip">Important:</span> The behavior of MOE has
	changed in this release.  The default current working directory on
	startup of MOE/gui is now the home directory, as specified by the
	constant <tt>HOME</tt> in MOE.

        </li></p><p><li>

	The home folder is represented in the Configuration Options panel
	Start In Folder textfield by the tilde character <tt><b>~</b></tt>.

        </li></p><p><li>

	To set the default working directory to the current directory (which was the
	default behavior in 2013), enter a <tt><b>.</b></tt> (a period) in the
	Start In Folder textfield.

        </li></p><p><li>

	Note that the default setting for MOE/batch has not changed, and
	remains the same as for 2013.

        </li></p><p><li>

	The Start In Folder has a <b>CWD</b> button, which will set the
	Start In Folder value to the MOE current working directory.

        </li></p><p><li>

	<span class="new"><b>NEW!</b></span> <b>-cd</b>.  A new <a
	    href="../install/install.htm#RunSwitch">command-line switch</a> has
	been added for setting the start-in directory when launching MOE.
	For example, on Unix, to start MOE from the current directory:
	<span class="nobr"><tt>% $MOE/bin/moe -cd .</tt></span>

        </li></p><p><li>

	The configured Start In Folder can be overridden. For example,
	to start MOE from a given directory, say &quot;<tt>c:\opt\MyDir</tt>&quot;, 
	the Windows shortcuts can be
	specified in one of the following ways:

	    <ul>

	    <p><li>

	    Target: <tt>c:\moe\bin\moe.exe <b>-cd c:\opt\MyDir</b></tt><br />
	    Start in: <tt>&quot;&quot;</tt> (empty; will be ignored even
	    when non-empty)

	    </li></p><p><li>

	    Target: <tt>c:\moe\bin\moe.exe</tt><br />
	    Start in: <tt><b>c:\opt\MyDir</b></tt>

	    </li></p>

	    </ul>

        </li></p>

    </ol>
</p>

<p><img src="../images/blueball.gif"> <span class="new"><b>NEW!</b></span>
<b>.lnk File Support</b>.
MOE can now resolve Microsoft shortcut (.lnk) files that point to
files and directories:

<ul>
    <p><li>The <span class="menu">MOE | File |
	<a href="../moe/gui/fileopen.htm">Open</a></span> panel
    can now resolve Microsoft <tt>.lnk</tt> shortcuts pointing to
    files and directories.
    </li></p><p><li>On Windows, the Open panel has an icon
	for connecting to the Favorites folder of the Windows File Explorer.
    </li></p><p><li>MOE now correctly identifies the Windows Desktop location,
	    even when the Desktop is in a non-standard location.
    </li></p>
</ul>

</p>

<p><img src="../images/blueball.gif"> <span class="new"><b>NEW!</b></span>
<b>Windows Desktop Shortcuts</b>. Functionality for creating and modifying
Windows desktop shortcuts has been added to the Configuration Options Panel
(<span class="menu">MOE | Settings | Miscellaneous</span>).
</p>

<p><img src="../images/blueball.gif">
<b>Windows File Associations</b>.  The Configuration Options panel now offers a
<b>File Associations</b> option on the <a
href="../appendix/settings.htm#Miscellaneous"><b>Miscellaneous</b></a>
page, for associating file types with MOE.  Files with one of the
specified extensions will be opened in MOE on double-click or when
using the default Open action.
</p>

<p><img src="../images/blueball.gif"> 
<b>Java Executable Configuration</b>. The preferred version of Java 
to use with MOE can be specified via the Configuration Options Panel
(<span class="menu">MOE | Settings | Java/JDBC Database</span>).
</p>

<p>
<img src="../images/blueball.gif">
<a href="../install/web_inst.htm" class="toc"><b>MOE/web Framework</b></a>.

The MOE/web framework has been redesigned and offers the
following features:

<p>
<ol>

    <p><li>

    <b>Long running jobs</b>.

    Jobs that are expected to have long run times can now be made to release
    the connection to the web server while waiting in order not to consume
    resources unnecessarily.

    </li></p><p><li>

    <b>Large data I/O</b>. The new implementation of MOE/web will allow
    for large requests to be sent and large responses to be written.

    </li></p><p><li>

    <b>Data Storage</b>. The server now provides both temporary work spaces and
    permanent storage.  The temporary work space is used for holding
    intermediate files which will be deleted when the job ends.  The
    permanent directory is uses for saving persistent data.  The location
    of the permanent directory can be controlled by a MOE/web command
    line switch.  The directory expiry time can also be specified.


    </li></p><p><li>

    <b>Error reporting</b>. The MOE/web framework now allows for proper
    HTTP codes and detailed messages to be reported.

    </li></p><p><li>

    <b>Command-line switches</b>. A number of new switches are available to
    control such attributes as storage and loading of additional SVL files:

        <p>
        <ul>

	    </li><li><tt>-moewebPerm</tt>: Specifies the location of the
	    permanent data directory.

	    </li><li><tt>-moewebDir</tt>: Specifies where server data
	    should be written when MOE/web is run locally.

	    </li><li><tt>-load</tt>: Specifies files or directories whose
	    contents are always loaded on all moebatch workers.

	    </li><li><tt>-add</tt>: Specifies files that are registered when
	    MOE/web starts, and are loaded to individual moebatch workers
	    only at the time of a SOAP request.

	    </li>
	</ul>
	</p>

    </li></p><p><li>

    <b>Configuration Options</b>. A new MOE/web page has been added
    to the Configuration Options with the following features:
	<p>
        <ul>
	    <li>
	    <b>Server List</b>. A list of available servers is
	    given on the page.  The default server for launching
	    MOE/web can be chosen from this list.
	    </li>
	    <li>
	    <b>Test Server</b>. Connection to the default server
	    can be tested.
	    </li>
	    <li>
	    <b>Add Server</b>. New servers can be added to
	    the list of servers.
	    </li>
	    <li>
	    <b>Start/Stop Local Server</b>. The local server can
	    be started and stopped from this page.
	    </li>
	    <li>
	    <b>Start MOE/web</b>. MOE/web can be launched
	    on the current default server.
	    </li>
	</ul>
	</p>

    </li></p>

</ol>
</p>

<p>
<img src="../images/blueball.gif">
<a href="../install/web_inst.htm#SOAP" class="toc"><b>SOAP Web Service
	Support</b></a>.  The SOAP web services that be created using SVL have
been enhanced commensurately with the new features offered by MOE/web.

<ol>
    <p><li>

    <b>Long running jobs</b>. SOAP functions can
    be invoked as long running jobs that will release server resources
    while waiting for results.

    </li></p><p><li>

    <b>Cluster mode</b>. SOAP functions can be run in a distributed
    fashion by the MOE/web framework.

    </li></p><p><li>

    <b>Progress reporting</b>.  There are now provisions for SOAP
    functions to relay progress information back to the client.

    </li></p><p><li>

    <b>URL</b>.  Data can now be transferred in the form of either
    a stream or a file (URL).  

    </li></p>
</ol>

</p>


<p>
<img src="../images/blueball.gif">
<a href="../moe/gui/se.htm" class="toc"><b>Sequence Editor</b></a>.
The Sequence Editor has been enhanced as follows:

<ul>
    <p><li>

    <b>4-letter residue display</b>. The Sequence Editor can now display
    4-letter residue names.  This is in support of non-natural amino acids (see
    <a href="#NNAA">below</a>).

    </li></p><p><li>

    <b>Gap Column hiding</b>.  Gap Columns in the Sequence Editor can now be
    hidden using the new <span class="menu">SE | Column Popup | Hide
	(SE) | Gap Columns</span> sub-menu.

    </li></p><p><li>

    <b>Gap selection</b>.  Gaps in the alignment can be selected
    using the new <span class="menu">SE | Column Popup | Select | Gaps</span>
    menu item.  The gap must exist across all chains for the column to be
    selected.

    </li></p>
</ul>
</p>

<p>
<img src="../images/blueball.gif">
<b>Multi-monitor support</b>.

Support for multiple monitors has been enhanced:

    <ol>
	<p><li>

	<b>Cross-platform support</b>.  Multiple monitors are now supported on
	all platforms (Windows, Linux, and MacOSX).

	</li></p><p><li>

	<b>Choice of primary display</b>.  The monitor to use as the primary
	display for panels and dialogs can be set in the <a
	    href="../appendix/settings.htm#UserInterface">User Interface</a> page of the
	Configuration Options panel.  The following choices are available:

	<p>
	<ul>
	    <li><b>Primary monitor</b>.  As defined by the operating system.

	    </li><li><b>MOE</b>. The monitor in which the MOE Window resides.

	    </li><li><b>Mouse</b>. The monitor in which the mouse is currently
	    located.

	    </li>
	</ul>
	</p>

	</li></p><p><li>

	<b>Panel positions</b>.  MOE panels and popups are opened positioned
	entirely within one monitor.  The distribution of MOE windows and
	panels across monitors can now be saved when using the <span
	    class="menu">Window Positions | Save</span> function in the <a
	    href="../appendix/settings.htm#UserInterface">User Interface</a> page of the
	Configuration Options panel.

	</li></p><p><li>

	<b>Fullscreen mode</b>.  Fullscreen mode will occupy just one
	monitor, and newly opened MOE windows or panels will open on a
	monitor not showing the fullscreen display so as not to obscure the
	view.

	</li></p>
    </ol>
</p>

<p>
<img src="../images/blueball.gif">
<b>Widget Toolkit</b></a>.
The SVL widget toolkit has been enhanced, and now offers the
following features:

    <ul>

	<p><li>

	<a href="../svl/svlgui/fcnref/wt_core.htm" class="toc"><b>bubbleHelp
		Graphics</b></a>. Colored graphic objects can now be displayed
	    inside bubbleHelp.

	</li></p><p><li>

	<a href="../svl/svlgui/fcnref/wt_check.htm"><b>Checkbox styles</b></a>.
	A variety of Checkbox display styles is now available.


	</li></p>
    </ul>
</p>

<p>
<img src="../images/blueball.gif">
<b>MOE Interface</b>.
    <ul>

	<p><li>

	<b>Custom atom/ribbon/residue colors</b>.  The Atom, Ribbon, and
	Residue popups now permit coloring of atoms, ribbons, and residues,
	respectively, by arbitrary colors using a color widget.

	</li></p><p><li>

	<b>Contacts</b>. Non-bonded contact display (<b>H Bond</b> and
	<b>Clash</b> in the MOE Footer) can now be limited to:

	    <ul>
		<li><b>Tag</b>.  Within the same tag;

		</li><li><b>Tag+</b>.	Within the same tag or across tags in
		different atom classes (receptor, solvent, ligand).

		</li>
	    </ul>


	</li></p><p><li>

	<b>Warning Beep</b>.  Enable/disable control of the warning beep is now
	possible through the <a
	    href="../appendix/settings.htm#Miscellaneous">Miscellaneous</a>
	page of the Configuration Settings panel.

	</li></p><p><li>

	<b>F11</b>. An additional configurable function key has been
	added, and can be assigned an action on the
	<a href="../appendix/settings.htm#FKeys">Function Keys</a> page
	of the Configuration Options panel.

	</li></p>
    </ul>
</p>

<!--
<p>
<img src="../images/blueball.gif">
<a href="../moe/pot.htm" class="toc"><b>Configuration</b></a>.
    <ul>
    <li><p><span class="new"><b>NEW!</b></span>
    <b>Protein/Sequence Defaults</b>. In MOE | Settings.
    </li>
    <li><b>Disable Beep</b>.
    </li>
    </ul>
</p>
-->

<p>
<img src="../images/blueball.gif">
<a href="../moe/gui/system.htm" class="toc"><b>System Manager</b></a>.
    <ul>

	<p><li>

	<b>Inert state</b>. The partial inert state of tags and groups
	is remembered in the System Manager and preserved when global
	inert states are applied and then removed.

	</li></p><p><li>

	<b>Group By</b>. Indicated in chain header.  A Group By
	menu is now available in the System Manager when groupings
	are available.  Group associations can be specified
	by delimiting group names using braces <b>{ }</b> in chain headers.

	</li></p>
    </ul>

</p>

</ul>

<p>
<img src="../images/blueball.gif">
<b>Custom and Patch directories</b>.
The custom and patch directories for MOE have changed. They are now
<tt>$MOE/custom</tt> and <tt>$MOE/patch</tt>. Previously, they were
<tt>$MOE/lib/svl/custom</tt> and <tt>$MOE/lib/svl/patch</tt>.
</p>

<p>
<img src="../images/blueball.gif">
<b>V3000 Support</b>.
MOL V3000 support has been implemented in MOE.  Unlike the
V2000 MOL format, the V3000 format is not bound by the 999
atom limit.
</p>

<p>
<img src="../images/blueball.gif">
<b>Mouse Support</b>.
Fine scroll wheel mouse support has been added in the current
version of MOE.
</p>


<p>
<img src="../images/blueball.gif">
<b>Chirality</b>.
A minor correction was made to the topological stereochemistry definition
for atoms above Row 3 of the periodic table.  In certain rare cases,
this may affect the <tt>chiral</tt> and <tt>chiral_u</tt> descriptors.
</p>


<!-- ----------------------------- APPLICATIONS ------------------------ -->
<p>
<table width="100%"><tr bgcolor="#cccccc"><td align="center"><b>
Applications
</b></td></table>
</p>

<p><img src="../images/blueball.gif"> <span class="new"><b>NEW!</b></span>
<a href="../proteins/moeproject.htm" class="toc"><b>MOE-Project</b></a>.

The 2014 release of MOE features a new application for organizing and managing
disparate project data.  Structures, sequence data, alignments, electron
density, protein-ligand interaction fingerprints, and property data are united
in a single searchable database that can be updated as new structures become
available.

<ol>
    <li><p><span class="new"><b>NEW!</b></span>
    <a href="../moe/databases.htm" class="toc"><b>Protein Families</b></a>.

    A collection of project databases, selected for size and for interest as
    targets, is included as part of the standard MOE distribution:

    <p><ul>
	<li>ABC Transporter</li>
	<li>Aspartic Protease</li>
	<li>Bromodomain</li>
	<li>Carbonic Anhydrase</li>
	<li>GPCR Class A</li>
	<li>Histone Acyltransferase</li>
	<li>Histone Deacetylase</li>
	<li>Ionotropic Glutamate Receptor</li>
	<li>Matrix Metalloprotease</li>
	<li>Nuclear Receptor</li>
	<li>Phosphodiesterase</li>
	<li>Phosphoinositide 3-Kinase</li>
	<li>Protein Kinase</li>
	<li>Trypsin-like Serine Proteinase</li>
	</li>
    </ul></p>

    <p>
    These domain-centric databases, located in <tt>$MOE/lib/project</tt>, can
    be searched using the <a href="#GeneralizedFamilyPanel">Project
	Search</a> panel, described below.

    </p>

    <p><b>Note:</b> The old format kinase and GPCR databases are still located
    in <tt>$MOE/lib/kinome.mdb</tt> and <tt>$MOE/lib/gpcr.mdb</tt>,
    respectively, in this version of MOE.  Please note, however, that they are
    scheduled for deprecation in a future version of MOE.

    </p></li>

    <li><p>

    <a href="../proteins/moeproject.htm#ReferenceFile" class="toc"><b>.moe
	    Reference File</b></a>.  A reference file saved in MOE format is
    required for building a project database.  The reference file specifies
    both the alignment as well as the regions of interest in the project data,
    and additionally permits controlling the rendering, annotations, and
    viewing parameters of the structures stored in the database.  The reference
    files of the project databases distributed with MOE have been carefully
    prepared to highlight the regions of interest when structures are loaded
    from the database into MOE, and are located in <tt>$MOE/lib/project</tt>.

    </p></li>

    <li><p>

    <a href="../proteins/moeproject.htm#ConfigFile"
	class="toc"><b>Configuration File</b></a>.  A project database
    configuration file is required for building a project database.  The
    configuration file, encoded in XML format, specifies what database fields
    to create, how they are to be populated when the project database is
    generated, and in what order they are to be arranged.  A sample template
    configuration file is provided as
    <tt>$MOE/web/moeproj/project_template.xml</tt>.  The configuration files
    for the project databases distributed with MOE are located in
    <tt>$MOE/lib/project</tt>.  Configuration files can be edited using either
    a text editor, or the MOE/web Configuration File Editor, described below.

    </p></li>

    <li><p><span class="new"><b>NEW!</b></span>

    <a href="../moe/moeweb_intro.htm#Configure_Project_Database"
	class="toc"><b>Web-based Configuration File Editor</b></a>.

    The current MOE distribution features a new MOE/web application for
    creating and editing project configuration files without requiring any
    knowledge of XML.  This web-based editor simplifies configuration of
    project database fields, and also allows for specifying how the database
    will be displayed in a MOE Database Viewer.

    </p></li>

    <li><p><b>Source Data</b>. 

    Project source data for building the project database can either be taken
    from in-house data repositories, or be downloaded from <a
    href="http://www.chemcomp.com/PSILO-Protein_Structure_Database_System.htm"
	class="toc">PSILO</a> or the RCSB.  When using local data, the root of
    the source directory tree must be specified; the root
    and all sub-directories will be searched recursively for data files.

    </p></li>

    <li><p>
    <img src="../images/blueball.gif"> <span class="new"><b>NEW!</b></span>
    <a name="GeneralizedFamilyPanel"></a>
    <a href="../proteins/projsrch.htm" class="toc"><b>Project Search</b></a>.

    A new search panel, <span class="menu">MOE/SE | Protein | Search |
	<i>family</i></span>, generalized from the former Kinase Search panel,
    is available for searching any project database.  The panel features the
    following enhancements:</p>

    <ul>

	<p><li>Additional fields can be specified for searching by making the
	appropriate settings in the <a
	    href="../proteins/moeproject.htm#ConfigFile" class="toc">project
	    database configuration file</a>.  The fields can be specified to be
	displayed in the general list, to be displayed using an individual
	widget, and/or to be able to be presented as a statistics plot.

	</li></p><p><li>

       The <span class="menu">Protein | Search</span> menu is automatically
       populated from the project databases found in the directories specified
       in the MOE Configuration Options panel, as described <a
	   href="#ConfigProjectPath">below</a>.  The menu items themselves are
       taken from the <b>title</b> field as specified in the Project Database
       Update panel, described <a href="#ProjectDatabaseUpdate">below</a>, which
       is saved to the database.

	</li></p><p><li>

	The project database can be searched based on UID and residue position.

	</li></p><p><li>

	The project database can be searched on both structure and sequence.

	</li></p><p><li>

	The project database can be filtered for unique sequences and/or
	PDB codes.
	
	</li></p>
    </ul>

    <p><b>Note:</b> The original Kinase Search panel has been moved to
    <tt>$MOE/sample/obsolete</tt> in the current version of MOE.

    </p></li>

    <li><p>
    <img src="../images/blueball.gif"> <span class="new"><b>NEW!</b></span>
    <a name="ProjectDatabaseUpdate"></a>

    <a href="../proteins/pdb_mdb.htm#dbupdateDBPanel" class="toc"><b>Project Database
	    Update</b></a>.

    A new project database creation and update panel
    supersedes the previous Database Update panel.  
	It is launched by typing <tt>run 'dbupdate.svl'</tt> from the CLI.
	This new panel
    requires a .moe reference file, XML configuration file, and
    source data path for generating a new database.  The panel can
    be used to update an already-existing database.  Note that,
    as with the previous version of the panel, the update can be
    scripted into a batch file for auto-update at scheduled intervals.

    </p>

    <p><b>Note:</b> The original Database Update panel has been moved to
    <tt>$MOE/sample/obsolete</tt> in the current version of MOE.

    </p></li>

    <li><p>
    <img src="../images/blueball.gif">
    <a href="../apps/plif.htm" class="toc"><b>PLIF</b></a>.

    Project databases can be generated with a precalculated protein-ligand
    interaction fingerprint (PLIF) field which can subsequently be used for
    PLIF analysis.  The project databases distributed with MOE all contain a
    PLIF field.

    </p></li>

    <li><p>
    <img src="../images/blueball.gif"> <span class="new"><b>NEW!</b></span>

    <a href="../moe/gui/se.htm#AnnotateSequence" class="toc"><b>Annotate
	    Sequence</b></a>.

    The new menu item, <span class="menu">SE | Annotate | Sequence</span>,
    performs generalized project annotation.  The structures in the system are
    examined, and if they are detected as belonging to a recognized project
    database, they will be annotated in accordance with the project
    specifications.  Databases are recognized to be project databases if they
    are found in the Project Path configuration setting, described <a
	href="#ConfigProjectPath">below</a>.

    </p></li>

    <li><p>
    <img src="../images/blueball.gif"> <span class="new"><b>NEW!</b></span>

    <a href="../moe/gui/se.htm#Constraints" class="toc"><b>Alignment
	    Constraint</b></a>.

    Similarly to annotation, <span class="menu">SE | Alignment | Constraints |
	Automatic</span> offers a generalized project constraint creation
    ability.  If the structures in the system are detected as belonging to a
    recognized project database, residue constraints (if any) will be created
    in accordance with the project specifications.  Databases are recognized to
    be project databases if they are found in the Project Path configuration
    setting, described <a href="#ConfigProjectPath">below</a>.

    </p></li>

    <li><p>
    <img src="../images/blueball.gif">
    <a name="ConfigProjectPath"></a>

    <a href="../appendix/settings.htm" class="toc"><b>MOE Configuration
	    Options</b></a>.

    The Protein Defaults page of the Configuration Options panel now features
    a new <b>Project Path</b> field for entering one or more directories which
    will be searched for project databases.  These directories will be used by
    MOE to determine what is a known project and what structures are recognized
    as belonging to projects. Note that only databases in the Project Path will
    be included in the project database. The
    Project Path is used for populating the <span class="menu">Protein |
	Search</span> menus in the MOE Window and Sequence editor, in
    populating the list of known projects in the new Project Database Update
    panel, and in recognizing project structures in MOE when performing <span
	class="menu">SE | Annotate | Sequence</span> and <span class="menu">SE
	| Alignment | Constraints | Automatic</span>.

    </p></li>
</p>

</ol>
</p>

</p>

<p><img src="../images/blueball.gif"> <a href="../apps/prodesign.htm"
    class="toc"><b>Protein Design</b></a>.  The Protein Design application has
been enhanced for focused mutant library design, and offers the following new
features: </p>

<p>
<ol>
    <li><p><b>Sample Sequence</b>.  For large search spaces, 
    sampling of the sequence data and specified mutations can be
    performed, and the results analyzed in the Mutation Analysis
    panel (described below).

    </p></li>
    <li><p><b>Tight coupling with Mutation Analysis</b>.  
    The Mutation Analysis application (described below),
    can be used to guide the design of libraries:
    desired mutations can be passed directly
    from the Mutation Analysis panel into Protein Design,
    which can then enumerate a new library containing those mutations.

    </p></li>
    <li><p><b>NNAA Support</b>. The Protein Design application now
    offers non-natural amino acid support (NNAA support is described
    in more detail below), including use of a new thermostability
    function (described below).

    </p></li>
    <li><p><b>Restart incomplete jobs</b>.
    Long jobs can now be halted and then restarted at a later time.

    </p></li>
</ol>
</p>


<p><img src="../images/blueball.gif"> <span class="new"><b>NEW!</b></span>
<a href="../apps/mutanal.htm" class="toc"><b>Mutation Analysis</b></a>.
A new virtual phage display application in MOE,
<span class="menu">DBV | Compute | Mutation Analysis</span>,
performs analysis of mutations in sequence data to identify
which mutations and
at which sites will result in the largest change in target properties.  In
conjunction with the updated Protein Design panel (described above), it
provides a key component of MOE's focused mutant library design workflow.
The Mutation Analysis application offers the following features:
</p>

<p>
<ol>
    <li><p><b>Mutation frequency table</b>. Mutations are arranged in a
    first-order (no inter-relationships) Structure Activity Report table.
    Each column of the table represents a mutation site whose mutations
    are sorted by the probability of their appearing in a population of
    mutants exhibiting the desired property.

    </p></li>
    <li><p><b>Large search space</b>.  Mutation statistics are used to address
    the problem of combinatorial explosion when dealing with multiple sites
    with multiple mutations.

    </p></li>
    <li><p><b>Prioritized candidates</b>. Candidate mutations are ranked
    according to activity, stability, and/or other property.

    </p></li>
    <li><p><b>Information content</b>. Entropic counts reflect selectivity of
    sites.  Promiscuous sites admitting many mutations have high entropy,
    whereas highly conserved mutations have low entropy.

    </p></li>
    <li><p><b>Integrated workflow</b>. Mutation Analysis is tightly coupled
    to the Protein Design application (described above).  Desired mutations
    can be selected and fed into the Protein Design application.

    </p></li>
</ol>
</p>


<p><img src="../images/blueball.gif"> <span class="new"><b>NEW!</b></span>
<a name="NNAA"></a>
<a href="../proteins/buildrotlib.htm" class="toc"><b>NNAA Support</b></a>.
Non-natural amino acid support has been added to MOE.

<p><ul>

    <p><li><b>Forcefield and partial charges</b>. AMBER10:EHT and AMBER12:EHT
    support NNAA's, and are compatible with AM1-BCC charges.

    </li></p><p><li><b>Rotamer library</b>. Precalculated NNAA rotamers have
    been added to MOE's rotamer library, <tt>amber10.mdb</tt>. <a
	href="../apps/confsrch.htm#LowModeMD">LowModeMD</a> was used to
    generate the conformers.

    </li></p><p><li><b>Protein applications</b>.
    <a href="../proteins/promodel.htm">Homology Model</a>,
    <a href="../apps/proloop.htm">Loop Modeler</a>,
    <a href="../proteins/probuild.htm">Protein Builder</a> and

    <a href="../apps/prodesign.htm">Protein Design</a> have been updated to
    support NNAA's.

    </li></p><p><li> <a href="../apps/mutanal.htm#MutationProbabilties"
    class="toc"><b>Thermostability Scoring Function</b></a>.  The
thermostability scoring function has been generalized and is now applicable to
NNAA's.

    </li></p><p><li>

    <span class="new"><b>NEW!</b></span>
    <a href="../proteins/buildrotlib.htm" class="toc"><b>Build Rotamer
	    Library</b></a>.  The new <span class="menu">DBV | Compute |
	Build Rotamer Library</span> application creates or adds to custom NNAA
    databases that are compatible with MOE's protein tools.

    </li></p><p><li> <a name="ConfigRotamerLibrary"></a>

    <a href="../appendix/settings.htm" class="toc"><b>MOE Configuration
	    Options</b></a>.  The <b>Rotamer Library</b> field on the Protein
    Defaults page of the Configuration Options panel can now accept multiple
    rotamer databases, separated by semi-colons (;).  Specifying databases in
    this field allows their contents to be automatically recognized and used to
    augment the set of NNAA's distributed with MOE.

    </li></p>

</ul></p>

<p><img src="../images/blueball.gif"> <span class="new"><b>NEW!</b></span>
<a href="../proteins/probuild.htm" class="toc"><b>Protein Builder</b></a>.

The Protein Builder has been redesigned and rewritten, and now offers a
streamlined interface that integrates residue creation, mutation, and energy
minimization.  It additionally subsumes the former Rotamer Explorer and
provides non-natural amino acid support.

</p>

<ol>
    <p><li><b>Build using a sequence</b>.
    The new Protein Builder allows for specifying a sequence of amino acids to
    build all at once.  Standard amino acids may be represented by
    single-letter codes, otherwise, 3-letter codes in parentheses may be used,
    for both standard and non-natural amino acids (NNAA).

    </li></p><p><li>

    <b>Prepend and append to existing protein chain</b>.  Both prepend and
    append operations on an existing chain are possible.  The chain on which to
    operate is identified by atom or residue selection.  Both standard and
    non-natural amino acids are available for prepending and appending, and Ace
    and Nme capping groups are also available.  The bank of non-natural amino
    acids is automatically created from the rotamer library databases specified
    in the MOE Configuration Options, as described <a
	href="#ConfigRotamerLibrary">above</a>.  A 2D depiction of each amino
    acid is provided in the bubbleHelp.

    </li></p><p><li>

    <b>Geometry specification</b>.  The
    dihedral geometry of new residues can be specified to be one of the
    standard helix, strand, or extended conformations, or to have custom
    phi/psi angles.  Left-handed helices and cis conformations are also
    possible.


    </li></p><p><li>

    <b>Repacking</b>.  Repacking of sidechains can be performed automatically
    with every append, prepend, or mutate operation, or can be done only on a
    button press.

    </li></p><p><li>

    <b>Energy minimization</b>.  A minimize button is available in the Protein
    Builder to carry out protein-specific energy minimization protocols.
    Minimization can be performed on sidechains only, on all atoms, but with
    the backbone atoms tethered, or on all atoms with no tethering.

    </li></p><p><li>

    <b>Mutation</b>.  Residues can be mutated to any standard or non-natural
    amino acid provided in the Protein Builder.  Multiple residues can be
    mutated at the same to the same target.

    </li></p><p><li>

    <b>Exploring Rotamers</b>.  Alternate conformations of a given residue or
    of a mutation can be explored directly in the new Protein Builder.
    Multiple mutation targets can be specified at once, selected from a list of
    both standard and non-natural amino acids.  Different ionization states of
    the amino acids can be selected.  When exploring the rotamer space, the
    interaction environment can be specified to include salts and solvent as
    well as hidden atoms.

    </li></p><p><li>

    <b>Joining and Splitting</b>.  Peptide bonds between residues can be made
    and unmade.  When joining residues in different chains, there is
    flexibility in deciding which residues will be reparented to which chain.
    If two cystiene residues are selected, a special attempt may be made to
    construct a disulfide bond between them.  Sidechain-sidechain bonds, such
    as disulfide bonds, can also be broken.

    </li></p><p><li>

    <b>Residue deletion</b>.  A Delete button provides an easy way to delete
    one or more residues.  The residues to delete are identified by atom or
    residue selection.

    </li></p><p><li>

    <b>Editing residue name, number, and insertion code</b>.  The residue name,
    which can be either three or four letters in the current version of MOE,
    can be edited in the Protein Builder, as can the residue number and
    insertion code.

    </li></p><p><li>

    <b>Protein Builder configuration</b>.  The Protein Builder can be
    configured to open as either a left or a right pane, when attached to the
    MOE Window, and its default layout can be specified to be either vertical
    or horizontal.  The button labels for standard amino acids may be labeled
    by either 1- or 3-letter codes.  When there is a residue selection,
    feedback can be given about whether the name matches the structure, or
    whether a given residue is sequence-only.

    </li></p>

</ol>

<p><b>Note:</b> The old Protein Builder and Rotamer Explorer applications have
been moved to <tt>$MOE/sample/obsolete</tt> in the current version of MOE.

<p><img src="../images/blueball.gif"> <span class="new"><b>NEW!</b></span>
    <b>Distributed PH4 Searching</b>.

Pharmacophore searching can now be performed in a distributed manner
either locally or on a remote server using MOE/web.  The following
features supporting distributed pharmacophore searching are now
available:

<ol>
    <p><li>

    <p> <span class="new"><b>NEW!</b></span>
    <b>Database Splitting</b>.

    Database splitting is now possible in MOE using the
    <tt>mols_Split</tt> function.

    </li></p><p><li>
    
    <a href="../apps/ph4_search.htm" class="toc"><b>Pharmacophore
	    Search</b></a>.

    Pharmacophore Search can now be executed in a distributed manner
    over multiple databases.  This is can be accessed both through
    an SVL function call and as a SOAP service.


    </li></p>

</ol>

</p>

</p>
<p><img src="../images/blueball.gif">
<a href="../mdb/dbbrowse.htm" class="toc"><b>Database Browser</b></a>.

The Database Browser has been substantially rewritten and offers the
following enhancements:

<ol>
    <p><li>

    <b>2D and 3D browsing</b>. The new Database Browser now permits
    simultaneous 2D and 3D viewing.  The 3D structure is loaded into the MOE
    Window, while the ligand structures are presented as 2D depictions in the
    panel.

    </li></p><p><li>

    <b>3D display options</b>. Finer control over centering and view
    orientation is now available, and it is possible to browse only
    ligand atoms.

    </li></p><p><li>

    <b>Atom and ribbon rendering</b>. The rendering mode of both atoms and
    ribbons can now be controlled fully in the Database Browser.

    </li></p><p><li>

    <b>2D display options</b>.  Options for controlling depiction coordinates,
    font size, hetero atom coloring, and chirality are available.

    </li></p><p><li>

    <b>Property field display</b>.  One or more property fields can be
    specified for display in the Browse panel as well as in the MOE Window.
    The database values can be edited directly in the panel.

    </li></p><p><li>

    <b>Animation loop</b>.  Browsing in an animation loop is now possible,
    and the speed and direction of the browsing animation
    loop can be specified.

    </li></p><p><li>

    <b>Entry selection</b>.  The selection state of the entry being browsed
    is now controlled by an action button which also shows the current
    selection state.

    </li></p><p><li>

    <b>Entry marking</b>. As in the previous version of the Database Browser,
    entries in the database can be marked, but now the mark field in which to
    put a mark value can now be specified.

    </li></p><p><li>

    <b>Keyboard shortcuts</b>. The keyboard Up and Down arrows can now be
    used to step backwards and forwards, respectively, through the database
    entries.

    </li></p>
</ol>
</p>

<p><img src="../images/blueball.gif">
<b>Gaussian Support</b>.

Support for running quantum simulations using Gaussian(TM) has been integrated
into MOE's minimization protocols.

<ol>
    <p><li><b>Energy Minimize</b>.

    The <a href="../apps/emin.htm" class="toc"><b>Energy Minimize</b></a> panel
    has been enhanced as follows:

    <p>
    <ul>

	<p><li>

	<b>QM page</b>.  The QM page has been re-designed to simplify
	the setting up of Gaussian simulations.

	</li></p><p><li>

	<b>Multi-step convergence</b>. A robust multi-stage QM
	refinement protocol has been developed for Gaussian calculations.

	</li></p><p><li>

	<b>Database Minimization</b>. The functionality of the Database
	Minimize panel has been unified with the Energy Minimize panel.
	<span class="note">Note:</span> The Database Minimize panel is
	deprecated in this version of MOE.

	</li></p><p><li>

	Properties of the wavefunction, as well as the
	wavefunction itself, calculated using the Self-Consistent Field
	(SCF) method, can be saved to the database; specifying which
	fields to write is now done in the Energy Minimize panel.

	</li></p><p><li>

	Options not related to minimization &ndash; the
	Rebuild 3D and Corina coordinate generation methods have been moved to the
	<a href="../mdb/wash.htm" class="toc"><b>Wash</b></a> panel.

	</li></p>
    </ul>

    </li></p><p><li><b>SCF</b>.

    The <span class="menu">MOE | Compute | Simulations |
	<a href="../apps/scf.htm#Setup" class="toc">SCF Calculation</a></span>
    panel has been updated to present configuration options similar to 
    those available in the Energy Minimize panel.

    </li></p><p><li>


    <a href="../apps/confsrch.htm#QMpanel" class="toc"><b>Conformation Search</b></a>
    has been enhanced with the addition of a quantum refinement post-processor.
    A new QM Refinement Options panel gives access to configuration options.

    </li></p>
    </p>
</ol>

<p><img src="../images/blueball.gif"> <span class="new"><b>NEW!</b></span>
<a href="../moe/moesoap.htm"><b>SOAP functions</b></a>.  
New SOAP functions have been added to MOE:

<ol>
    <p><li>

    <b>Distributed Pharmacophore Search</b>.

    Pharmacophore search calculated in a distributed manner can now be accessed
    as a SOAP service.
    
    </li></p><p><li>

    <b>QM Gaussian</b>.

    Gaussian refinement can now be accessed as a SOAP service.  The SOAP
    interface simplifies the configuration of Gaussian calculations.

    </li></p><p><li>

    <b>Antibody Modeler</b>.

    An automatic antibody modeler SOAP module allows for building Fv, Fab,
    whole Ig, and whole sequence models, as well as bispecific antibody models.

    </li></p><p><li>

    <b>Homology Modeler</b>.

    Single sequence and multi-chain homology modeling is now provided as a SOAP service.

    </li></p>
</ol>



<p><img src="../images/blueball.gif"> 
<a href="../apps/docking.htm" class="toc"><b>Dock</b></a>.  The Docking
application has been enhanced with the following features:
<ul>
    <p><li> <span class="new"><b>NEW!</b></span>

    <a name="TemplateForcing"></a>
    <b>Template Forcing.</b>  A new placement method allows for biasing
    ligand placement by superposing it onto a template.  The substructure 
	used for the alignment can be specified as selected atoms, a SMARTS pattern, 
	or as a sketched query.

    </li></p><p><li> <span class="new"><b>NEW!</b></span>

    <b>Template Similarity.</b>  A new placement method allows for biasing
    ligand placement by superposing ligand atom triangles onto template atom
    triangles. This method is useful when similarity
    between the ligand and the template are more approximate.

    </li></p><p><li>

    <b>Electron density scoring.</b>  A new rescoring method that computes
    ligand overlap with an electron density grid has been added.

    </li></p>
</ul>

<p>
<img src="../images/blueball.gif">
<span class="new"><b>NEW!</b></span> 
<a href="../apps/dbv_molsup.htm"><b>Molecule Superpose</b></a>.

A new application, <span class="menu">DBV | Compute | Molecule | Superpose</span>,
superposes molecules in a database to a reference
molecule, with optional <a href="../apps/flex.htm">FlexAlign</a> refinement.

</p>

<p><img src="../images/blueball.gif">

<a href="../apps/confsrch.htm#ConfPanel" class="toc"><b>Conformation
	Geometry</b></a>.  The superposition section of the <span
    class="menu">DBV | Compute | Molecule | Conformation Geometry</span>
	application has been moved to the Molecule Superpose panel.

</p>

<p>
<img src="../images/blueball.gif">
<b>MD Trajectory Simulations</b>.
<ol>
    <p><li>

    <span class="new"><b>NEW!</b></span>
    <b><a href="../apps/md.htm#Output">MD Trajectory Analysis
	Framework</a></b>. New in MOE is support for reading directly from
    molecular dynamics trajectory files without having to first import into a
    MOE database.  The following formats are recognized:

        <p>
	<ul>
	    <li>MOE
	    </li><li>DCD (NAMD)
	    </li><li>AMBER
	    </li>
	</ul>
	</p>

    </p>

    </li></p><p><li>

    <b>Distributed NAMD</b>.
    The <a href="../apps/md.htm#NAMD" class="toc"><b>Molecular Dynamics</b></a>
    panel now features a settings panel in which NAMD can be configured
    for distributed execution.  Among the configuration options are:

        <p>
	<ul>
	    <li>Settings for launching a NAMD CUDA build.

	    </li><li>Specification of the number of threads to use when running
	    in multi-processor mode.

	    </li><li>Specification to launch NAMD via charmrun.

	    </li>
	</ul>
	</p>

    </p>

    </li></p><p><li>

    <b>Unit cell wrapping</b>.  Crystal unit cell molecule wrapping
    is now available when the periodic system is enabled.  When a NAMD
    simulation is run, either all molecules can be wrapped or just the
    waters.  In other simulations, only waters and ions can be wrapped.

    </li></p><p><li>

    <b>Sample tools</b>.  Examples of how to animate and how to create a
    <a href="../apps/moevie.htm" class="toc">MOEvie</a> of a trajectory using
    the trajectory framework (and without having to import to a database) are
    given in the new sample file <a href="../appendix/samples.htm"
	    class="toc"><tt>$MOE/sample/md_tools.svl</tt></a>.

    </li></p>
</ol>
</p>

<p><img src="../images/blueball.gif">
<b>Tearaway Dihedral Plot</b>.  The dihedral energy plot, available as
<span class="menu">MOE | Footer | Profile</span> when the four atoms
of a dihedral angle are selected, can now detach from the MOE Window.
</p>

<p>
<img src="../images/blueball.gif">
<a href="../apps/moevie.htm" class="toc"><b>MOEvie</b></a>.
The MOEvie application has been enhanced as follows:

<ul>
    <li><b>Image quality</b>.  The image quality in the MOEvie application has
    been improved by increasing the bitrate using a fixed quantizer.

    </li><li><b>Unique sub-directories</b>. A unique directory is now
    automatically created for each MOEvie, simplifying file
    identification and clean-up.

    </li>
</ul>

<img src="../images/blueball.gif">
<a href="../proteins/antibody.htm" class="toc"><b>Antibody Modeler</b></a>.
The Antibody Modeler has been enhanced to provide:

<ul>
    <li>The ability to specify the antibody database and family database,
    in the Antibody Modeler Settings panel.
    </li>

    <li>The rabbit species in the Antibody Modeler categorization.
    </li>
</ul>

<!-- ----------------------------- PROGRAMMING ------------------------ -->
<p>
<table width="100%"><tr bgcolor="#cccccc"><td align="center"><b>
Programming
</b></td></table>
</p>


<p>The following are SVL functions that have been added to
MOE. Consult the SVL Function Index for more information. 
</p>

<blockquote>
<table class="titlebar" width="100%">
<tr>
<th>Function</td>
<th>Description</td>
</tr>


<tr>
<td valign="top">
<a href="../moe/fcnref/mdfcn.htm#MD_Import" class="toc"><tt>MD_Import</tt></a>
</td>
<td valign="top">
	Import a molecular dynamics trajectory into a MOE database file.
</td>
</tr>

<tr>
<td valign="top">
<tt>mols_Split</tt>
</td>
<td valign="top">
	Split a set of source databases into chunks of specified size.
</td>
</tr>

<tr>
<td valign="top">
<tt>notnull</tt>
</td>
<td valign="top">
	Equivalent to <tt>not null</tt>.
</td>
</tr>

<tr>
<td valign="top">
<a href="../moe/fcnref/view.htm#ViewRotationCenter" class="toc"><tt>ViewRotationCenter</tt>
</td>
<td valign="top">
	Set and get center of rotation.
</td>
</tr>



</table>
</blockquote>

<p>The following are SVL functions that have been modified
in this release. Consult the SVL Function Index for more information.
</p>

<blockquote>
<table class="titlebar" width="100%">
<tr>
<th>Function</td>
<th>Description</td>
</tr>

<tr>
<td valign="top" width="20%">
    <tt><a href="../proteins/fcnref/pdb.htm#pdb_List">pdb_List</a></tt>
</td><td valign="top">
The chain letter portion of the codes is now case-sensitive.

</td>
</tr>

<tr>
<td valign="top" width="20%">
    <tt><a href="../moe/fcnref/xmlfcn.htm#xml_fopen">xml_fopenr</a></tt>
</td><td valign="top">
The XML file reader now accepts an XML schema as a second argument.

</td>
</tr>

<tr>
<td valign="top" width="20%">
Checkbox widget
</td><td valign="top">
The Checkbox widget can now take on a variety of different looks,
as controlled by the new

<a href="../svl/svlgui/fcnref/wt_check.htm"
    class="toc"><tt>checkboxStyle</tt></a>

attribute:
<tt>'checkMark'</tt> (default),
<tt>'radioButton'</tt>,
<tt>'roundRadioMark'</tt>,
<tt>'checkMarkRadioButton'</tt>,
<tt>'chckMarkButton'</tt>.
The new styles can be viewed by running
<a href="../appendix/samples.htm#Window"><tt>$MOE/sample/windemo.svl</tt></a>.

</td>
</tr>

<tr>
<td valign="top">
Widget text colors
</td><td valign="top">
    The widget color palette has been enhanced with
    <tt>'baseOrange'</tt>,
    <tt>'basePurple'</tt>,
    <tt>'baseBrown'</tt>, and
    <tt>'basePink'</tt>.
</td>
</tr>

<tr>
<td valign="top">
Widget Toolkit
</td>
<td valign="top">
	The core widget attribute
	'<a href="../svl/svlgui/fcnref/wt_core.htm"><tt>bubbleHelpGraphics</tt></a>'
	has been added, permitting graphic objects to be
	displayed within bubbleHelp.
</td>
</tr>


</table>
</blockquote>

<p>The following are SVL functions that have been deprecated
in this release. Consult the SVL Function Index for more information.
</p>


<tr>
<td valign="top">
<a href="../moe/fcnref/view.htm#ViewSetRotationCenter" class="toc"><tt>ViewSetRotationCenter</tt></a>
</td>
<td valign="top">
    Replaced by
    <a href="../moe/fcnref/view.htm#ViewRotationCenter" class="toc">
    <tt>ViewRotationCenter</tt></a>.
</td>
</tr>
</table>
</blockquote>







</table>
</blockquote>

<!-- **Ensure footer always displays, even if javascript is disabled. -->
<noscript>
	<hr noshade="noshade" />
	<a class="linkAlways" href="http://www.chemcomp.com"> <img src="../images/ccgicon.png"
	alt="CCG Logo Icon" align="left" width="30" height="30" border="0" hspace="5" vspace="1" /> </a>
	<font size="2">
	<a class="linkAlways" href="../release_notes/legal.htm">Copyright</a> &copy; 1997&ndash;2015
	<a class="linkAlways" href="http://www.chemcomp.com">Chemical Computing Group Inc.</a><br />
	<a class="linkAlways" href="mailto:info@chemcomp.com"><i>info@chemcomp.com</i></a>
	</font>
</noscript>
<div class="TOC" id="MoeFooter"></div>
</body>
</html>
