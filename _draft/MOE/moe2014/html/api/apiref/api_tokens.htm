<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">


<!--
!!    MOE Online Manuals
!!    COPYRIGHT (C) 1997-2015
!!        CHEMICAL COMPUTING GROUP INC.  ALL RIGHTS RESERVED.
!!-->

<head>

<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />

<script type="text/javascript" 
src="../../include/jsincludes_moe.js"></script>

<link rel="stylesheet" type="text/css"
href="../../include/manstyle.css" />


<meta keywords>
<meta functions svl_nullTok, svl_NullTok>
<meta functions svl_HashTok, svl_LenTok>
<meta functions svl_TokToStr, svl_CmpTok, svl_StrcmpTok>


<title>API Token Functions: svl_nullTok, svl_NullTok</title>
</head>

<body>
<div id="MoeHeader"></div>
<noscript>
	<span class="warning">Warning: JavaScript is disabled. This page will not display correctly.</span>
	<h1 class="title">MOE Documentation</h1>
	<hr noshade="noshade" />
	<style>.LaTeX {color: #C08080;}</style>
</noscript>


<h2>Syntax</h2>

<pre>
    svlTok <a class="fcnlink" href="#svl_nullTok">svl_nullTok</a>;
    svlTok <a class="fcnlink" href="#svl_NullTok">svl_NullTok</a>(void);
    int <a class="fcnlink" href="#svl_HashTok">svl_HashTok</a>(svlTok tok);
    int <a class="fcnlink" href="#svl_LenTok">svl_LenTok</a>(svlTok tok);
    char *<a class="fcnlink" href="#svl_TokToStr">svl_TokToStr</a>(svlTok tok);

    int <a class="fcnlink" href="#svl_CmpTok">svl_CmpTok</a>(svlTok tok1, svlTok tok2);
    int <a class="fcnlink" href="#svl_StrcmpTok">svl_StrcmpTok</a>(svlTok tok, const char *str);
</pre>

<p><a name="svl_nullTok"></a></p>
<h2>Description</h2>

<pre>
svlTok <span class="fcndef">svl_nullTok</span>;
</pre>

<p>The empty token. All tokens should be initialized
to this value.
On systems that do not allow variables to be included in
function libraries, such as Windows 95, this value should be set
to the return value of function <tt>svl_NullTok</tt> in the application
initialization routine.</p>

<p><a name="svl_NullTok"></a></p>
<p><hr noshade="noshade" />

<pre>
svlTok <span class="fcndef">svl_NullTok</span>(void);
</pre>

<p>Returns the handle of the 
empty token, <tt>svl_nullTok</tt>.</p>

<p><a name="svl_HashTok"></a></p>
<p><hr noshade="noshade" />

<pre>
int <span class="fcndef">svl_HashTok</span>(svlTok tok);
</pre>

<p>Returns a hash code based on the string contents of
token <tt>tok</tt>.  Unlike token handles, hash codes are not unique, but are
well distributed.  Thus they are useful for fast and efficient mapping of
tokens into a range of integers.</p>

<p><a name="svl_LenTok"></a></p>
<p><hr noshade="noshade" />

<pre>
int <span class="fcndef">svl_LenTok</span>(svlTok tok);
</pre>

<p>Returns the length of the string contents of the token
whose handle is <tt>tok</tt>. If the token does not contain the null
character (<tt>'\0'</tt>), <tt>svl_LenTok(tok)</tt> is equivalent to (but is
significantly more efficient than) <tt>strlen(svl_TokToStr(tok))</tt>.</p>

<p><a name="svl_TokToStr"></a></p>
<p><hr noshade="noshade" />

<pre>
char *svl_TokToStr(svlTok tok);
</pre>

<p>Returns a pointer to the first character of token
<tt>tok</tt>. More precisely, the function returns the address of a read-only
buffer that holds the contents of <tt>tok</tt>.  The buffer contents (a
string) are always guaranteed to be <tt>'\0'</tt>-terminated. Note that the
terminating <tt>'\0'</tt> is not considered a part of the string.</p>

<p><a name="svl_StrcmpTok"></a></p><p><a name="svl_CmpTok"></a></p>
<p><hr noshade="noshade" />

<pre>
int <span class="fcndef">svl_CmpTok</span>(svlTok tok1, svlTok tok2);
int <span class="fcndef">svl_StrcmpTok</span>(svlTok tok, const char *str);
</pre>

<p>Lexicographically
compare the string contents of tokens.  Function <tt>svl_CmpTok</tt>
compares the contents of two tokens, <tt>tok1</tt> and <tt>tok2</tt>, while
function <tt>svl_StrcmpTok</tt> compares the contents of a token,
<tt>tok</tt>,  with a <tt>'\0'</tt>-terminated C string, <tt>str</tt>.

<p>The lexicographic comparison of strings proceeds as follows:

<ul>

<li>
    The function compares successive characters from the strings until it finds
    characters that are not equal or until it runs out of characters.
</li>

<li>
    If all characters are equal, the function returns <tt>0</tt>.
</li>

<li>
    If the differing character from <tt>tok1</tt> is either missing or smaller
    than the character from <tt>tok2</tt>, the function returns <tt>-1</tt>.
</li>

<li>
    If the differing character from <tt>tok2</tt> is either missing or smaller
    than the character from <tt>tok1</tt>, the function returns <tt>1</tt>.
</li>

</ul>

<p>Note that if the token <tt>tok</tt> in function
<tt>svl_StrcmpTok(tok,str)</tt> does not contain the null character
(<tt>'\0'</tt>), the function result is equal to
<tt>strcmp(svl_TokToStr(tok),str)</tt>.</p>

<h2>See Also</h2>
<p>
    <a class="svl" href="api_tokmem.htm">svl_FreeTok</a><br />
    <a class="svl" href="api_tokmem.htm">svl_InitTokArray</a><br />
    <a class="svl" href="api_tokmem.htm">svl_ResetTok</a><br />
    <a class="svl" href="api_tokmem.htm">svl_ReallocTokE</a>
</p>

<noscript>
	<hr noshade="noshade" />
	<font size="2"> Copyright &copy; 1997&ndash;2015
	<a href="http://www.chemcomp.com">Chemical Computing Group Inc.</a> </font>
</noscript>
<div id="MoeFooter"></div>
</body>
</html>
