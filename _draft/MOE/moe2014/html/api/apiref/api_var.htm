<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">


<!--
!!    MOE Online Manuals
!!    COPYRIGHT (C) 1997-2015
!!        CHEMICAL COMPUTING GROUP INC.  ALL RIGHTS RESERVED.
!!-->

<head>

<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />

<script type="text/javascript" 
src="../../include/jsincludes_moe.js"></script>

<link rel="stylesheet" type="text/css"
href="../../include/manstyle.css" />


<meta keywords>
<meta functions svl_AllocVarE, svl_FreeVar, svl_CopyVar, svl_MoveVar>
<meta functions svl_ClearVar>


<title>API Var Functions: svl_AllocVarE, ...</title>
</head>

<body>
<div id="MoeHeader"></div>
<noscript>
	<span class="warning">Warning: JavaScript is disabled. This page will not display correctly.</span>
	<h1 class="title">MOE Documentation</h1>
	<hr noshade="noshade" />
	<style>.LaTeX {color: #C08080;}</style>
</noscript>

<h2>Syntax</h2>

<pre>
    svl_error <a class="fcnlink" href="#svl_AllocVarE">svl_AllocVarE</a>(svl_var *v);
    void <a class="fcnlink" href="#svl_FreeVar">svl_FreeVar</a>(svl_var v);

    void <a class="fcnlink" href="#svl_CopyVar">svl_CopyVar</a>(svl_var dst, svl_var src);
    void <a class="fcnlink" href="#svl_MoveVar">svl_MoveVar</a>(svl_var dst, svl_var src);

    void <a class="fcnlink" href="#svl_ClearVar">svl_ClearVar</a>(svl_var v);
</pre>

<h2>Description</h2>

<p>These functions are all context-associated memory manipulation routines.</p>

<p><a name="svl_AllocVarE"></a></p>
<p><hr noshade="noshade" />

<pre>
svl_error <span class="fcndef">svl_AllocVarE</span>(svl_var *v);
</pre>

<p>Allocates a new SVL variable and returns its 
handle in <tt>*v</tt>.</p>

<p><a name="svl_FreeVar"></a></p>
<p><hr noshade="noshade" />

<pre>
void <span class="fcndef">svl_FreeVar</span>(svl_var v);
</pre>

<p>Free the memory associated with an SVL variable 
allocated with <tt>svl_AllocVarE</tt>.  It is not necessary to 
call <tt>svl_ClearVar</tt> before the variable is freed.</p>

<p>Note that the SVL context does not keep track of the variables allocated 
with <tt>svl_AllocVarE</tt>, therefore <tt>svl_FreeVar</tt> must always be 
called explicitly when the variable is no longer needed.</p>

<p><a name="svl_CopyVar"></a></p>
<p><hr noshade="noshade" />

<pre>
void <span class="fcndef">svl_CopyVar</span>(svl_var dst, svl_var src);
</pre>

<p>Copy the contents of the SVL variable of the 
given handle src to the SVL variable of
another handle, dst. The 2 handles must not be identical.
This is equivalent to the SVL assignment statement <tt>dst = src</tt>.
The contents of <tt>src</tt> are left intact.</p>

<p><a name="svl_MoveVar"></a></p>
<p><hr noshade="noshade" />

<pre>
void <span class="fcndef">svl_MoveVar</span>(svl_var dst, svl_var src);
</pre>
<p>Move the contents of the SVL variable specified
by <tt>src</tt> to the variable pointed to by <tt>dst</tt> and then
clears the contents of the source variable. 


<p><a name="svl_ClearVar"></a></p>
<p><hr noshade="noshade" />

<pre>
void <span class="fcndef">svl_ClearVar</span>(svl_var v);
</pre>

<p>Clear all data associated with an SVL variable 
of a given handle, <tt>v</tt>, and resets the
value of the variable to that of an empty vector.
This is equivalent to the SVL assignment statement <tt>v = []</tt>.</p>


<h2>See Also</h2>
<p>
    <a class="svl" href="api_taskvar.htm">svl_TaskVar</a>
</p>


<noscript>
	<hr noshade="noshade" />
	<font size="2"> Copyright &copy; 1997&ndash;2015
	<a href="http://www.chemcomp.com">Chemical Computing Group Inc.</a> </font>
</noscript>
<div id="MoeFooter"></div>
</body>
</html>


