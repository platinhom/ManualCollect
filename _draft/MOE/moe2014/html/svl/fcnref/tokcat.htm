<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<!--
!!	svl/fcnref/tokcat.htm
!!-->

<!--
!!    MOE Online Manuals
!!    COPYRIGHT (C) 1997-2015
!!        CHEMICAL COMPUTING GROUP INC.  ALL RIGHTS RESERVED.
!!-->

<head>

<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />

<script type="text/javascript" 
src="../../include/jsincludes_moe.js"></script>

<link rel="stylesheet" type="text/css"
href="../../include/manstyle.css" />


<meta keywords>
<meta functions tok_cat>
<meta functions tok_length>
<meta functions tok_keep>
<meta functions tok_drop>
<meta functions tok_hash>
<meta functions tok_pack>
<meta functions tok_unpack>

<title>Token Functions</title>

</head>

<body>
<div id="MoeHeader"></div>
<noscript>
	<span class="warning">Warning: JavaScript is disabled. This page will not display correctly.</span>
	<h1 class="title">MOE Documentation</h1>
	<hr noshade="noshade" />
	<style>.LaTeX {color: #C08080;}</style>
</noscript>

<h2>Syntax</h2>

<pre>
    tok = <a class="fcnlink" href="#tok_cat">tok_cat</a> [ 'a', 'b' ]
    tok = <a class="fcnlink"
	href="#tok_cat">tok_cat</a> [ 'a1', 'a2', 'a3', ...]

    tok = <a class="fcnlink" href="#tok_drop">tok_drop</a> ['token', n]
    tok = <a class="fcnlink" href="#tok_keep">tok_keep</a> ['token', n]

    v = <a class="fcnlink" href="#tok_length">tok_length</a> [ 'a', 'b' ]
    v = <a class="fcnlink"
	href="#tok_length">tok_length</a> [ 'a1', 'a2', 'a3', ...]

    k = <a class="fcnlink" href="#tok_hash">tok_hash</a> 'word'
    [k1, k2, ...] = <a class="fcnlink"
	href="#tok_hash">tok_hash</a> ['word1', 'word2', ...]

    tok = <a class="fcnlink"
	href="#tok_pack">tok_pack</a> [ 'tok1', 'tok2', ...]
    [tok1, tok2, ...] = <a class="fcnlink"
	href="#tok_pack">tok_unpack</a> 'tok'

</pre>

<p><a name="tok_cat"></a></p>
<h2>Description</h2>

<pre>
tok = <span class="fcndef">tok_cat</span> [ 'a', 'b' ]
tok = <span class="fcndef">tok_cat</span> [ 'a1', 'a2', 'a3', ...]
</pre>

<p>Concatenates tokens <tt>'a1'</tt>, <tt>'a2'</tt>, ..., into one token.

<pre>
    svl&gt; tok_cat [ 'some', 'rsa', 'ult' ]
    'somersault'

    svl&gt; tok_cat [ 'over ', ['here','there'] ]
    ['over here', 'over there']
</pre>

<p><a name="tok_drop"></a></p>
<p><hr noshade="noshade" />

<pre>
tok = <span class="fcndef">tok_drop</span> [ 'token', n]
</pre>

<p>If <tt>n</tt> is a positive number, <tt>tok_drop</tt> drops the first
<tt>n</tt> characters of <tt>token</tt>, and returns the remaining token.
Otherwise, if <tt>n</tt> is negative, <tt>tok_drop</tt> drops the last
<tt>n</tt> characters.

<pre>
    svl&gt; a = 'abcde'
    svl&gt; tok_drop [a, 3]
    'de'
    svl&gt; tok_drop [a, -3]
    'ab'
</pre>

<p><a name="tok_keep"></a></p>
<p><hr noshade="noshade" />

<pre>
tok = <span class="fcndef">tok_keep</span> [ 'token', n]
</pre>

<p>If <tt>n</tt> is a positive number, <tt>tok_keep</tt> returns the first
<tt>n</tt> characters of <tt>token</tt>.
Otherwise, if <tt>n</tt> is negative, <tt>tok_keep</tt> returns the last
<tt>n</tt> characters of <tt>token</tt>.

<pre>
    svl&gt; a = 'abcde'
    svl&gt; tok_keep [a, 3]
    'abc'
    svl&gt; tok_keep [a, -3]
    'cde'
</pre>

<p><a name="tok_length"></a></p>
<p><hr noshade="noshade" />

<pre>
v = <span class="fcndef">tok_length</span> [ 'a', 'b' ]
v = <span class="fcndef">tok_length</span> [ 'a1', 'a2', 'a3', ...]
</pre>

<p>Returns a vector with each token <tt>'a1'</tt>, <tt>'a2'</tt>, ...,
replaced with its length.

<pre>
    svl&gt; tok_length [ 'some', 'rsa', 'ult' ]
    [4,3,3]

    svl&gt; tok_length [ 'over ', ['here','there'] ]
    [5, [4,5]]
</pre>

<p><a name="tok_hash"></a></p>
<p><hr noshade="noshade" />

<pre>
k = <span class="fcndef">tok_hash</span> 'word'
[k1, k2, ...] = <span class="fcndef">tok_hash</span> ['word1', 'word2', ...]
</pre>

<p>Returns a vector with each token replaced by its <i>hash value</i>.
The hash value is an integer calculated from the contents of
each token in such a way that different tokens will likely
correspond to different hash values.

<p><a name="tok_pack"></a></p>
<p><hr noshade="noshade" />

<pre>
tok = <span class="fcndef">tok_pack</span> ['tok1', 'tok2', ...]
[tok1, tok2, ...] = <span class="fcndef">tok_unpack</span> tok
</pre>

<p>Function <tt>tok_pack</tt> concatenates the given tokens into one token.
The tokens are first processed to escape unusual characters and
separated from each other with a special character (<tt>;</tt>).

Function <tt>tok_unpack</tt> reverses the effect of <tt>tok_pack</tt> and
splits a single token into the list of tokens that were used to create it.
</p>

<p>Note: <tt>tok_pack</tt> and <tt>tok_unpack</tt> can be used to prepare
RC file entries that store a list of names in a single RC variable.
</p>

<pre>
    svl&gt; tok_pack [ 'aa', 'bb', 'cc' ]
    ';aa;bb;cc;'

    svl&gt; tok_unpack ';aa;bb;cc;'
    ['aa','bb','cc']
</pre>


<h2>See Also</h2>
<p>
    <a class="svl" href="catetc.htm">cat</a>
</p>
<noscript>
	<hr noshade="noshade" />
	<font size="2"> Copyright &copy; 1997&ndash;2015
	<a href="http://www.chemcomp.com">Chemical Computing Group Inc.</a> </font>
</noscript>
<div id="MoeFooter"></div>
</body>
</html>

