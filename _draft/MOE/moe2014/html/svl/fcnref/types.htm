<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<!--	types.htm
!! supersedes: storage.htm isnull.htm -->

<!--
!!    MOE Online Manuals
!!    COPYRIGHT (C) 1997-2015
!!        CHEMICAL COMPUTING GROUP INC.  ALL RIGHTS RESERVED.
!!-->

<head>

<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />

<script type="text/javascript" 
src="../../include/jsincludes_moe.js"></script>

<link rel="stylesheet" type="text/css"
href="../../include/manstyle.css" />


<title>Type Conversion Functions</title>
<meta keywords>
<meta functions int, real, char, atof, atoi, string, token>
<meta functions type, storage>
<meta functions num, tok, tochar, toint, tonum, totok>

</head>
<body>
<div id="MoeHeader"></div>
<noscript>
	<span class="warning">Warning: JavaScript is disabled. This page will not display correctly.</span>
	<h1 class="title">MOE Documentation</h1>
	<hr noshade="noshade" />
	<style>.LaTeX {color: #C08080;}</style>
</noscript>

<h2>Syntax</h2>

<pre>
    rval = <a class="fcnlink" href="#atof">atof</a>    'token'
    ival = <a class="fcnlink" href="#atoi">atoi</a>    'token'
    cval = <a class="fcnlink" href="#char">char</a>    v
    ival = <a class="fcnlink" href="#int">int</a>     v
    rval = <a class="fcnlink" href="#real">real</a>    v 
    tval = <a class="fcnlink" href="#storage">storage</a> v
    str  = <a class="fcnlink" href="#string">string</a>  'data' 
    tval = <a class="fcnlink" href="#token">token</a>   &quot;data&quot; 
    tval = <a class="fcnlink" href="#type">type</a>    v

    nval = <a class="fcnlink" href="#num">num</a>     v 
    tval = <a class="fcnlink" href="#tok">tok</a>     v

    cval = <a class="fcnlink" href="#tochar">tochar</a>  v
    ival = <a class="fcnlink" href="#toint">toint</a>   v
    nval = <a class="fcnlink" href="#tonum">tonum</a>   v
    tval = <a class="fcnlink" href="#totok">totok</a>   v
</pre>

<p><a name="atof"></a></p>
<h2>Description</h2>

<!-- DESC -->

<p>
<table class="titlebar" width="100%" border="1" cellpadding="3">
<tr>
<th>Function
<th>Description
</tr>

<tr>
<td valign="baseline">
<a name="atof"></a><tt>atof</tt>
<td valign="baseline">
Returns the real number obtained by converting a character-based
decimal representation to a floating point representation.
The conversion is applied to all values in the argument vector.
<pre>
    svl&gt; atof ['1.2', '-5.67', '1e3']
    [1.2, -5.67, 1000]
</pre>
</tr>

<tr>
<td valign="baseline">
<a name="atoi"></a><tt>atoi</tt>
<td valign="baseline">
Returns the integer obtained by converting a character-based
representation to an integer representation.  Hexadecimal notation
is used when the number starts with a "0x".
The conversion is applied to all values in the argument vector.
<pre>
    svl&gt; atoi ['-5', '1023', '0xfff']
    [-5, 1023, 4095]
</pre>
</tr>

<tr>
<td valign="baseline">
<a name="char"></a><tt>char</tt>
<td valign="baseline">
Convert each number in <tt>v</tt> to a single character.  Fractional values
are rounded to the nearest integer.  The ASCII character set is used.
<pre>
    svl&gt; char [ 64, [78,89] ]
    [ &quot;@&quot;, &quot;NY&quot; ]
</pre>
</tr>

<tr>
<td valign="baseline">
<a name="int"></a><tt>int</tt>
<td valign="baseline">
Convert each number in <tt>v</tt> to an integer representation.
Fractional values are rounded to the nearest integer.  If the resulting
value's magnitude exceeds, then the internal integer representation the
largest or smallest representable integer is returned (as appropriate).
The conversion is applied to all values in the argument vector.
This function is rarely needed since SVL converts numbers automatically
when appropriate.
</tr>

<tr>
<td valign="baseline">
<a name="real"></a><tt>real</tt>
<td valign="baseline">
Convert each number in <tt>v</tt> to a floating point representation.
The conversion is applied to all values in the argument vector.
This function is rarely needed since SVL converts numbers automatically
when appropriate.
</tr>

<tr>
<td valign="baseline">
<a name="storage"></a><tt>storage</tt>
<td valign="baseline">
Returns for each value in <tt>v</tt> its storage type.  The return values
are tokens in the set {<tt>'char'</tt>, <tt>'int'</tt>, <tt>'real'</tt>,
<tt>'tok'</tt>}
for character, integer, floating point or token, respectively.
</tr>

<tr>
<td valign="baseline">
<a name="string"></a><tt>string</tt>
<td valign="baseline">
Converts a single argument token to a flat character vector (character
for character).
<pre>
    svl&gt; string 'a4+5' 
    &quot;a4+5&quot; 
</pre>
</tr>

<tr>
<td valign="baseline">
<a name="token"></a><tt>token</tt>
<td valign="baseline">
Converts a single argument flat character vector to a token (character
for character).
<pre>
    svl&gt; token &quot;a4+5&quot; 
    'a4+5' 
</pre>
</tr>

<tr>
<td valign="baseline">
<a name="type"></a><tt>type</tt>
<td valign="baseline">
Returns for each value in <tt>v</tt> its data type.  The return values
are tokens in the set {<tt>'char'</tt>, <tt>'num'</tt>, <tt>'tok'</tt>}
for character, numeric or token, respectively.
</tr>

<tr>
<td valign="baseline">
<a name="num"></a><tt>num</tt>
<td valign="baseline">
Returns the argument, <tt>v</tt>, if the argument is a numerical vector.
Otherwise, the function generates an error.
</tr>

<tr>
<td valign="baseline">
<a name="tok"></a><tt>tok</tt>
<td valign="baseline">
Returns the argument, <tt>v</tt>, if the argument is a token vector.
Otherwise, the function generates an error.
</tr>

<tr>
<td valign="baseline">
<a name="tochar"></a><tt>tochar</tt>
<td valign="baseline">
Converts <tt>v</tt> to type 'char'.  Numbers 0..9 are converted
to characters "0..9".  Numbers 10..63 are converted to characters
"a..zA..Z_@".  All other numbers are converted to character "?".
</tr>

<tr>
<td valign="baseline">
<a name="tonum"></a><tt>tonum</tt>
<td valign="baseline">
Converts <tt>v</tt> to a numerical vector.
Tokens are converted to the number they represent.
Tokens that do not represent a valid number are converted to 0.
Characters "0..9" are converted to numbers '0..9'.
Characters "a..zA..Z_@" are converted to
numbers 10..63.  All other characters are converted to -1.
</tr>

<tr>
<td valign="baseline">
<a name="toint"></a><tt>toint</tt>
<td valign="baseline">
Converts <tt>v</tt> to an integer vector.  Fractional numbers
are rounded to the nearest integral value.
</tr>

<tr>
<td valign="baseline">
<a name="totok"></a><tt>totok</tt>
<td valign="baseline">
Converts <tt>v</tt> to a token vector.  Numbers are converted
to their printable representations.  Each character is converted
to one token.
</tr>

</table>

<!-- ENDDESC -->

<h2>See Also</h2>

<p>
<a class="svl" href="isetc.htm">isdigit</a>
<a class="svl" href="isetc.htm">isalpha</a>
<a class="svl" href="freadb.htm">sreadb</a>
<a class="svl" href="freadetc.htm">swrite</a>
<a class="svl" href="freadb.htm">swriteb</a>
</p>

<noscript>
	<hr noshade="noshade" />
	<font size="2"> Copyright &copy; 1997&ndash;2015
	<a href="http://www.chemcomp.com">Chemical Computing Group Inc.</a> </font>
</noscript>
<div id="MoeFooter"></div>
</body>
</html>

