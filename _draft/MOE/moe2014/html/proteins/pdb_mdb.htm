<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<!--
!!	/proteins/pdb_mdb.htm	Protein Database chapter
-->

<!--
!!    MOE Online Manuals
!!    COPYRIGHT (C) 1997-2015
!!        CHEMICAL COMPUTING GROUP INC.  ALL RIGHTS RESERVED.
!!-->

<head>

<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />

<meta panel Load PDB File>
<meta panel Load mmCIF File>
<meta panel Protein Database Update>

<meta keywords Render Protein />

<script type="text/javascript" 
src="../include/jsincludes_moe.js"></script>

<link rel="stylesheet" type="text/css"
href="../include/manstyle.css" />

<title>Protein Sequence and Structure Data</title>

</head>

<body>
<div id="MoeHeader"></div>
<noscript>
	<span class="warning">Warning: JavaScript is disabled. This page will not display correctly.</span>
	<h1 class="title">MOE Documentation</h1>
	<hr noshade="noshade" />
	<style>.LaTeX {color: #C08080;}</style>
</noscript>


<h6 class="h-two">Contents</h6>
<div id="toc-list"><script>var gman_OrderedListTOC=false; </script></div>

</head>

<a name="Overview"></a>
<h2>Overview</h2>

<p >
The MOE distribution is shipped with a variety of protein databases used for
homology modeling and/or structure-based drug design. The MOE
protein database represents a non-redundant structure repository that
is applied in general homology modeling. This database is the result of a
compiling procedure that aims to extract a minimum of protein chains from the
Protein Data Bank (PDB) [Berman 2000] without compromising its structural
diversity. In contrast, the dedicated MOE protein databases for antibodies,
kinases, G protein-coupled receptors (GPCRs), and more are compiled to extract
as much structural information from the PDB as possible. A special database
update application allows for a continuous enrichment of the structure pool by
scanning the PDB as well as in-house structure repositories for new submissions.

</p>

<a name="MOEPDB"></a>
<h2>The MOE Protein Database</h2>
<p>
The MOE Protein Database used in homology modeling includes the
following databases:
</p>

<ul>

<li><i>Protein Database</i>.

MOE provides a database of non-redundant protein chains from the Protein Data
Bank [Berman 2000] in the file <tt>$MOE/lib/pdb.mdb</tt>.

Entries consist of single protein chains (not full protein molecules).
Solvent, ions and ligands are not included.
In MOE&nbsp;2014.09, the
database contains about 39,000 non-redundant chains obtained from the over
100,000 PDB entries containing protein molecule models in October&nbsp;2014.

<p>This database is used by MOE's homology modeling.
The database contains almost 29,000 chains of X-ray models from
crystallographic
data with a resolution of 2.8&nbsp;&Aring; or better.
Additionally, it also includes about 4,700 chains of
NMR models and over 2000 models from electron microscopy
which are not significantly homologous to the
above group of high-resolution chains.
Chains that have fewer than 40 residues
with complete backbone coordinates were excluded, as were X-ray models
with greater than 3.5&Aring; resolution.
No two chains in the database have mutual sequence identities
larger than 90% unless they have substantially different structures
when superposed. When selecting representatives
from groups of similar chains, the following qualities were considered:

<p><ul>
<li>Number of residues with missing coordinates</li>
<li>Longest sequence of residues with missing coordinates</li>
<li>Number of non-standard amino acids</li>
<li>R Free</li>
<li>Resolution </li>
</ul>

<!--
<p>
<li><i>Full Protein Database</i>.

An mdb file containing the full release of the Protein Data Bank
is part of the MOE distribution.  Entries have all been processed to have
correct ligand bonding and information, standard atom names and
correct protein sequence data,
including residues with no atomic data.
The database is located under the name
<tt>pdb_<i>yyyy_mm_dd</i>.mdb</tt>, where <tt><i>yyyy</i></tt> indicates
the year and <tt><i>mm_dd</i></tt> indicates the month and day of the
last update.
-->

<p>
<li><i>Structural Family Database</i>.

The database of structural families is located the file
<tt>$MOE/lib/pdb.fam</tt>.   It has been obtained by clustering
the full release of the Protein Data Bank using
CCG's custom exhaustive clustering algorithms.
The file is used by protein sequence searches.


</ul>

<p>The default protein database file used by MOE is
<tt>$MOE/lib/pdb.mdb</tt>.  This is the database that is displayed by
default in the MOE-PDB page of the
<a href="../moe/gui/fileopen.htm">Open</a> panel.
The subset of chains
used by <a href="promodel.htm">Homology Model</a> for segment matching is
specified by <tt>$MOE/lib/segment.lis</tt>.  Defaults can be changed in
the <b>Protein Defaults</b> page of the
<a href="../appendix/settings.htm#ProteinDefaults">Configuration Options</a>
panel.

<p>For more information on how to prepare a Protein Data Bank file
for use in MOE, see the <a href="../apps/structprep.htm">Preparing a Protein
or Protein-Ligand Complex</a>.
</p>

<a name="OpeningPDBFiles"></a>
<h2>Reading and Writing PDB Files</h2>

To read molecules from PDB files into MOE, choose
<b>File&nbsp;|&nbsp;Open</b> in either the MOE Window or
the Sequence Editor.
When PDB files are selected in the file list and <b>Load&nbsp;PDB</b>
is pressed, the following panel will appear:

<p>
<center><img src="pdb_mdb/ReadPDB.png" alt="Load PDB File Panel"></center>

<p>The options are as follows:</p>

<p>
<table cellpadding="5" cellspacing="5" width="100%">

<tr>
<td valign="top"><b>Symmetry</b></td>
<td valign="top">
<div class="floatright">
    <img src="pdb_mdb/symmetry.png"/>
</div>

If <b>None</b> is chosen, then only atoms explicitly represented in the
file are created - no symmetry operators are applied. If the system
was empty, then the current <a href="../apps/crystal.htm">
<span class="nobr">Crystal Parameters</span></a>
(spacegroup, unit cell size and shape) are updated according to information
in the <tt>CRYST1</tt> records.
<p>If <b>Asymmetric Unit</b> is chosen, then any non-crystallographic symmetry
operators (represented by <tt>MTRIXn</tt> records) are
applied to create those atoms in the asymmetric unit that are not explicitly
represented in the file. The crystal parameters are also updated.
<p>If <b>Biomolecule</b> is chosen, then the
atoms representing the presumed "biologically significant
oligomerization state" of the file's primary entity are created by
applying the transforms in the <tt>REMARK 350</tt> record to the chains
specified there.
The crystal parameters are reset and the periodic system display is disabled.

<p>If <b>Contacts (4.5)</b> or <b>Contacts (10)</b> is chosen then
symmetry-related residues with at least one atom within 4.5 (or 10) Ångstroms
of any atom in the asymmetric unit will be created,
and rendered in green. Atoms in the asymmetric unit within 4.5Å
of the crystal contact atoms are placed in a set called "PDB_CrystalContacts".
The crystal parameters are reset and the periodic system display is disabled.

<p>The <b>Enable PBC</b> option is identical to <b>Asymmetric Unit</b>, except
the display of the periodic system will be enabled.
</td></tr>

<tr>
<td valign="top"><b>Load All</b></td>
<td valign="top">
If <b>Models</b> is on, all of the models in a multiple-model PDB file
(such as an NMR file) will be loaded into the system. Otherwise, only the
first model will be loaded. If <b>Entries</b> is on, then all of the structures
in a concatenated file will be read into MOE; otherwise, reading will stop when
the <tt>END</tt> record is encountered.
</td></tr>

<tr>
<td valign="top"><b>Sequence</b></td>
<td valign="top">
If <b>Integrate&nbsp;SEQRES&nbsp;Records</b> is on, then all residues in the
<tt>SEQRES</tt>
records will be created, including those without corresponding entries
in the <tt>ATOM</tt> records.
</td></tr>

<tr>
<td valign="top"><b>Connect</b></td>
<td valign="top">
If <b>Enable Auto-connect</b> is on, automatic bonding of atoms [Labute 2005]
is performed after <tt>CONECT</tt> records are applied.  Automatic bonding
is always done on atoms of amino acid residues.

If <b>Ignore CONECT&nbsp;Records</b> is on, then <tt>CONECT</tt> records will
not be used when creating bonds.
</td></tr>

<tr>
<td valign="top"><b>Alternates</b></td>
<td valign="top">
Specifies the treatment of alternate atom locations. If <b>Ignore</b>
is chosen, only the highest occupancy positions will be read
into MOE. Otherwise all alternative positions will also be read,
and assigned to extra, inert atoms, and atom collections will be
created named PDB_ALTLOC_?, where <b>?</b> will be replaced by
the alternative location character.  In the latter case, the
<b>Show</b> and <b>Hide</b> options control whether these extra
atoms will be initially visible or not.
</td></tr>

<tr>
<td valign="top"><b>Ignore</b></td>
<td valign="top">
If <b>Waters</b> is on, then all waters in the PDB file will be ignored.
If <b>Hetero</b> is on, then all hetero residues
in the PDB file will be ignored.
</td></tr>

<tr>
<td valign="top"><b>New&nbsp;Chains</b></td>
<td valign="top">
If <b>Center&nbsp;Atoms</b> is on, the view in the main MOE window will be
adjusted
so as to place any new atoms at the center.
If <b>Select&nbsp;Chains</b> is on, all new chains from the PDB file
will be selected in the Sequence Editor.
If <b>Close&nbsp;Current&nbsp;System</b> is on, the current system will be
closed
before the new molecules are loaded.
</td></tr>

</table>

<p>To save molecular data to a PDB file,
choose <b>File&nbsp;|&nbsp;Save</b> in either the MOE Window or the
Sequence Editor, then choose <i>Molecule</i> from the <b>Save</b> pulldown menu
and <i>Protein Data Bank (.pdb)</i> from the <b>Format</b> pulldown menu.
The <b>Save</b> Panel will look like this:

<p>
<center><img src="pdb_mdb/WritePDB.png" alt="Save PDB File Panel"></center>

<p>The options are as follows:</p>


<table cellpadding="5" cellspacing="5" width="100%">
<tr>
<td valign="top"><b>Preserve&nbsp;Chain&nbsp;ID</b></td>
<td valign="top">
If on, an attempt will be made to preserve any chain identifier found
in the chain name. If no chain identifier can be found, then the first
available identifier in the sequence [A..Z] is used.
If off, then chains are sequentially assigned a chain identifier
in the range [A..Z].
</td></tr>

<tr>
<td valign="top"><b>Conform Naming to</b></td>
<td valign="top">
If on, hydrogen names will be translated before being written according to
the chosen nomenclature convention. <b>PDB</b> refers to the conventions
in place prior to the RCSB data remediation project; this choice is appropriate
when writing files intended to be read by older, unmaintained software.
<b>PDB&nbsp;v3.0</b> refers to the atom naming conventions adopted during the
remediation project by members of the Worldwide Protein Data Bank consortium
[Berman&nbsp;2003]. <b>IUPAC</b> [IUPAC&nbsp;1998] is identical to
<b>PDB&nbsp;v3.0</b>
except for the naming of the peptide hydrogen atom, which is "HN" as opposed
to "H".
If <b>AMBER</b> is chosen, neutral versions of the typically
charged residues Asp, Glu, Arg and Lys will be renamed.
Histidine residues will be named according to their
protonation state; half-cystines will be named CYX,
as will de-protonated cysteines.
<p><b>Note:</b> the IUPAC treatment of the carboxyl or carboxylate
terminus (O', O'' and H'') is <i>not</i> implemented here.
</td></tr>

<tr>
<td valign="top"><b>Replace B-Factor with</b></td>
<td valign="top">
If on, then the temperature factor field will be used to store the selected
atomic property.  If off, then temperature factor values will be saved.

<p>For more information on the available atomic properties, see
<a href="../moe/fcnref/asmref.htm" class="svl">aSlogP</a>,
<a href="../moe/fcnref/atom_p.htm" class="svl">aCharge</a>,
<a href="../moe/fcnref/atom.htm" class="svl">aIdealVSA</a>,
<a href="../moe/fcnref/potfcn.htm" class="svl">Potential</a>,
<a href="../moe/fcnref/atom_d.htm" class="svl">aScalar</a>,

and
<a href="../moe/fcnref/atom.htm" class="svl">aTempFactor</a>.
</td></tr>

<tr>
<td valign="top"><b>Scale B-Factor Values</b></td>
<td valign="top">
If on, then values saved in the temperature factor field are scaled to the
range [0,100]; otherwise the values are written verbatim.
</td></tr>

<tr>
<td valign="top"><b>Write TER Records for All Chains</b></td>
<td valign="top">
If on, chains will
be written in the same order that they are seen in the Sequence Editor,
and TER records will be written after each chain. Otherwise, protein
chains will be written before non-protein chains, and only protein
chains will be followed by TER records.

<p>
Enabling this option may be necessary for some non-standard PDB readers
to properly interpret PDB files written by MOE.
</p>
</td></tr>

</table>

<a name="OpeningmmCIFFiles"></a>
<h2>Reading mmCIF Files</h2>

To read molecules from mmCIF files into MOE, choose
<b>File&nbsp;|&nbsp;Open</b> in either the MOE Window or
the Sequence Editor.
When mmCIF files are selected in the file list and <b>Open&nbsp;CIF</b>
is pressed, the following panel will appear:

<p>
<center><img src="pdb_mdb/ReadCIF.png" alt="Load CIF File Panel"></center>

<table cellpadding="5" cellspacing="5" width="100%">

<tr>
<td valign="top" width="12%"><b>Max. # Models</b></td>
<td valign="top">
If <b>All</b> is selected, all of the models in a multiple-model mmCIF file
(such as an NMR file) will be loaded into the system. Otherwise, at most the
number of models specified will be loaded.
</td></tr>

<tr>
<td valign="top"><b>Symmetries</b></td>
<td valign="top">
If <b>Non-crystallographic</b> is selected, then any non-crystallographic
symmetry (NCS) operators in the mmCIF file (represented by the
<tt>_struct_ncs_oper</tt> tables) will be
applied to create those atoms in the asymmetric unit that are not explicitly
represented in the file.   When set to <b>Biological&nbsp;Assembly</b>,
all atoms representing the presumed &quot;biologically significant
oligomerization state&quot; of the file's primary entity will be created by
applying the transforms in the <tt>_struct_assembly</tt> tables to the chains
specified there.  NCS images will never be generated when this option is used
since they are mutually exclusive.  When set to <b>None</b>, neither NCS
nor biological assembly information will be applied.

When <b>Install&nbsp;Crystal&nbsp;Parameters</b> is on, the current
<a href="../apps/crystal.htm">
<span class="nobr">Crystal Parameters</span>
</a>
(spacegroup, unit cell size and shape) will be updated according to information
in the CIF file.</td></tr>

<tr>
<td valign="top"><b>Chain Grouping</b></td>
<td valign="top">
If <b>Strict CIF Chains</b> is selected, then each distinct molecule
(represented by a unique <tt>struct_asym.id</tt> in mmCIF) will get its own chain in MOE.
Otherwise, molecules will be grouped together by PDB chain code with the exception
that waters and polymers will always be in their own chains.
</td></tr>

<tr>
<td valign="top"><b>New Objects</b></td>
<td valign="top">
If <b>Center</b> is on, the view in the MOE Window will be adjusted
so as to place any new atoms at the center.
If <b>Select</b> is on, all new atoms, residues and chains will be selected
once loaded.
If <b>Close&nbsp;Current&nbsp;System</b> is on, the current system will be
closed before the new molecules are loaded.
</td></tr>

</table>

<p>
<center><img src="pdb_mdb/SelectAssembly.png" alt="Select Assembly Panel">
</center>
</p>

<p>If <b>Symmetries</b> is set to <b>Biological Assembly</b> and multiple
assemblies are provided in the mmCIF file, a second panel will appear listing
all the assemblies in the file (provided by the file author).  Choose the
assembly you wish to load, or <b>All</b> to load all the assemblies, and press
<b>OK</b>.</p>

<!-- .........................  Render Protein  ...................... -->

<a name="RenderProtein"></a>
<h2>Rendering PDB and CIF files</h2>
<div class="floatleft">
<a href="pdb_mdb/renderprotein.png">
<img src="pdb_mdb/renderprotein_thumb.png"  alt="Protein Render">
</a>
</div>

<p>
When reading a
<a href="#OpeningPDBFiles">PDB File</a>,
<a href="#OpeningmmCIFFiles">mmCIF file</a> or loading an
alignment from <a href="prosearch.htm">MOE-SearchPDB</a> the
structure is automatically rendered to highlight some key features. This
option can be disabled by disabling the <b>Render Protein</b> option in
<span class="menu">MOE | Settings | Protein Defaults...</span>.
<ul>

<li><i>Secondary Structure</i> is highlighted by using ribbons to identify
macromolecular secondary structure type. 
Colors are defined for helix, strand and loop in the
<a href="../appendix/viewsetup.htm#MoleculesRibbons">Molecules & Ribbons</a>
page of the Visualization Setup Panel.
</li>

<li><i>Ligands</i> are always shown and atoms rendered as points, 
colored by atom element and their bonds as cylinders. If covalently bound 
to a residue of a protein, this residue is also shown, it's atoms
rendered as points and bonds as lines.
</li>

<li><i>Metals ions</i> are always shown, colored and labeled by element and
rendered as small-spheres.
</li>

<li><i>Bridging Waters</i> are shown, colored by element and rendered as ball
and stick. A bridging water is defined as having at least 3 strong hydrogen
bonds to 3 different residues and/or ligands. A strong hydrogen bond has
an energy of &le;&nbsp;-1.0 kcal/mol with the receptor 
or &le;&nbsp;-0.5 kcal/mol with a ligand (same energy as in the 
<a href="../moe/gui/mainwin.htm#Contacts">Contact Panel</a>).
In addition to the
water being shown the residues which are in contact with the water (have
strong hydrogen bonds) as also shown, it's atoms rendered as points
and bonds as lines.
</li>

<li><i>Disulfide bonds</i> are shown, colored by element and rendered as points,
bonds as lines.

<li><i>DNA/RNA Molecules</i> are shown, colored by element and rendered
as points, bonds as lines.
</li>

<li><i>Key Hydrogen Bonds</i> are shown. If it is a protein residue, 
it's atoms rendered as points and bonds as cylinders, all other residues
are rendered as described above. 
A "Key Hydrogen Bond" is defined as having an energy of at least
&le;&nbsp;-4.0 kcal/mol between 2 receptor residues or
&le;&nbsp;-2.0 kcal/mol with
a ligand (same energy as in the 
<a href="../moe/gui/mainwin.htm#Contacts">Contact Panel</a>). 
</li>

</ul>

<br clear="all">


<!-- .......................  Antibody  Database ..................... -->

<a name="fabDB"></a>
<h2>The MOE Antibody Database</h2>

The central building block for knowledge-based <a href="antibody.htm">
antibody homology modeling</a> is the antibody structure database, which
constitutes the information pool of the antibody homology modeling 
procedures. The current antibody structure collection (MOE&nbsp;2014.09)
is composed of
over 3000 V<sub>L</sub> and 3000 V<sub>H</sub> chains stored in
<tt>$MOE/lib/fab.mdb</tt>

<p>

In addition to the structure coordinates, a variety of complementary
information regarding the antibody chain is stored in the following
data fields:

<p>
<table class="titlebar" align="center" border="1" cellpadding="3">
<tr>
  <th>Field</th>
  <th>Description</th>
</tr>
<tr>
  <td valign=top><b><tt>mol</tt></b></td>
  <td>

  A molecule field storing the structure data of the antibody chain.</td>

</tr>
<tr>
  <td valign=top><b><tt>Code</tt></b></td>
  <td>

  A character field specifying the PDB code of the structure.</td>

<tr>
<tr>
  <td valign=top><b><tt>Chain</tt></b></td>
  <td>

  A character field specifying the chain name of the antibody chain.</td>

</tr>
<tr>
  <td valign=top><b><tt>Resolution</tt></b></td>
  <td>

  The X-ray structure resolution as specified in the PDB header.</td>

</tr>
<tr>
  <td valign=top><b><tt>R_Value</tt></b></td>
  <td>

  The X-ray structure R-Value as specified in the PDB header.</td>

</tr>
<tr>
  <td valign=top><b><tt>R_free</tt></b></td>
  <td>

  The X-ray structure R<sub>free</sub> value as specified in the PDB header.</td>

</tr>
<tr>
  <td valign=top><b><tt>Date</tt></b></td>
  <td>

  The submission date of the structure into the PDB.</td>

</tr>
<tr>
  <td valign=top><b><tt>Class</tt></b></td>
  <td>A character field specifying the antibody class (VL or VH)</td>
</tr>
<tr>
  <td valign=top><b><tt>Subclass</tt></b></td>
  <td>

  A character field specifying the subclass of antibody chains. This field is
  only relevant for VL chains.</td>

</tr>
<tr>
  <td valign=top><b><tt>Source</tt></b></td>
  <td>

  A character field specifying the species of the antibody chain.</td>

</tr>
<tr>
  <td valign=top><b><tt>SciSource</tt></b></td>
  <td>

  A character field specifying the scientific notation of the species.</td>

</tr>
<tr>
  <td valign=top><b><tt>Segments</tt></b></td>
  <td>

  A vector of 7 integers specifying the number of residues in antibody
  subdomains FR1, CDR1, FR2, CDR2, FR3, CDR3 and FR4 respectively.</td>

</tr>
<tr>
  <td valign=top><b><tt>bb_topology</tt></b></td>
  <td>

  This field is stores the raw data for the backbone topology for each of the
  seven antibody subdomains (FR1-4, CDR1-3). The vector length is seven and
  serves as the basis for calculating the backbone topology score.</td>

</tr>
<tr>
  <td valign=top><b><tt>bb_geom</tt></b></td>
  <td>

  This field is stores the raw data for the backbone geometry data for
  each of the seven antibody subdomains (FR1-4, CDR1-3). The vector
  length is seven, the values are the counts of outliers (Z-scores >
  4.0) of the dihedral angles phi/psi and omega per subdomain. </td>

</tr>
<tr>
  <td valign=top><b><tt>bb_BFactor</tt></b></td>
  <td>

  This field is stores the B-Factor values of the backbone atoms N, CA, C and O
  for each of the seven antibody subdomains (FR1-4, CDR1-3). The vector length
  is seven, the values represent the average of the B-Factor values over the
  respective subdomain.</td>

</tr>
<tr>
  <td valign=top><b><tt>bb_occ</tt></b></td>
  <td>

  This field is stores the occupancy values of the backbone atoms N, CA,
  C and O for each of the seven antibody subdomains (FR1-4, CDR1-3). The
  vector length is seven, the values represent the average occupancies
  over the respective subdomain.</td>

</tr>
<tr>
  <td valign=top><b><tt>bb_CAonly</tt></b></td>
  <td>Flag to indicate if the structure is a CA-trace structure. </td>
</tr>
<tr>
  <td valign=top><b><tt>Scores</tt></b></td>
  <td>

  The structure scores as calculated from the structure raw data stored in
  columns <i>bb_geom</i>, <i>bb_topology</i>, <i>Resolution</i>, <i>R_Value</i>
  and <i>R_free</i>. The total length per entry is 32.<br>

  <pre>
        1:  Overall structure score
      2-7:  Topology scores of subdomains FR1, CDR1, FR2, CDR2, FR3, CDR3
     8-13:  Geometry scores of subdomains FR1, CDR1, FR2, CDR2, FR3, CDR3
    14-19:  B-Factor scores of subdomains FR1, CDR1, FR2, CDR2, FR3, CDR3
    20-25:  Occupancy scores of subdomains FR1, CDR1, FR2, CDR2, FR3, CDR3
       26:  Score for Resolution
       27:  R-Value/R<sub>free</sub> scores
    28-31:  Residue length of domains FR, CDR1, CDR2, CDR3
       32:  flag to specify, if antibody structure is a CA-trace structure
  </pre>
  </td>
</tr>
<tr>
  <td valign=top><b><tt>Dimer</tt></b></td>
  <td>

  A character field to specify the chain code of the chain
  with which the current entry chain forms a F<sub>V</sub>
  dimer complex.
  </td>

</tr>
<tr>
  <td valign=top><b><tt>DimerType</tt></b></td>
  <td>

  A character field to specify the type of antibody F<sub>V</sub> dimer.
  In most cases, the F<sub>V</sub> complex is composed of an antibody light and
  heavy chain (VL:VH), for
  camel antibodies the entry is VH:VH and for rare and engineered
  F<sub>V</sub>s the entry
  is VL:VL. This entries are used to filter the
  <span class="nobr">VL + VH</span>
  result sets according to
  the classes specified by the search queries.
  </td>
</tr>
<tr>
  <td valign=top><b><tt>Complex</tt></b></td>
  <td>

  A character field to specify the type of antigen the antibody chain
  is complexed with. The values are single characters specifying "P"
  (Protein), "H" (Hapten) or "W" (crystallographic waters).</td>

</tr>
<tr>
  <td valign=top><b><tt>Comment</tt></b></td>
  <td>

  A character field to store additional information. Currently, a
  note is stored in this field, if an antibody chain was detected as a
  scF<sub>V</sub> chain.</td>

</tr>
<tr>
</table>

<!-- .......................  Antibody  Family File ..................... -->
<a name="FabFam"></a>
<h3>MOE Antibody Family File</h3>

<p> For efficient template searching, the chains in the database are grouped by
class (V<sub>L</sub> or V<sub>H</sub>) and species.  Additionally, the light
chains are further grouped into <i>kappa</i> or <i>lambda</i> subclusters. The
immunoglobulin clusters obtained from the structure database SCOP
[Chothia&nbsp;1997] are used as seeds for the clustering procedure: each chain
of the antibody database is aligned with clusters of matching class, subclass
(V<sub>L</sub> only) and species.  The framework identity (composed of the
subdomains FR1, FR2 and FR3) with each member of these clusters is calculated
and new clusters are formed if the identity is lower
than 60%. Otherwise, the antibody chain is added to the cluster with the
highest identity.

<p> After updating the antibody database, the newly formed or enriched clusters
are further clustered based on structural superposition of framework
residues. The Root Mean Square Distances (RMSD in &Aring;)  are calculated upon
superposition of the framework CA atoms  and a single-linkage clustering
calculation is applied to determine clusters at a resolution of 0.85 &Aring;.
The database clustering scheme is illustrated in Figure 1. The alignments of the
resulting clusters are stored in a antibody family file. The fam file
corresponding to the default MOE antibody database is termed
<tt>$MOE/lib/fab.fam</tt>. This file represents the core of the
antibody template search.

<div align=center style="padding:15px;">
<img src="pdb_mdb/abcoll.png"  alt="Antibody Family Clustering">
<br>
<b>Figure 1:</b> <i>Antibody Database Clustering Scheme</i>
</div>

<!-- .......................  MOE Project Databases ..................... -->

<a name="projDB"></a>
<h2>The MOE Project Databases</h2>

<p>A number of protein family databases &mdash; including kinases and GPCRs &mdash; are
provided in the <tt>$MOE/lib/project</tt> directory.  These databases have been created
using the <a href="moeproject.htm">MOE Project</a> framework, and are all very
similar in construction and appearance.  Each is superposed into a common
frame of reference based on the core region of the reference <tt>.moe</tt> files, which are also
found in <tt>$MOE/lib/project</tt>.  The databases can all be used with the
<a href="projsrch.htm">Project Search</a> panel as the repository for
all relevant information used in this application.
</p>

<p>The following describes the fields common to all of the provided MOE project
databases:</p>

<p><center>
<!-- <table border="0" cellpadding="3" width="100%"> -->
<table class="titlebar" align="center" border="1" cellpadding="3">
<tr>
  <th>Field</th>
  <th>Description</th>
</tr>
<tr>
  <td valign=top><b><tt>moe</tt></b></td>
  <td>A moe field that stores the structure data of the kinase chain (including any
  ligands) and any nearby chains in the vicinity of the pocket.</td>
</tr>
<tr>
  <td valign=top><b><tt>ligand</tt></b></td>
  <td>A molecule field that stores the structure data of the ligand residue(s).
        The ligand is expected to be in the main kinase pocket region.
  </td>
</tr>
<tr>
  <td valign=top><b><tt>code</tt></b></td>
  <td>A character field that specifies the PDB code of the structure.</td>
</tr>
<tr>
  <td valign=top><b><tt>header</tt></b></td>
  <td>A brief description of the complex from the PDB header.</td>
</tr>
<tr>
  <td valign=top><b><tt>FP:BIT_MACCS</tt></b></td>
  <td>The BIT_MACCS fingerprint of the ligand.</td>
</tr>
<tr>
  <td valign=top><b><tt>FP:PLIF</tt></b></td>
  <td>The Protein-Ligand Interaction Fingerprint (PLIF) data.</td>
</tr>
<tr>
  <td valign=top><b><tt>lip_druglike</tt></b></td>
  <td>The Lipinski drug-like test of the ligand.</td>
</tr>
<tr>
  <td valign=top><b><tt>SlogP</tt></b></td>
  <td>The Log Octanol/Water partition coefficient of the ligand.</td>
</tr>
<tr>
  <td valign=top><b><tt>TPSA</tt></b></td>
  <td>The topological surface area of the ligand.</td>
</tr>
<tr>
  <td valign=top><b><tt>logS</tt></b></td>
  <td>The Log Solubility in water of the ligand.</td>
</tr>
<tr>
  <td valign=top><b><tt>Weight</tt></b></td>
  <td>The molecular weight of the ligand.</td>
</tr>
<tr>
  <td valign=top><b><tt>FCharge</tt></b></td>
  <td>The sum of formal charges on the ligand.</td>
</tr>
<tr>
  <td valign=top><b><tt>a_don</tt></b></td>
  <td>The number of H-bond donor atoms in the ligand.</td>
</tr>
<tr>
  <td valign=top><b><tt>a_acc</tt></b></td>
  <td>The number of H-bond acceptor atoms in the ligand.</td>
</tr>
<tr>
  <td valign=top><b><tt>b_rotN</tt></b></td>
  <td>The number of rotatable bonds in the ligand.</td>
</tr>
<tr>
  <td valign=top><b><tt>SMR</tt></b></td>
  <td>The molar refractivity of the ligand.</td>
</tr>
<tr>
  <td valign=top><b><tt>gene</tt></b></td>
  <td>The gene(s) from which the protein was derived, possibly including
  aliases.</td>
</tr>
<tr>
  <td valign=top><b><tt>compnd</tt></b></td>
  <td>A detailed description of the protein(s) in the complex, including any
    common synonyms.
  </td>
</tr>
<tr>
  <td valign=top><b><tt>source</tt></b></td>
  <td>A detailed description of the source of the protein(s) in the complex,
    including both gene source and expression system.
  </td>
</tr>
<tr>
  <td valign=top><b><tt>expdta</tt></b></td>
  <td>The experimental method used to derive the structure.
  </td>
</tr>
<tr>
  <td valign=top><b><tt>sequence</tt></b></td>
  <td>The amino acid sequence of the protein(s) in the complex, in FASTA format.
<!--
    A character field with the sequence (1-letter representation) of the
  kinase in the catalytic core. The N-terminal end is set to start eight
  residues downstream the G-Loop.
-->
  </td>
</tr>
<tr>
  <td valign=top><b><tt>title</tt></b></td>
  <td>A title provided by the record author.
  </td>
</tr>
<tr>
  <td valign=top><b><tt>resolution</tt></b></td>
  <td>The X-ray structure resolution, as specified in the PDB header.</td>
</tr>
<tr>
  <td valign=top><b><tt>free_R</tt></b></td>
  <td>The <i>free_R</i> value measures the quality of the atomic model derived from
    the X-Ray crystal data by partitioning the experimental data into two
    unequal sets, refining the larger set, and then calculating how
    well the refined model fits the unrefined data.
  </td>
</tr>
<tr>
  <td valign=top><b><tt>date</tt></b></td>
  <td>The date the structure was released.
  </td>
</tr>
<tr>
  <td valign=top><b><tt>loop</tt></b></td>
  <td>A molecule field that serves as a source for loops when using the
    <a href="../apps/proloop.htm">Loop Modeler</a>.
  </td>
</tr>
<tr>
  <td valign=top><b><tt>rmsd</tt></b></td>
  <td>The Root Mean Square Deviation (RMSD) of the structure when compared to the reference
    superposition.
  </td>
</tr>
<tr>
  <td valign=top><b><tt>zscore</tt></b></td>
  <td>The significance of the alignment of the sequence to the reference.
  </td>
</tr>
</table></center></p>

<!-- .......................  Kinase Database ..................... -->

<a name="kinDB"></a>
<h2>The MOE Kinase Database</h2>

<p>The MOE kinase database is part of the MOE Project databases described in
the previous section, and is found at <tt>$MOE/lib/project/Protein Kinase.mdb</tt>.
After their identification, kinase chains are further classified based on their
sequence identity within the kinase core.  If this is at least 45% within one
of the classes in the reference file <tt>$MOE/lib/kin_ref.fam</tt>, that class
is assigned; otherwise a check is conducted to verify if the sequence is
sufficiently close to one of the known pseudo kinases in the pseudo reference
file (<tt>$MOE/lib/kin_refpseudo.fam</tt>).  If the sequence identity is
higher than 35%, the sequence group is labeled as <i>Pseudo-Kinase</i>.
Sequences that are positive with respect to kinase pattern detection (G-Loop,
DFG and HRD) but lack sufficient homology with the reference sequences are
not given any classification for a kinase group, family, or subfamily.
This might apply for distant species like
bacteria, parasites, nematodes etc., since the reference collection
is biased towards the detection of human kinases.  In addition to
classifications based on sequence, the conformational states of distinct
topologies such as the DFG segment or alpha-C helix are also stored in the
database.
</p>

<!--
<p>
Each kinase structure is clustered based on structural superposition of CA
atoms within dedicated <a href="kinase.htm#kinClustering">kinase pocket
residue sets</a> (<i>core, pocket, canonical</i>) and the corresponding
cluster id of respective set is stored in the database. The RMSD
cutoff for forming a structure cluster in the MOE kinase database is
set to 1.0 &Aring; allowing for fast extraction of kinases with similar
pocket architecture.
-->

<p>The kinase database includes all the fields described in the previous
section, as well as the following kinase-specific fields:

<p><center>
<!-- <table border="0" cellpadding="3" width="100%"> -->
<table class="titlebar" align="center" border="1" cellpadding="3">
<tr>
  <th>Field</th>
  <th>Description</th>
</tr>
<tr>
  <td valign=top><b><tt>group</tt></b></td>
  <td>A character field that specifies the kinase group; it is generally related to the
    broad substrate site specificity.</td>
</tr>
<tr>
  <td valign=top><b><tt>family</tt></b></td>
  <td>A character field that specifies the kinase family; it groups kinases by both
    sequence similarity and function.</td>
</tr>
<tr>
  <td valign=top><b><tt>subfamily</tt></b></td>
  <td>A character field that specifies the kinase subfamily; these have finer sequence
    and functional similarity, and are generally conserved at least across
    species.</td>
</tr>
<tr>
  <td valign=top><b><tt>DFG</tt></b></td>
  <td>A character field that specifies the DFG conformation state. Kinases
  in DFG-in conformation (active form) are set to 'In', and they are set to 'Out' if DFG-out
  conformation is assumed. The value is empty if neither of the criteria for
  DFG-in nor DFG-out are met.
  </td>
</tr>
<tr>
  <td valign=top><b><tt>alphaC</tt></b></td>
  <td>
    A character field that specifies the interaction of Lys72 and Glu91
    residues. It is commonly accepted that the interaction of these
    highly conserved residues is critical for assuming appropriate pocket
    architecture. If an ionic interaction between these two residues
    is formed within 5.5 &Aring; the value is set to 'In', otherwise the
    value is set to 'Out'.  In case the kinase does not harbor any of these
    highly conserved residues, the value is empty.
  </td>
</tr>
<tr>
  <td valign=top><b><tt>ligclass</tt></b></td>
  <td>
   A character field that presents a comma-separated list of classes as
   specified in the ligand class database the ligand has been positively
   identified.
  </td>
</tr>
<tr>
  <td valign=top><b><tt>bind</tt></b></td>
  <td>
   An character field of length 6 that indicates binding of the ligand to the
   ATP-binding pocket regions.  For each of G-Loop (G), Hyd1 (Y), alphaC (A),
   Hinge (H), HRD (R) and DFG (D), either the letter in parentheses or a dash
   (-) will be given, depending on whether the interaction is present or absent,
   respectively.
  </td>
</tr>
<tr>
  <td valign=top><b><tt>RD</tt></b></td>
  <td>A single character that specifies the code for the amino acid preceding
  the catalytically critical Asp166.  For kinases lacking the DFG motif, the
  value is empty.
  </td>
</tr>
<!--
<tr>
  <td valign=top><b><tt>cid_core</tt></b></td>
  <td>An integer field denoting the membership to predefined kinase clusters.
  The RMSD of the backbone atoms N,Ca,C and O of the <i>core</i> residues is
  measured with each representative of the kinase cluster collection.
  The cluster ID of the representative with the lowest RMSD is assigned if the
  value is below 1.0 &Aring;, otherwise a new cluster (and id) is formed.
  </td>
</tr>
<tr>
  <td valign=top><b><tt>cid_pocket</tt></b></td>
  <td>An integer field denoting the membership to predefined kinase clusters.
  The RMSD of the backbone atoms N,Ca,C and O of the <i>pocket</i> residue
  collection is measured with each representative of the kinase cluster
  collection. The cluster ID of the representative with the lowest RMSD is
  assigned if the value is below 1.0 &Aring; otherwise a new cluster is formed.
  </td>
</tr>
<tr>
  <td valign=top><b><tt>cid_canonical</tt></b></td>
  <td>An integer field denoting the membership to predefined kinase clusters.
  The RMSD of the backbone atoms N,Ca,C and O of the <i>canonical</i> residue
  collection is measured with each representative of the kinase cluster
  collection. The cluster ID of the representative with the lowest RMSD is
  assigned if the value is below 1.0 &Aring; otherwise a new cluster is formed.
  </td>
</tr>
<tr>
  <td valign=top><b><tt>comment</tt></b></td>
  <td>
  A character field to store additional information. Currently, a note is stored
  in this field, if more than one candidate for ligand has been detected.
  </td>
</tr>
-->
</table></center></p>

<p>
The current MOE kinase database compiled in MOE 2014.09 contains
4,311 classified kinase structures comprising the following kinase groups, as
displayed in Figure 2:

<div align=center>
<img src="pdb_mdb/kinaseDB.png"
        alt="Distribution of Kinase Groups in MOE 2014">
<br>
<b>Figure 2:</b> <i>Distribution of Kinase Groups in MOE 2014.09</i>
</div>

<!-- .......................  GPCR Database ..................... -->

<a name="gpcrDB"></a>
<h2>The MOE GPCR Database</h2>
<p>
The G protein-coupled receptors (GPCRs) comprise the largest family
of integral membrane proteins and one of the most important classes
of drug targets.  In an effort to assist in 3D structure modeling and
function annotation, the GPCR Class A structure repository is provided
with the other MOE Project databases in
<tt>$MOE/lib/project/GPCR CLASS A.mdb</tt>.
</p>

<p>For the other MOE Project databases, each entry has been superposed
to a set of GPCR reference structures (located in
<tt>$MOE/lib/project/GPCR CLASS A.moe</tt>) in the core region of the TM
helices. Since the TM region is used to create the unified frame
of reference, structures lacking the TM region (class B to F GPCRs)
have not been included in the GPCR database.
</p>

<p>The database includes all of the fields common to the MOE Project databases,
as described above, as well as the following GPCR-specific fields:</p>

<p><center>
<table class="titlebar" align="center" border="1" cellpadding="3">
<tr>
  <th>Field</th>
  <th>Description</th>
</tr>
<tr>
  <td valign=top><b><tt>family</tt></b></td>
  <td>A character field specifying the GPCR family.</td>
</tr>
<tr>
  <td valign=top><b><tt>subfamily</tt></b></td>
  <td>A character field specifying the GPCR subfamily.</td>
</tr>
<tr>
  <td valign=top><b><tt>cluster</tt></b></td>
  <td>A character field denoting the cluster association in the GPCRDB database
  [Horn&nbsp;2003].
  </td>
</tr>
<!--
<tr>
  <td valign=top><b><tt>tm_numbering</tt></b></td>
  <td>An integer field denoting the TM Weinstein numbering for each residue of
  the GPCR chain [Weinstein&nbsp;1995]. Residues outside the TM region are
  set to 0.
  </td>
</tr>
<tr>
  <td valign=top><b><tt>tm_sequence</tt></b></td>
  <td>A character field with the sequence (1-letter representation) of the
  combined TM region of the GPCR.
  </td>
</tr>
<tr>
  <td valign=top><b><tt>comment</tt></b></td>
  <td>
  A character field to store additional information.
  </td>
</tr>
-->
</table></center></p>

<p>
The current MOE GPCR database compiled in MOE&nbsp;2014.09 comprises
164 GPCR Class A structures, as displayed in
Figure 3:

<div align=center style="padding:15px;">
<img src="pdb_mdb/gpcrfams.png" style="width:400px; height:auto; float:none;"
        alt="Distribution GPCR Families in MOE 2014" />
<br /><br />

<b>Figure 3:</b> <i>Distribution of GPCR Families in
MOE&nbsp;2014.09</i>
</div>

<a name="DBUpdate"></a>
<h2>Updating MOE Structure Databases</h2>
<p>

The MOE protein databases as described above are compiled and updated
for each MOE release cycle. However, it is often convenient or even
required to update the structure repository within shorter - e.g. weekly
- time spans. In addition, available in-house structures should ideally
be integrated into the respective structure repositories as well. The
MOE database update application offers a common interface for updating
all of the repositories by employing fully automated
update scripts for each of the protein families. The
application is designed as an incremental update system with the goal to
continuously enrich existing protein databases. The protein structure
files used for updating a distinct database may be downloaded
from a PSILO server or from the RCSB PDB internet site into a specified
download directory, provided that proper connectivity to these servers
has been established. Alternatively, in-house structure files or a
local PDB mirror located on your local computer or your network may
be specified as a structure source.

<br />

The fully automated update protocol has specific
requirements in order to complete successfully. For example, after updating
the antibody database, the Fab structures also have to be clustered (see
above) in order to generate the associated structure family file. The
antibody family file is created as a text file with the same file name
as the output database, but a <tt>.fam</tt> file extension. The user
may determine the clustering resolution of newly formed clusters but
should be aware that two files are created in this update mode because
both files are required in antibody homology modeling. On average,
the antibody clustering routine will consume approx. 10-15 minutes on
a regular desktop computer (Macintosh Mac Pro 2 Dual-Core Intel Xeon
Processors at 2.66 GHz).

The other databases follow the MOE Project scheme and therefore are all
processed in a similar way, with identical options.

<br />

For conducting database updates it is not necessary to employ a computing
cluster or special hardware. Updates performed every 14 days can be
performed in less than 20 minutes on a Macintosh Mac Pro, 2 Dual-Core
Intel Xeon Processors at 2.66 GHz for each protein family (for antibodies,
the time for clustering should be added).
<br /><br />
The update application may be launched by using the user interface or by running
as a MOE-batch job.
<br />


<a name="dbupdateDBPanel"></a>
<h3>Protein Database Update Panel</h3>

The Protein Database Update panel may be launched via the
<a href="../moe/gui/svlcommands.htm#CLI">CLI</a> by typing
<tt>run 'dbupdate.svl'</tt>
<div align=center style="padding:15px;">
    <img src="pdb_mdb/updatepanel.png" width="506px" alt="Protein Database Update Panel">
</div>
<p>The options are as follows:</p>

<table cellpadding="5" cellspacing="5" width="100%">
 <tr>
  <td valign="top"><b>Protein Family</b></td>
  <td valign="top">
    Specify the protein family (<i>Antibody, Kinase, GPCR, etc.</i>) to be
    created or updated.  Select <i>Other Project</i> to work with a project or
    family that is not listed.
  </td>
 </tr>
 <tr>
  <td valign="top"><b>Build New/Update</b></td>
  <td valign="top">
    By default the script will run in <i>Update</i> mode, only adding structures to
    the database that have changed since the last time an update was run.  File
    checksums are used to verify whether a specific file is in the database
    already or not.  If <i>Build New</i> is selected, the <b>Output Database</b> (see below)
    will be created from scratch, and all structures in the family will be
    added to the database.
  </td>
 </tr>
 <tr>
  <td valign="top"><b>Input Database</b></td>
  <td valign="top">
    <div class="floatright"><img src="pdb_mdb/inputmdb.png" height="22px" /></div>
    Specify the structure database to be updated or
    use the <b>Browse</b> button for input specification. By default,
    the antibody database located in <tt>$MOE/lib</tt>, or other families in
    <tt>$MOE/lib/project</tt>, are assigned as input parameters. However, due to
    the incremental nature of the update system, it is recommended to always
    use the most recent protein database as input. The content of the input
    database will not be altered during the update and it may be in a
    read-only location.  In <i>Build New</i> mode, this option does not apply.
  </td>
 </tr>
 <tr>
  <td valign="top"><b>Output Database</b></td>
  <td valign="top">
    <div class="floatright"><img src="pdb_mdb/outputmdb.png" height="21px" /></div>
    Specify the name of the structure database after the update has been
    completed or use the <b>Browse</b> button to specify an
    existing database as the target. By default, an <b>Output Database</b> name is
    issued as a combination of protein family and date (format <tt>YYYYMMDD</tt>).
    If the <b>Output Database</b> is the same as the <b>Input Database</b>, the update will
    be made to a temporary file, and copied to replace the Database after
    successful completion of the update.
    <blockquote>
      <b>Note:</b>&nbsp;&nbsp;The database update will fail if the write
      permissions associated with the <b>Output Database</b> are not granted or if
      specified in <tt>$MOE/lib</tt> or subdirectories thereof.  Any existing
      database will be overwritten by a copy of the <b>Input Database</b> (in
      <i>Update</i> mode) or deleted (in <i>Build New</i> mode) before the update begins.
    </blockquote>
  </td>
 </tr>
<!--
 <tr>
  <td valign="top"><b>Save as Default</b></td>
  <td valign="top">
    <div class="floatright"><img src="pdb_mdb/savedefault.png"/></div>
    For kinase database update, the resulting <b>Output Database</b> may be set as the default by changing the settings in the <a href="../appendix/moeconfig.htm">MOE RC file</a>.
  </td>
 </tr>
-->
 <tr>
  <td valign="top"><b>Overwrite Existing Entries</b></td>
  <td valign="top">
    <div class="floatright"><img src="pdb_mdb/overwrite.png" height="21px" /></div>
    This option applies only to the Antibody <b>Protein Family</b>.
    As mentioned above, the protein database update system is incremental by
    design. This means that only new structures are being added during the
    update process. However, in case an in-house structure or (less likely) a
    PDB file has been modified, it can be useful to replace an existing entry
    in the database with the content of the altered structure files. This
    behavior is accomplished by checking <b>Overwrite Existing Entries</b>.
    
  </td>
 </tr>
 <tr>
  <td valign="top"><b>Open in Database Viewer</b></td>
  <td valign="top">
    <div class="floatright"><img src="pdb_mdb/openinviewer.png" height="21px" /></div>
    If checked, the <b>Output Database</b> will be opened in a Database Viewer window
    upon successful completion of the update.
  </td>
 </tr>
 <tr>
  <td valign="top"><b>Open Log File</b></td>
  <td valign="top">
    <div class="floatright"><img src="pdb_mdb/openlogfile.png" height="22px" /></div>
    If checked, a log file will be opened in a new window upon completion of
    the update.  Any error messages or warnings that occurred while building
    the database will be shown here.
  </td>
 </tr>
  <td valign="top"><b>Configuration File</b></td>
  <td valign="top">
    <div class="floatright"><img src="pdb_mdb/configfile.png" height="22px" /></div>
    Specify the XML MOE Project configuration file to be used for generating
    the new database.  This only applies in <i>Build New</i> mode and is not used
    with the Antibody database.  When updating an existing database, the
    configuration used when it was first created is automatically used.
    To create a new configuration file, click the <img src="pdb_mdb/edit_button.png" height="20px" alt="Edit" />
    icon to launch the MOE/web <a href="../moe/moeweb_intro.htm#Configure_Project_Database">
    Configure Project Database</a> tool in your web browser.  Note that this may
    start an instance of MOE/web server on the local machine if it is not
    already running.  In that case, you will be asked if you wish to stop
    MOE/web once the panel is closed.
  </td>
 </tr> 
 </tr>
  <td valign="top"><b>Reference File</b></td>
  <td valign="top">
    <div class="floatright"><img src="pdb_mdb/reffile.png" height="22px" /></div>
    Specify the MOE Project reference .moe file to be used for generating
    the new database.  This only applies in <i>Build New</i> mode and is not used
    with the Antibody database.  When updating an existing database, the
    reference used when it was first created is automatically used.
    The reference file will be copied to the Download Directory (see below)
    which is the root location for all of the source files (PDB, MTZ, SDF, etc.)
    that will be used to build the project database.
  </td>
 </tr> 
  <tr>
  <td valign="top"><b>Source</b></td>
  <td valign="top">
    <div class="floatright"><img src="pdb_mdb/downloadsrc.png" height="85px" /></div>
    For conducting an update, a structure source has to be specified. This
    could be any directory on your local machine or network and is shown as
    <b>Local</b> in the option menu.

    The protein structure update system offers direct link between MOE and a
    <a href="http://www.chemcomp.com/PSILO-Protein_Structure_Database_System.htm" target="_blank">PSILO
    server</a> as well as the <a href="http://www.rcsb.org">RCSB Protein Data
    Bank</a> internet site, provided that proper connectivity to the servers has
    been established.  To configure PSILO for use with MOE, click the
    <img src="pdb_mdb/configure_button.png" height="20px" alt="Configure" /> button.  Please refer to the instructions
    outlined in the <a href="../appendix/settings.htm#PSILO">MOE Configuration
    Options</a> for further details on setting up the server specifications.
    <i>RCSB PDB</i> is also in the option menu and the user has to specify a
    <b>Download Directory</b> as the destination for the structure files
    obtained from the RCSB or PSILO server.
  </td>
 </tr>
 </tr>
  <td valign="top"><b>URL</b></td>
  <td valign="top">
    <div class="floatright"><img src="pdb_mdb/RCSBurl.png" height="21px" /></div>
    Specifies the URL of the PSILO or RCSB server where files will be downloaded
    from.  This does not apply if files are Local.  This value cannot be
    directly modified in the panel and is for information only.
  </td>
 </tr> 
 </tr>
  <td valign="top"><b>Download To</b>/<b>Source Directory</b></td>
  <td valign="top">
    <div class="floatright"><img src="pdb_mdb/downloaddir.png" height="22px" /></div>
    Provides the location where files will be downloaded to (if coming from
    RCSB or PSILO) or where the files are already located (if Local).<br />
    <blockquote>
      <b>Note:</b>&nbsp;&nbsp; Downloading files from the internet or PSILO
      requires that Java has been configured to run with MOE. Please read the
      instructions on <a href="../install/install.htm#JDBC">installing&nbsp;Java</a>
      if there is any trouble using the update tool.
    </blockquote>
    In case the database update is not based on server download, then only the
    top-level directory of your protein structures should be specified as the
    <b>Structure Repository</b>, since all subdirectories will be included when
    searching for structure files.
  </td>
 </tr> 
 <tr>
  <td valign="top"><b>Include Pattern</b></td>
  <td valign="top">
    <div class="floatright"><img src="pdb_mdb/includepat.png" height="22px" /></div>
    This setting is most useful if the protein structure source is a
    local/network directory (see above), in order to find the correct structure
    files.  Otherwise, the default settings for the PSILO and RCSB PDB download
    should be used.  Provide here a comma-separated list of filename patterns
    that indicates which files (and directories) should be included when
    building the project database. The files and directories that are included 
    are only those within the root location specified previously, and which
    match at least one of the filename patterns given here. Wildcards such as
    <tt>*</tt>, <tt>?</tt>, <tt>@</tt>, and <tt>#</tt> can be used to indicate: 
    zero or more characters, any one character, any one letter or underscore,
    or any one numerical digit respectively.  The default include-pattern
    depends on the Source and indicates that all files and directories are 
    included within the root directories that were specified previously.
    Setting the pattern to <tt>*new*</tt>, for example, would only include
    files with <i>new</i> somewhere in their path or filename.
  </td>
 </tr>
 <tr>
  <td valign="top"><b>Exclude Pattern</b></td>
  <td valign="top">
    <div class="floatright"><img src="pdb_mdb/excludepat.png" height="21px" /></div>
    This setting is most useful if the protein structure source is a
    local/network directory (see above), in order to find the correct structure
    files.  Provide here a comma-separated list of filename patterns that
    indicates which files (and directories) to exclude when building the
    project database. The files and directories that are excluded are only
    those gathered after applying the include-pattern specified previously,
    and which match at least one of the filename patterns given here.
    Wildcards can again be used. The default exclude-pattern is blank, which
    indicates that no files or directories are excluded as potential project
    source files.
  </td>
 </tr>
 <tr>
  <td valign="top"><b>PFAM Id(s)</b></td>
  <td valign="top">
    <div class="floatright"><img src="pdb_mdb/PFAMid.png" height="22px" /></div>
    When downloading files from RCSB or PSILO, a comma-separated list of
    PFAM identifiers can be given to reduce the number of structures that will
    be downloaded, restricting them to the family of interest.  Most of the
    families provided with MOE have a preset list of PFAM identifiers already
    provided, but for Other Projects, this must be supplied to avoid downloading
    the entire PDB database.  PFAM is a database of protein families and can be
    browsed and searched by clicking the <img src="pdb_mdb/link_button.png" height="20px" alt="Link" /> icon to
    go to the PFAM website in your browser.
  </td>
 </tr>
 <tr>
  <td valign="top"><b>Since</b></td>
  <td valign="top">
    <div class="floatright"><img src="pdb_mdb/since.png" height="24px" /></div>
    By default, the date of a successful update will be stored in the
    respective <b>Output Database</b>. This date is then used as a filter parameter
    for the next database update, reducing the amount of relevant files
    that are needed for the update. Consequently, for a normal incremental database update
    session, this field is not required. However, if older files should be
    included &mdash; for example, to overwrite existing entries &mdash; it is recommended to set
    the date from which files should be downloaded, in the format
    <tt>YYYY-MM-DD</tt>.
  </td>
 </tr>
<!--
 <tr>
  <td valign="top"><b>Ligand Class Database</b></td>
  <td valign="top">
    <div class="floatright"><img src="pdb_mdb/ligdir.png"/></div>
This parameter is only relevant when updating a kinase database. The
ligand class database is used to assign membership of a kinase ligand to one or
more dedicated ligand classes. By default, the class database in
<tt>$MOE/lib/kin_ligclasses.mdb</tt> is specified.
  </td>
 </tr>
-->
 <tr>
  <td valign="top"><b>Cluster Resolution</b></td>
  <td valign="top">
    <div class="floatright"><img src="pdb_mdb/clustres.png" height="22px" /></div>
    This parameter is only relevant for an Antibody <b>Protein Family</b>.
    The specified value determines the cluster resolution (in Angstroms)
    used in building the corresponding antibody family file (see above). The
    clustering is based on the backbone RMSD in the Framework region of the
    respective antibody chains. By default, the value is set to 0.85 &Aring;.
  </td>
 </tr>
</table>

<p>When all of the Panel settings are specified as desired, click the
<b>Generate Database</b> button.  Creation of the MDB file will begin, with a
progress bar indicating how far along the procedure is, and any errors or
warnings will be printed to the SVL window.  The Antibody update does NOT
use the progress bar on the panel, but does report progress and errors to the
SVL window.</p>


<a name="SVLCommands"></a>
<h2>SVL Commands</h2>

<a href="fcnref/pdb.htm" class="svl">pdb_List</a><br />
<a href="fcnref/pdb.htm" class="svl">pdb_Open</a><br />
<a href="../moe/fcnref/rcsb.htm" class="svl">rcsb_download</a><br />

<p><a href="fcnref/intropro.htm">Protein Functions</a>


<a name="References"></a>
<h2>References</h2>


<table width="100%" cellpadding="5" border="0">

<tr>
<td valign="top">[Berman&nbsp;2000]</td>
<td valign="top">
Berman, H.M., Westbrook, J., Feng, Z., Gilliland, G., Bhat, T.N., Weissig,
H., Shindyalov, I.N., Bourne, P.E.;  The Protein Data Bank;
<i>Nucleic Acids Research&nbsp;28</i> (<b>2000</b>) 235&ndash;242.
</td></tr>

<tr>
<td valign="top">[Berman&nbsp;2003]</td>
<td valign="top">
Berman, H.M., Henrick, K., Nakamura, H.;
Announcing the worldwide Protein Data Bank;
<i>Nat. Struct. Biol.&nbsp;10</i> (<b>2003</b>) 980.
</td></tr>

<tr>
  <td valign="top">[Chothia&nbsp;1997]</td>
  <td valign="top">Murzin, A.G., Brenner, S.E., Hubbard, T., Chothia, C.;
SCOP: A Structural Classification of Proteins Database for the
Investigation of Sequences and Structures;
<i>J. Mol. Biol. 247</i> (<b>1995</b>) 536&ndash;540.
<a href="http://scop.berkeley.edu/">http://scop.berkeley.edu/</a>.
  </td>
</tr>

<tr>
  <td valign="top">[Horn&nbsp;2003]</td>
  <td valign="top">Horn F, Bettler E, Oliveira L, Campagne F, Cohen FE,
  Vriend G.; GPCRDB: information system for G protein-coupled receptors;
<i>Nucleic Acids Res. 31</i> (<b>2003</b>) 294&ndash;297.
  </td>
</tr>

<tr>
<td valign="top">[IUPAC&nbsp;1998]</td>
<td valign="top">
Markley, J.L., Bax, A., Arata, Y., Hilbers, C.W., Kaptein, R., Sykes, B.D.,
Wright, P.E., Wüthrich, K.;
Recommendations for the Presentation of NMR Structures of Proteins and
Nucleic Acids;
<i>Pure &amp; Appl. Chem.&nbsp;70</i> (<b>1998</b>) 117&ndash;142.
</td></tr>

<tr>
<td valign="top">[Labute&nbsp;2005]</td>
<td valign="top">
Labute, P.; On the Perception of Molecules from 3D Atomic Coordinates;
<i>J. Chem. Inf. Model.&nbsp;45</i> (<b>2005</b>) 215&ndash;221.
</td></tr>

<tr>
  <td valign="top">[Weinstein&nbsp;1995]</td>
  <td valign="top">Ballesteros J. A., Weinstein H.;
    <i>Methods Neurosci. 25</i> (<b>1995</b>) 366&ndash;428.
  </td>
</tr>


</table>


<h2>See Also</h2>

<a href="../moe/gui/mainwin.htm">MOE Window</a><br />
<a href="../moe/gui/se.htm">Sequence Editor</a><br />
<a href="../moe/fcnref/rcsb.htm">RCSB Download</a><br />
<a href="prosearch.htm">MOE-SearchPDB</a><br />
<a href="../apps/crystal.htm">Crystal Parameters</a><br />
<a href="antibody.htm">Antibody Homology Modeling</a><br />
<a href="kinase.htm">Kinase Search</a><br />
<a href="projsrch.htm">Project Search</a><br />
<a href="moeproject.htm">MOE Project</a><br />
<br />

<a href="http://www.rcsb.org">RCSB Protein Data Bank</a>

<noscript>
	<hr noshade="noshade" />
	<font size="2"> Copyright &copy; 1997&ndash;2015
	<a href="http://www.chemcomp.com">Chemical Computing Group Inc.</a> </font>
</noscript>
<div id="MoeFooter"></div>
</body>
</html>
