<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">


<!--
!!    MOE Online Manuals
!!    COPYRIGHT (C) 1997-2015
!!        CHEMICAL COMPUTING GROUP INC.  ALL RIGHTS RESERVED.
!!-->

<head>

<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />

<script type="text/javascript" 
src="../../include/jsincludes_moe.js"></script>

<link rel="stylesheet" type="text/css"
href="../../include/manstyle.css" />



<meta keywords>
<meta functions pro_AtomCheck, pro_PeptideFlags>
<title>Protein Functions: pro_AtomCheck, pro_PeptideFlags</title>

</head>
<body>
<div id="MoeHeader"></div>
<noscript>
	<span class="warning">Warning: JavaScript is disabled. This page will not display correctly.</span>
	<h1 class="title">MOE Documentation</h1>
	<hr noshade="noshade" />
	<style>.LaTeX {color: #C08080;}</style>
</noscript>


<h2>Syntax</h2>

<pre>
    flags = <a class="fcnlink" href="#pro_AtomCheck">pro_AtomCheck</a> residue_keys
    flags = <a class="fcnlink" href="#pro_PeptideFlags">pro_PeptideFlags</a> residue_keys
</pre>

<p><a name="pro_AtomCheck"></a></p>
<h2>Description</h2>

<pre>
flags = <span class="fcndef">pro_AtomCheck</span> residue_keys
</pre>


<p>For each residue specified in <tt>residue_keys</tt>,
<tt>pro_AtomCheck</tt> checks the names of its heavy atoms (<tt>OXT</tt>
excepted) against those of its corresponding entry in the MOE standard
residue database. Residues with missing, extra, or duplicate atom names
return <tt>0</tt> in the corresponding position in the vector
<tt>flags</tt>, <tt>1</tt> otherwise.

<p>Example:

<pre>
    svl&gt; Close[]
    svl&gt; pro_ResAppend [0, ['ALA','CYS']]
    svl&gt; pro_AtomCheck Residues []
    [1,1]
</pre>

<p><a name="pro_PeptideFlags"></a></p>
<p><hr noshade="noshade" />

<pre>
flags = <span class="fcndef">pro_PeptideFlags</span> residue_keys
</pre>

<p>Sets <tt>flag(i)</tt> to <tt>1</tt> if there
exists a peptide bond between the residues <tt>residue_key(i)</tt>
and <tt>residue_key(i+1)</tt>, otherwise it sets it to <tt>0</tt>. The
length of the returned <tt>flags</tt> will be one less than that of
<tt>residue_keys</tt>.

<p>Example:

<pre>
    svl&gt; Close[]
    svl&gt; pro_ResAppend [0, ['ALA','CYS']]
    svl&gt; pro_ResAppend [0, 'ILE']      // ILE not peptide-bonded...
    svl&gt; pro_PeptideFlags Residues []  // ...to ALA-CYS
    [1,0]
</pre>

<h2>See Also</h2>

<a href="intropro.htm">Protein Functions</a><br />
<p>
    <a class="svl" href="pro_poly.htm">pro_Polymerize</a><br />
    <a class="svl" href="pro_stnd.htm">pro_StandardRes</a><br />
</p>


<noscript>
	<hr noshade="noshade" />
	<font size="2"> Copyright &copy; 1997&ndash;2015
	<a href="http://www.chemcomp.com">Chemical Computing Group Inc.</a> </font>
</noscript>
<div id="MoeFooter"></div>
</body>
</html>
